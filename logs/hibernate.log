[DEBUG] 2020-03-02 11:38:58.246 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-02 11:38:58.249 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-02 11:38:58.256 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-02 11:38:58.358 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-02 11:38:58.362 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-02 11:38:58.545 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-02 11:38:58.545 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-02 11:38:58.572 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-02 11:38:59.004 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-02 11:38:59.023 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-02 11:38:59.024 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-02 11:38:59.046 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-02 11:38:59.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14b54a8c
[DEBUG] 2020-03-02 11:38:59.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14b54a8c
[DEBUG] 2020-03-02 11:38:59.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14b54a8c
[DEBUG] 2020-03-02 11:38:59.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b8e7e65
[DEBUG] 2020-03-02 11:38:59.087 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@d4722e6
[DEBUG] 2020-03-02 11:38:59.087 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c0f7610
[DEBUG] 2020-03-02 11:38:59.088 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6255fd61
[DEBUG] 2020-03-02 11:38:59.088 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6255fd61
[DEBUG] 2020-03-02 11:38:59.088 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6255fd61
[DEBUG] 2020-03-02 11:38:59.089 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5bdfd4ce
[DEBUG] 2020-03-02 11:38:59.089 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5bdfd4ce
[DEBUG] 2020-03-02 11:38:59.089 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bdfd4ce
[DEBUG] 2020-03-02 11:38:59.090 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@511fccce
[DEBUG] 2020-03-02 11:38:59.090 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@511fccce
[DEBUG] 2020-03-02 11:38:59.090 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@511fccce
[DEBUG] 2020-03-02 11:38:59.091 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1ce44611
[DEBUG] 2020-03-02 11:38:59.091 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1ce44611
[DEBUG] 2020-03-02 11:38:59.091 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ce44611
[DEBUG] 2020-03-02 11:38:59.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4011826b
[DEBUG] 2020-03-02 11:38:59.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4011826b
[DEBUG] 2020-03-02 11:38:59.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4011826b
[DEBUG] 2020-03-02 11:38:59.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7a52645d
[DEBUG] 2020-03-02 11:38:59.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7a52645d
[DEBUG] 2020-03-02 11:38:59.093 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a52645d
[DEBUG] 2020-03-02 11:38:59.093 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7f35ed48
[DEBUG] 2020-03-02 11:38:59.093 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7f35ed48
[DEBUG] 2020-03-02 11:38:59.094 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f35ed48
[DEBUG] 2020-03-02 11:38:59.094 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58f42b9c
[DEBUG] 2020-03-02 11:38:59.094 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58f42b9c
[DEBUG] 2020-03-02 11:38:59.095 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d52dfca
[DEBUG] 2020-03-02 11:38:59.095 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d52dfca
[DEBUG] 2020-03-02 11:38:59.096 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2700a62f
[DEBUG] 2020-03-02 11:38:59.096 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2700a62f
[DEBUG] 2020-03-02 11:38:59.097 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@182efe17
[DEBUG] 2020-03-02 11:38:59.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@52f85f19
[DEBUG] 2020-03-02 11:38:59.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@201896da
[DEBUG] 2020-03-02 11:38:59.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@201896da
[DEBUG] 2020-03-02 11:38:59.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4b2f17ff
[DEBUG] 2020-03-02 11:38:59.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4b2f17ff
[DEBUG] 2020-03-02 11:38:59.103 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@31320067
[DEBUG] 2020-03-02 11:38:59.103 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31320067
[DEBUG] 2020-03-02 11:38:59.104 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a26f936
[DEBUG] 2020-03-02 11:38:59.104 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a26f936
[DEBUG] 2020-03-02 11:38:59.105 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@634b8b99
[DEBUG] 2020-03-02 11:38:59.105 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@634b8b99
[DEBUG] 2020-03-02 11:38:59.107 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@73abd2ed
[DEBUG] 2020-03-02 11:38:59.107 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@73abd2ed
[DEBUG] 2020-03-02 11:38:59.110 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5260a8fb
[DEBUG] 2020-03-02 11:38:59.110 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5260a8fb
[DEBUG] 2020-03-02 11:38:59.112 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370f400d
[DEBUG] 2020-03-02 11:38:59.112 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370f400d
[DEBUG] 2020-03-02 11:38:59.113 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25ede451
[DEBUG] 2020-03-02 11:38:59.113 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25ede451
[DEBUG] 2020-03-02 11:38:59.114 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6c23edd8
[DEBUG] 2020-03-02 11:38:59.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c23edd8
[DEBUG] 2020-03-02 11:38:59.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@33d3cd56
[DEBUG] 2020-03-02 11:38:59.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33d3cd56
[DEBUG] 2020-03-02 11:38:59.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@44fce155
[DEBUG] 2020-03-02 11:38:59.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@44fce155
[DEBUG] 2020-03-02 11:38:59.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@44fce155
[DEBUG] 2020-03-02 11:38:59.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61521dfe
[DEBUG] 2020-03-02 11:38:59.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@14fc6a96
[DEBUG] 2020-03-02 11:38:59.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14fc6a96
[DEBUG] 2020-03-02 11:38:59.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14fc6a96
[DEBUG] 2020-03-02 11:38:59.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@744a3fd7
[DEBUG] 2020-03-02 11:38:59.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@595c3f5c
[DEBUG] 2020-03-02 11:38:59.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@595c3f5c
[DEBUG] 2020-03-02 11:38:59.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@28f923a5
[DEBUG] 2020-03-02 11:38:59.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@28f923a5
[DEBUG] 2020-03-02 11:38:59.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c7bf458
[DEBUG] 2020-03-02 11:38:59.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c7bf458
[DEBUG] 2020-03-02 11:38:59.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@33fb1a02
[DEBUG] 2020-03-02 11:38:59.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@33fb1a02
[DEBUG] 2020-03-02 11:38:59.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35c1e781
[DEBUG] 2020-03-02 11:38:59.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35c1e781
[DEBUG] 2020-03-02 11:38:59.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4dd92de
[DEBUG] 2020-03-02 11:38:59.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6495306
[DEBUG] 2020-03-02 11:38:59.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6495306
[DEBUG] 2020-03-02 11:38:59.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6495306
[DEBUG] 2020-03-02 11:38:59.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36923db3
[DEBUG] 2020-03-02 11:38:59.129 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36923db3
[DEBUG] 2020-03-02 11:38:59.129 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36923db3
[DEBUG] 2020-03-02 11:38:59.131 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@27f9e26
[DEBUG] 2020-03-02 11:38:59.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@79091bed
[DEBUG] 2020-03-02 11:38:59.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@342a4850
[DEBUG] 2020-03-02 11:38:59.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@342a4850
[DEBUG] 2020-03-02 11:38:59.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@342a4850
[DEBUG] 2020-03-02 11:38:59.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75bc4d9d
[DEBUG] 2020-03-02 11:38:59.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75bc4d9d
[DEBUG] 2020-03-02 11:38:59.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75bc4d9d
[DEBUG] 2020-03-02 11:38:59.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@44a54f82
[DEBUG] 2020-03-02 11:38:59.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3ed6e743
[DEBUG] 2020-03-02 11:38:59.135 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5953bebe
[DEBUG] 2020-03-02 11:38:59.135 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5953bebe
[DEBUG] 2020-03-02 11:38:59.135 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4725dfa5
[DEBUG] 2020-03-02 11:38:59.136 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6cf554de
[DEBUG] 2020-03-02 11:38:59.137 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6cf554de
[DEBUG] 2020-03-02 11:38:59.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@34bfa1f6
[DEBUG] 2020-03-02 11:38:59.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34bfa1f6
[DEBUG] 2020-03-02 11:38:59.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a5505b
[DEBUG] 2020-03-02 11:38:59.140 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a166cf3
[DEBUG] 2020-03-02 11:38:59.144 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@63f277f
[DEBUG] 2020-03-02 11:38:59.147 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5417332f
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5417332f
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20138f71
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@152163cb
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50a8f872
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f8a14d7
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@235e7850
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d7f68cb
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a837c7e
[DEBUG] 2020-03-02 11:38:59.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65e0f955
[DEBUG] 2020-03-02 11:38:59.181 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-02 11:38:59.182 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-02 11:38:59.182 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 11:38:59.182 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 11:38:59.183 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-02 11:38:59.184 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-02 11:38:59.184 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-02 11:38:59.185 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 11:38:59.186 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-02 11:38:59.186 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-02 11:38:59.186 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-02 11:38:59.187 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-02 11:38:59.187 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 11:38:59.188 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-02 11:38:59.195 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-02 11:38:59.195 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-02 11:38:59.195 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-02 11:38:59.347 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-02 11:39:00.052 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-02 11:39:00.052 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-02 11:39:00.052 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-02 11:39:00.093 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-02 11:39:00.118 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-02 11:39:00.157 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-02 11:39:00.220 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-02 11:39:00.224 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@527555ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34850783]
[DEBUG] 2020-03-02 11:39:00.324 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.354 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.366 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-03-02 11:39:00.369 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-02 11:39:00.408 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.412 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-02 11:39:00.415 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-02 11:39:00.418 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-02 11:39:00.420 [http-nio-8080-exec-2] PropertyBinder - Building property userId
[DEBUG] 2020-03-02 11:39:00.425 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.427 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.428 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.429 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 11:39:00.429 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-02 11:39:00.429 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 11:39:00.429 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-03-02 11:39:00.431 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.433 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.435 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.443 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.443 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.444 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.447 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.447 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.448 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:39:00.450 [http-nio-8080-exec-2] PropertyBinder - Building property faqs
[DEBUG] 2020-03-02 11:39:00.450 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.451 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - Building property gender
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] PropertyBinder - Building property picture
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.452 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] PropertyBinder - Building property roles
[DEBUG] 2020-03-02 11:39:00.453 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] PropertyBinder - Building property trailers
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-02 11:39:00.454 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-02 11:39:00.455 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-02 11:39:00.455 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-02 11:39:00.455 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-03-02 11:39:00.456 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:39:00.457 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.458 [http-nio-8080-exec-2] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-02 11:39:00.458 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-02 11:39:00.466 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.466 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-02 11:39:00.466 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-02 11:39:00.466 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-02 11:39:00.466 [http-nio-8080-exec-2] PropertyBinder - Building property roleId
[DEBUG] 2020-03-02 11:39:00.467 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.467 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.467 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.467 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-02 11:39:00.467 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.467 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.475 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.475 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-02 11:39:00.475 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-02 11:39:00.475 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-02 11:39:00.475 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2020-03-02 11:39:00.476 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.476 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.476 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-02 11:39:00.476 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.476 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:39:00.477 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.477 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.480 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:39:00.481 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:39:00.482 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.482 [http-nio-8080-exec-2] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-02 11:39:00.482 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-02 11:39:00.483 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.483 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-02 11:39:00.483 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-02 11:39:00.483 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-02 11:39:00.483 [http-nio-8080-exec-2] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-02 11:39:00.483 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - Building property author
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - Building property cover
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - Building property duration
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.484 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - Building property link
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - Building property summary
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:39:00.485 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] PropertyBinder - Building property video
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-02 11:39:00.486 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] PropertyBinder - Building property faqId
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.487 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - Building property category
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.488 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-02 11:39:00.489 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-02 11:39:00.491 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] PropertyBinder - Building property genreId
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-02 11:39:00.492 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:39:00.493 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-02 11:39:00.494 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-02 11:39:00.496 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.496 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-02 11:39:00.496 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-02 11:39:00.496 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-02 11:39:00.496 [http-nio-8080-exec-2] PropertyBinder - Building property filmId
[DEBUG] 2020-03-02 11:39:00.496 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] PropertyBinder - Building property cover
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.497 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.498 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] PropertyBinder - Building property crews
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] PropertyBinder - Building property director
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] PropertyBinder - Building property duration
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-02 11:39:00.499 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] PropertyBinder - Building property episode
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] PropertyBinder - Building property genres
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] PropertyBinder - Building property link
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-02 11:39:00.500 [http-nio-8080-exec-2] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - Building property summary
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-02 11:39:00.501 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-02 11:39:00.502 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-02 11:39:00.502 [http-nio-8080-exec-2] PropertyBinder - Building property video
[DEBUG] 2020-03-02 11:39:00.502 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:00.502 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:39:00.502 [http-nio-8080-exec-2] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-02 11:39:00.502 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] PropertyBinder - Building property crewId
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.503 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 11:39:00.504 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] PropertyBinder - Building property profession
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-02 11:39:00.505 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 11:39:00.506 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 11:39:00.507 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 11:39:00.508 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-02 11:39:00.508 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:39:00.513 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:39:00.515 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-02 11:39:00.515 [http-nio-8080-exec-2] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-02 11:39:00.515 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-02 11:39:00.515 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:39:00.515 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-02 11:39:00.516 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-02 11:39:00.517 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.519 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.519 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:00.519 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.519 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:00.519 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.520 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.520 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.522 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.577 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-02 11:39:00.578 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-02 11:39:00.579 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-02 11:39:00.648 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-02 11:39:00.677 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-02 11:39:00.677 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25532b01, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-02 11:39:00.700 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:39:00.700 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.718 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:39:00.719 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:39:00.719 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:39:00.719 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:39:00.720 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:39:00.720 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:00.720 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:39:00.720 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:39:00.721 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:39:00.721 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:00.724 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:39:00.724 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:00.729 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-02 11:39:00.731 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-02 11:39:00.731 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@527555ad] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3dd67ed2]
[DEBUG] 2020-03-02 11:39:00.774 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:39:00.774 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:00.786 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:39:00.786 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:01.056 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:39:01.056 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:39:01.056 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:39:01.056 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:39:01.089 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:39:01.089 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:39:01.089 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:39:01.089 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:39:01.113 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:39:01.113 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:01.113 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:39:01.113 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:01.135 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:39:01.135 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:39:01.135 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:39:01.135 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:39:01.175 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:39:01.175 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:01.178 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:39:01.178 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:01.232 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:39:01.232 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:01.234 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:39:01.234 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:01.275 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-02 11:39:01.277 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-02 11:39:01.281 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:39:01.282 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-02 11:39:01.283 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-02 11:39:01.286 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:39:01.286 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-02 11:39:01.286 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-02 11:39:01.286 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.287 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-02 11:39:01.287 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-02 11:39:01.287 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.319 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625b452e]
[DEBUG] 2020-03-02 11:39:01.320 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.320 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.320 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:39:01.327 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@556d7f0f]
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17667934]
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e041bda]
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5b476d]
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.329 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.331 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.331 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dc0341]
[DEBUG] 2020-03-02 11:39:01.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.333 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70836acc]
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c66d2c]
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48226f0]
[DEBUG] 2020-03-02 11:39:01.334 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163f9441]
[DEBUG] 2020-03-02 11:39:01.335 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:39:01.335 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:39:01.335 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.335 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:39:01.335 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:39:01.336 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.336 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cff01b8]
[DEBUG] 2020-03-02 11:39:01.336 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2d22f4]
[DEBUG] 2020-03-02 11:39:01.336 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.336 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.336 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.338 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@30c61ffc]
[DEBUG] 2020-03-02 11:39:01.341 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.341 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.341 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.358 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.366 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2f651b]
[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f22bf88]
[DEBUG] 2020-03-02 11:39:01.368 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1422e669]
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13225e4b]
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afd05b0]
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20492d98]
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@228a4470]
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f81514]
[DEBUG] 2020-03-02 11:39:01.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.375 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:39:01.375 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.375 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.375 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69b4cd7e]
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a21f38]
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.376 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:39:01.377 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:39:01.378 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.378 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69fb7fb8]
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fa6f660]
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@52e2b27c]
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.379 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.380 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.382 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-02 11:39:01.403 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49bd282d]
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76f49c53]
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18c1ff79]
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a6ca93]
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10e2d090]
[DEBUG] 2020-03-02 11:39:01.404 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@428d83e7]
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27461e69]
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9fa33dd]
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@583ce35c]
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.405 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.406 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.408 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.408 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:39:01.408 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fcc04a0]
[DEBUG] 2020-03-02 11:39:01.408 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:39:01.408 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.408 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38e985ee]
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.409 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381a0b42]
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aeab656]
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e588210]
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec469da]
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:39:01.410 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23992eff]
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1e19ef]
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@96f2598]
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.411 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11cc8762]
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f708a50]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74850469]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223eeab1]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19a7c6ac]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bfe3b0]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fc50de2]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7b1bc9]
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.413 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.414 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d4e2a8c]
[DEBUG] 2020-03-02 11:39:01.414 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.414 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.414 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.415 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d472f]
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8fcff39]
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32550353]
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e54524]
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c8f7556]
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@486a38ce]
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@523fe50b]
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bca460d]
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.417 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ce8abe7]
[DEBUG] 2020-03-02 11:39:01.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.418 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.418 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.419 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.419 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-02 11:39:01.420 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-02 11:39:01.420 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e7e6e1]
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48ba118e]
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@576fe0c7]
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.421 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.422 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.422 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-02 11:39:01.422 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:39:01.422 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3058d425]
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68dc28d8]
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@409d94dc]
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.423 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.424 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.424 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-02 11:39:01.424 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:39:01.424 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:39:01.424 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36129916]
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c99b545]
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.425 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.426 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52761c40]
[DEBUG] 2020-03-02 11:39:01.426 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51918f37]
[DEBUG] 2020-03-02 11:39:01.426 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40333bdd]
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4731b7a4]
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2547271e]
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f2fcb6]
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-02 11:39:01.427 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.428 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.428 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.428 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@77637704]
[DEBUG] 2020-03-02 11:39:01.428 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.428 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.428 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.429 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.430 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.430 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fa7675a]
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e6849b1]
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b8bd2d5]
[DEBUG] 2020-03-02 11:39:01.431 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67055e8c]
[DEBUG] 2020-03-02 11:39:01.432 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2becb61c]
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73981e3c]
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@562067e0]
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b9ca296]
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.433 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@331e4281]
[DEBUG] 2020-03-02 11:39:01.434 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.435 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.435 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.435 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.437 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:39:01.437 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:39:01.437 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.438 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d9b47b7]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bf52b12]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e5d3f4]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577496a0]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e67c8ce]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c88cfab]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cdfbd]
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-02 11:39:01.439 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.440 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-02 11:39:01.440 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b606594]
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f459a72]
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a88afbe]
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.441 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b568518]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3759a3e3]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f9102d]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5be83def]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bfb27ca]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61c7c9ed]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc3d580]
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-02 11:39:01.443 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a8e1733]
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1962be37]
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6aebd39d]
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-02 11:39:01.444 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:01.445 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:01.445 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:01.449 [http-nio-8080-exec-2] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a2babc0]
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@446be2e]
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d280e1f]
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:39:01.450 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8ad1d1]
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:39:01.451 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a4eefa8]
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@775b4608]
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.452 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.453 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-02 11:39:01.453 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:39:01.453 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:39:01.453 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:39:01.461 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d95c9f1]
[DEBUG] 2020-03-02 11:39:01.461 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f57fc3]
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.462 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:39:01.463 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.463 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.465 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.465 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b148e2a]
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f419414]
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b293b46]
[DEBUG] 2020-03-02 11:39:01.466 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18fbeb03]
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e3cc300]
[DEBUG] 2020-03-02 11:39:01.467 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29588e37]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48c08d2c]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25048b35]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@137bd17c]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cc618d6]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d9a7958]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3027a7a6]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7e80e3]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b23bd2]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78ccd8e5]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@755b5acd]
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.468 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.469 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13ca12df]
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c276b2]
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d786380]
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae8f37b]
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19c9f366]
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:39:01.472 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2717ea66]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ac9a6d4]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c4d3628]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a73e563]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@422f7091]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5978106]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@30de0bea]
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.473 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.474 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cd1e5ae]
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f7c283]
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:39:01.475 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.476 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.476 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-02 11:39:01.476 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ee12205]
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55491880]
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-02 11:39:01.477 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.481 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.481 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.482 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.483 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-02 11:39:01.483 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-02 11:39:01.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ddaadf]
[DEBUG] 2020-03-02 11:39:01.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@754d325c]
[DEBUG] 2020-03-02 11:39:01.484 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:39:01.484 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:39:01.484 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:39:01.484 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76f74ba9]
[DEBUG] 2020-03-02 11:39:01.484 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a3448f9]
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@913eb8d]
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b735a0]
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:39:01.485 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:39:01.486 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-02 11:39:01.486 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-02 11:39:01.525 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-02 11:39:01.525 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-02 11:39:01.526 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-02 11:39:01.535 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-02 11:39:01.536 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-02 11:39:01.536 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-02 11:39:01.536 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-02 11:39:01.539 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3be214b
[DEBUG] 2020-03-02 11:39:01.541 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 7357c133-fdc8-45ab-8fa7-e313c43ce1b2 (<unnamed>)
[DEBUG] 2020-03-02 11:39:01.542 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-02 11:39:01.627 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-02 11:39:01.669 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:39:01.687 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5dc446c6
[DEBUG] 2020-03-02 11:39:01.714 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:39:01.719 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:39:01.729 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-02 11:39:01.750 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-02 11:39:01.772 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-03-02 11:39:01.773 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-03-02 11:39:01.774 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-02 11:39:01.775 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-03-02 11:39:01.783 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-03-02 11:39:01.783 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-02 11:39:01.783 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-03-02 11:39:01.783 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:39:01.790 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:39:01.790 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:39:01.790 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:39:01.806 [http-nio-8080-exec-2] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:39:01.833 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:01.835 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:01.843 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:39:01.844 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:39:01.845 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.846 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:39:01.846 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.846 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:39:01.846 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.846 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:01.846 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.849 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:01.857 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:39:01.859 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:39:01.899 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:01.908 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.910 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1201e2a5
[DEBUG] 2020-03-02 11:39:01.911 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.911 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:01.911 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:01.911 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:39:01.912 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:39:01.915 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:01.916 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:01.917 [http-nio-8080-exec-2] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:01.917 [http-nio-8080-exec-2] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:01.918 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2020-03-02 11:39:01.918 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:01.918 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:01.918 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:39:01.918 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:01.919 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:01.920 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:01.924 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:39:02.221 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:39:02.221 [http-nio-8080-exec-4] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:39:02.223 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:02.223 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:02.223 [http-nio-8080-exec-4] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.224 [http-nio-8080-exec-4] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:02.227 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:39:02.228 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:39:02.228 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@75da48de
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:39:02.229 [http-nio-8080-exec-4] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:39:02.233 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:02.233 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] Loader - Done entity load
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:02.234 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:39:10.547 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:39:10.548 [http-nio-8080-exec-5] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:39:10.550 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:10.550 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.551 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:39:10.552 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.552 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:39:10.554 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.554 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:39:10.555 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.555 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:10.555 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.555 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:10.556 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:39:10.559 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@72431f92
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:39:10.563 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:10.565 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:10.566 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:39:10.594 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:39:10.594 [http-nio-8080-exec-7] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:39:10.597 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.598 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:39:10.601 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:39:10.605 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.611 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5e7b5312
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:39:10.612 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:39:10.614 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:39:10.614 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:39:10.614 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:39:10.614 [http-nio-8080-exec-7] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:10.614 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-03-02 11:39:10.615 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:39:10.615 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:39:10.616 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:39:10.617 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:53:48.479 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-02 11:53:48.482 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-02 11:53:48.485 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-02 11:53:48.582 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-02 11:53:48.584 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-02 11:53:48.694 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-02 11:53:48.696 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-02 11:53:48.697 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-02 11:53:48.867 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-02 11:53:48.898 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-02 11:53:48.899 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-02 11:53:48.920 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-02 11:53:48.956 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f7aaa20
[DEBUG] 2020-03-02 11:53:48.956 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f7aaa20
[DEBUG] 2020-03-02 11:53:48.956 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f7aaa20
[DEBUG] 2020-03-02 11:53:48.957 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7169921d
[DEBUG] 2020-03-02 11:53:48.957 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ac56da1
[DEBUG] 2020-03-02 11:53:48.958 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@26f60031
[DEBUG] 2020-03-02 11:53:48.960 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1986da6d
[DEBUG] 2020-03-02 11:53:48.960 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1986da6d
[DEBUG] 2020-03-02 11:53:48.960 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1986da6d
[DEBUG] 2020-03-02 11:53:48.962 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@142d9e15
[DEBUG] 2020-03-02 11:53:48.962 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@142d9e15
[DEBUG] 2020-03-02 11:53:48.962 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@142d9e15
[DEBUG] 2020-03-02 11:53:48.963 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d42323b
[DEBUG] 2020-03-02 11:53:48.963 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d42323b
[DEBUG] 2020-03-02 11:53:48.963 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d42323b
[DEBUG] 2020-03-02 11:53:48.964 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@71f13295
[DEBUG] 2020-03-02 11:53:48.964 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@71f13295
[DEBUG] 2020-03-02 11:53:48.964 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71f13295
[DEBUG] 2020-03-02 11:53:48.965 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@156c6d81
[DEBUG] 2020-03-02 11:53:48.966 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@156c6d81
[DEBUG] 2020-03-02 11:53:48.966 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@156c6d81
[DEBUG] 2020-03-02 11:53:48.967 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a685357
[DEBUG] 2020-03-02 11:53:48.967 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a685357
[DEBUG] 2020-03-02 11:53:48.967 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a685357
[DEBUG] 2020-03-02 11:53:48.968 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4971be3
[DEBUG] 2020-03-02 11:53:48.968 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4971be3
[DEBUG] 2020-03-02 11:53:48.968 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4971be3
[DEBUG] 2020-03-02 11:53:48.969 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6fe69b2c
[DEBUG] 2020-03-02 11:53:48.969 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6fe69b2c
[DEBUG] 2020-03-02 11:53:48.969 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c858316
[DEBUG] 2020-03-02 11:53:48.969 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c858316
[DEBUG] 2020-03-02 11:53:48.970 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@221a97e1
[DEBUG] 2020-03-02 11:53:48.970 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@221a97e1
[DEBUG] 2020-03-02 11:53:48.970 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33aff743
[DEBUG] 2020-03-02 11:53:48.971 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ff12947
[DEBUG] 2020-03-02 11:53:48.971 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@65842993
[DEBUG] 2020-03-02 11:53:48.971 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65842993
[DEBUG] 2020-03-02 11:53:48.972 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4d069cca
[DEBUG] 2020-03-02 11:53:48.972 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4d069cca
[DEBUG] 2020-03-02 11:53:48.973 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2ca9385b
[DEBUG] 2020-03-02 11:53:48.973 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2ca9385b
[DEBUG] 2020-03-02 11:53:48.974 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@43e8837f
[DEBUG] 2020-03-02 11:53:48.974 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@43e8837f
[DEBUG] 2020-03-02 11:53:48.974 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57cfeaf4
[DEBUG] 2020-03-02 11:53:48.974 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57cfeaf4
[DEBUG] 2020-03-02 11:53:48.975 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@51e1fc5f
[DEBUG] 2020-03-02 11:53:48.975 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@51e1fc5f
[DEBUG] 2020-03-02 11:53:48.978 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5970fedc
[DEBUG] 2020-03-02 11:53:48.979 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5970fedc
[DEBUG] 2020-03-02 11:53:48.980 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@35a5f625
[DEBUG] 2020-03-02 11:53:48.980 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@35a5f625
[DEBUG] 2020-03-02 11:53:48.981 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16619f2a
[DEBUG] 2020-03-02 11:53:48.981 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16619f2a
[DEBUG] 2020-03-02 11:53:48.982 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c7a8d64
[DEBUG] 2020-03-02 11:53:48.982 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c7a8d64
[DEBUG] 2020-03-02 11:53:48.983 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@71ba5452
[DEBUG] 2020-03-02 11:53:48.983 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71ba5452
[DEBUG] 2020-03-02 11:53:48.983 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@13259690
[DEBUG] 2020-03-02 11:53:48.983 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13259690
[DEBUG] 2020-03-02 11:53:48.983 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13259690
[DEBUG] 2020-03-02 11:53:48.986 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6bb9f8f7
[DEBUG] 2020-03-02 11:53:48.987 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3e67e76f
[DEBUG] 2020-03-02 11:53:48.987 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e67e76f
[DEBUG] 2020-03-02 11:53:48.988 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e67e76f
[DEBUG] 2020-03-02 11:53:48.988 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7798a9a3
[DEBUG] 2020-03-02 11:53:48.989 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7ea84055
[DEBUG] 2020-03-02 11:53:48.989 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7ea84055
[DEBUG] 2020-03-02 11:53:48.989 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3cc559c1
[DEBUG] 2020-03-02 11:53:48.990 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3cc559c1
[DEBUG] 2020-03-02 11:53:48.990 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65980c6a
[DEBUG] 2020-03-02 11:53:48.991 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65980c6a
[DEBUG] 2020-03-02 11:53:48.992 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@17a1d94f
[DEBUG] 2020-03-02 11:53:48.992 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@17a1d94f
[DEBUG] 2020-03-02 11:53:48.994 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e15e38
[DEBUG] 2020-03-02 11:53:48.994 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e15e38
[DEBUG] 2020-03-02 11:53:48.995 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@9190b43
[DEBUG] 2020-03-02 11:53:48.996 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7621aee4
[DEBUG] 2020-03-02 11:53:48.996 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7621aee4
[DEBUG] 2020-03-02 11:53:48.996 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7621aee4
[DEBUG] 2020-03-02 11:53:49.000 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a2fe47c
[DEBUG] 2020-03-02 11:53:49.000 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a2fe47c
[DEBUG] 2020-03-02 11:53:49.000 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a2fe47c
[DEBUG] 2020-03-02 11:53:49.001 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@11ce06a5
[DEBUG] 2020-03-02 11:53:49.002 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6ac602db
[DEBUG] 2020-03-02 11:53:49.003 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@cdf23d6
[DEBUG] 2020-03-02 11:53:49.003 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@cdf23d6
[DEBUG] 2020-03-02 11:53:49.003 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@cdf23d6
[DEBUG] 2020-03-02 11:53:49.004 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25e78c97
[DEBUG] 2020-03-02 11:53:49.004 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25e78c97
[DEBUG] 2020-03-02 11:53:49.004 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25e78c97
[DEBUG] 2020-03-02 11:53:49.004 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@23c2f812
[DEBUG] 2020-03-02 11:53:49.004 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@27901c11
[DEBUG] 2020-03-02 11:53:49.005 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@71a4266e
[DEBUG] 2020-03-02 11:53:49.005 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71a4266e
[DEBUG] 2020-03-02 11:53:49.005 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a4ce241
[DEBUG] 2020-03-02 11:53:49.006 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@55bb2ce2
[DEBUG] 2020-03-02 11:53:49.006 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55bb2ce2
[DEBUG] 2020-03-02 11:53:49.007 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67ea72fd
[DEBUG] 2020-03-02 11:53:49.007 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67ea72fd
[DEBUG] 2020-03-02 11:53:49.007 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@468c3f27
[DEBUG] 2020-03-02 11:53:49.007 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4bcd7ec6
[DEBUG] 2020-03-02 11:53:49.008 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49ac5970
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@88626c9
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@88626c9
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b3c2c0c
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33c0409f
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@229d1f8f
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f12173f
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55b4029d
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64c1640c
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2eea6e7c
[DEBUG] 2020-03-02 11:53:49.011 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11fe2f71
[DEBUG] 2020-03-02 11:53:49.044 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-02 11:53:49.044 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-02 11:53:49.045 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 11:53:49.047 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 11:53:49.048 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-02 11:53:49.049 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-02 11:53:49.049 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-02 11:53:49.050 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 11:53:49.051 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-02 11:53:49.051 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-02 11:53:49.052 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-02 11:53:49.052 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-02 11:53:49.052 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 11:53:49.052 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-02 11:53:49.059 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-02 11:53:49.059 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-02 11:53:49.059 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-02 11:53:49.163 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-02 11:53:49.447 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-02 11:53:49.447 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-02 11:53:49.447 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-02 11:53:49.467 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-02 11:53:49.481 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-02 11:53:49.602 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-02 11:53:49.639 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-02 11:53:49.642 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@481013ab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@40058ee4]
[DEBUG] 2020-03-02 11:53:49.678 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.697 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.700 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-03-02 11:53:49.702 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-02 11:53:49.720 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.723 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-02 11:53:49.737 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-02 11:53:49.739 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-02 11:53:49.742 [http-nio-8080-exec-2] PropertyBinder - Building property userId
[DEBUG] 2020-03-02 11:53:49.746 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.747 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.747 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-02 11:53:49.747 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-02 11:53:49.747 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-02 11:53:49.747 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 11:53:49.748 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-03-02 11:53:49.749 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.750 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.751 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.759 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.759 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.759 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.760 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.760 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.760 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:53:49.763 [http-nio-8080-exec-2] PropertyBinder - Building property faqs
[DEBUG] 2020-03-02 11:53:49.763 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.763 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.764 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.764 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.765 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - Building property gender
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] PropertyBinder - Building property picture
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.766 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] PropertyBinder - Building property roles
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.767 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] PropertyBinder - Building property trailers
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-02 11:53:49.768 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-03-02 11:53:49.769 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:53:49.769 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.769 [http-nio-8080-exec-2] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-02 11:53:49.770 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-02 11:53:49.771 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.771 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-02 11:53:49.771 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-02 11:53:49.771 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-02 11:53:49.771 [http-nio-8080-exec-2] PropertyBinder - Building property roleId
[DEBUG] 2020-03-02 11:53:49.772 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.772 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.772 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.772 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-02 11:53:49.772 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.772 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.780 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.780 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-02 11:53:49.780 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-02 11:53:49.780 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-02 11:53:49.780 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.781 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.783 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:53:49.783 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:53:49.783 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.783 [http-nio-8080-exec-2] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-02 11:53:49.783 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-02 11:53:49.784 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.784 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-02 11:53:49.784 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-02 11:53:49.785 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] PropertyBinder - Building property author
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] PropertyBinder - Building property cover
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.786 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - Building property duration
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - Building property link
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-02 11:53:49.787 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - Building property summary
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-02 11:53:49.788 [http-nio-8080-exec-2] PropertyBinder - Building property video
[DEBUG] 2020-03-02 11:53:49.789 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:53:49.789 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.789 [http-nio-8080-exec-2] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-02 11:53:49.789 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-02 11:53:49.789 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.789 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - Building property faqId
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - Building property category
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:53:49.790 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-02 11:53:49.791 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] PropertyBinder - Building property genreId
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.792 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:53:49.793 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-02 11:53:49.794 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] PropertyBinder - Building property filmId
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.795 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] PropertyBinder - Building property cover
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:53:49.796 [http-nio-8080-exec-2] PropertyBinder - Building property crews
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] PropertyBinder - Building property director
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-02 11:53:49.797 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-02 11:53:49.798 [http-nio-8080-exec-2] PropertyBinder - Building property duration
[DEBUG] 2020-03-02 11:53:49.798 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.798 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-02 11:53:49.798 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-02 11:53:49.798 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-02 11:53:49.798 [http-nio-8080-exec-2] PropertyBinder - Building property episode
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] PropertyBinder - Building property genres
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] PropertyBinder - Building property link
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-02 11:53:49.799 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - Building property summary
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] PropertyBinder - Building property video
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-02 11:53:49.800 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-02 11:53:49.801 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.801 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-02 11:53:49.801 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-02 11:53:49.801 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-02 11:53:49.801 [http-nio-8080-exec-2] PropertyBinder - Building property crewId
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.802 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 11:53:49.803 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] PropertyBinder - Building property profession
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-02 11:53:49.804 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-02 11:53:49.805 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-02 11:53:49.805 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-02 11:53:49.805 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-02 11:53:49.806 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-02 11:53:49.807 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-02 11:53:49.813 [http-nio-8080-exec-2] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:53:49.814 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-02 11:53:49.816 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:53:49.817 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-02 11:53:49.818 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:53:49.818 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:53:49.818 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:53:49.818 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-02 11:53:49.818 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-02 11:53:49.818 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.819 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.819 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:49.819 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.819 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:49.819 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.820 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.820 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.824 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-02 11:53:49.824 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.824 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.824 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:49.824 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.826 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:49.826 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.826 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.826 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.873 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-03-02 11:53:49.874 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-02 11:53:49.875 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-02 11:53:49.932 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-02 11:53:49.954 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-02 11:53:49.954 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@294c9ca7, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-02 11:53:49.974 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:53:49.975 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:49.977 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:53:49.977 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:53:49.978 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:53:49.978 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:53:49.980 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:53:49.980 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:49.984 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:53:49.984 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:53:49.989 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:53:49.989 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:49.992 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:53:49.992 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:49.996 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-02 11:53:49.997 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-02 11:53:49.997 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@481013ab] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@66b054e0]
[DEBUG] 2020-03-02 11:53:50.037 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:53:50.037 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:50.044 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:53:50.044 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:50.248 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:53:50.248 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:53:50.248 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:53:50.248 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:53:50.272 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:53:50.272 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:53:50.273 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:53:50.273 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:53:50.283 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:53:50.283 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:50.283 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:53:50.283 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:50.292 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:53:50.292 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:53:50.293 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:53:50.293 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:53:50.315 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:53:50.316 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:50.317 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:53:50.318 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:50.356 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:53:50.357 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:50.357 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:53:50.357 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:50.376 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-02 11:53:50.378 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:53:50.379 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-02 11:53:50.379 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-02 11:53:50.379 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-02 11:53:50.379 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-02 11:53:50.383 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:53:50.383 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-02 11:53:50.384 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-02 11:53:50.384 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-02 11:53:50.384 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-02 11:53:50.385 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-02 11:53:50.388 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.410 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76cced3f]
[DEBUG] 2020-03-02 11:53:50.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.412 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:53:50.415 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1539800a]
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ac1cc5]
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2875b5db]
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b87c2b0]
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.416 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72433c37]
[DEBUG] 2020-03-02 11:53:50.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.417 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b4ef0d8]
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efa6be3]
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.418 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.419 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6877836a]
[DEBUG] 2020-03-02 11:53:50.419 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@754f58f4]
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@465d27fc]
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4178184b]
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.420 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.421 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@cc92d3f]
[DEBUG] 2020-03-02 11:53:50.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.423 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.423 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.434 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.445 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac0d6f4]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c91a07b]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8c08a8]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46e7127b]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2564e52f]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c71b80]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503e339f]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52f1f92a]
[DEBUG] 2020-03-02 11:53:50.448 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e46f3ef]
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@743f5797]
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:53:50.449 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4149e81f]
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f448c4e]
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7bcebbf2]
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.450 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-02 11:53:50.467 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14188ac5]
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64ee788d]
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a7d877c]
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b705af6]
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c4d7705]
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ded4b83]
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.469 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75e18750]
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72576b3c]
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12c35e1c]
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.470 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.471 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404335c4]
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13f24e9]
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-02 11:53:50.472 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ea958c5]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4242f21b]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a229ed6]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6052bdeb]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fe4b63d]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aacf9cf]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@434e15c0]
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.473 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.475 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8b15ca]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241706f8]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46c165c6]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76bb6e92]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a07967b]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e9b4a3b]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33b9ef7b]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e5bd860]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@48b9219e]
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.476 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.477 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.477 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.477 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-02 11:53:50.477 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106988e6]
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5105b41a]
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5af69ef4]
[DEBUG] 2020-03-02 11:53:50.478 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb24bb]
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7892e55c]
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ef3e57c]
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@309cc168]
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2fc53c]
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.479 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2f865c0]
[DEBUG] 2020-03-02 11:53:50.480 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.480 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.480 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.481 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.481 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a0a663]
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:53:50.482 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47a224ad]
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94a9227]
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1949aed3]
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65b91c5f]
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38bf7165]
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.483 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.484 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.484 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.484 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-02 11:53:50.484 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:53:50.484 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:53:50.484 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:53:50.485 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:53:50.485 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd47f97]
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.486 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3431e114]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38217b06]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba932f0]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20ab49d0]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63fbb481]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50b10ab3]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd9ce7]
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.487 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1e1f2265]
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.488 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de17ec1]
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2611e861]
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.491 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.492 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d09af17]
[DEBUG] 2020-03-02 11:53:50.492 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5489f9]
[DEBUG] 2020-03-02 11:53:50.493 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.493 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22af2a12]
[DEBUG] 2020-03-02 11:53:50.493 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f149fd1]
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fb5f433]
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1081b97d]
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:53:50.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:53:50.497 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.497 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-02 11:53:50.497 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.497 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.497 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.498 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@10007238]
[DEBUG] 2020-03-02 11:53:50.498 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.498 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.498 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.498 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.499 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-02 11:53:50.500 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6960efad]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a95ad7c]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2ce2f1]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25f755e]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77837be6]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8ad627]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bba87ad]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@486b29f3]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@173348bc]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5270a2a5]
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.501 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.502 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a95e408]
[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:53:50.505 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30dcd49c]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48f58d27]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d059595]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b47172c]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6948ec]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291178d3]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c6d72ad]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e184013]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@490ca3a8]
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.506 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.507 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-02 11:53:50.507 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:50.507 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:50.507 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@351031cf]
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46a5d815]
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6028ec97]
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.509 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54823714]
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66404ac0]
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@412b5ecb]
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:53:50.510 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:53:50.511 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1729a014]
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b7c4b43]
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.516 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.517 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:53:50.517 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.517 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.518 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.518 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4080b67c]
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d71b13]
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.519 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-02 11:53:50.520 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:53:50.520 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20f1d5f5]
[DEBUG] 2020-03-02 11:53:50.520 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c125d7b]
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55a2de47]
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b05a80d]
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75310c0b]
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53529760]
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.521 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401a6c70]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ed4e0e1]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@597a8dcc]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a90037f]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e82cd1d]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5768fbc4]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a710808]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@103073c2]
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.522 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.523 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.523 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-02 11:53:50.523 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-02 11:53:50.523 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4472ecd3]
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a5f61cc]
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@341fc5bb]
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55af83f5]
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.524 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.525 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9b22b0]
[DEBUG] 2020-03-02 11:53:50.525 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:53:50.525 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:53:50.525 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:53:50.525 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:53:50.525 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62569fb6]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bcf0822]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18922d49]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4549a553]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13343963]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2089ad3f]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@29783402]
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.526 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.527 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13dea533]
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e531222]
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.528 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aa1b2ae]
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c857bda]
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.529 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4de4656c]
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a389ca1]
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bf29526]
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3521db6d]
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:53:50.530 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:53:50.532 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:53:50.532 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54564d06]
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b65d614]
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-02 11:53:50.533 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-02 11:53:50.567 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-02 11:53:50.568 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-02 11:53:50.568 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-02 11:53:50.573 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-02 11:53:50.573 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-02 11:53:50.574 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-02 11:53:50.574 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-02 11:53:50.577 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5578c209
[DEBUG] 2020-03-02 11:53:50.579 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: c1623bd7-3f17-4cc8-8265-1e8502a48eeb (<unnamed>)
[DEBUG] 2020-03-02 11:53:50.579 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-02 11:53:50.650 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-02 11:53:50.671 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:50.686 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6d9f5843
[DEBUG] 2020-03-02 11:53:50.705 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:50.711 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:53:50.716 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-02 11:53:50.733 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-02 11:53:50.749 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-03-02 11:53:50.750 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-03-02 11:53:50.751 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-02 11:53:50.751 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-03-02 11:53:50.757 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-03-02 11:53:50.757 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-02 11:53:50.757 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-03-02 11:53:50.757 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:53:50.761 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:50.761 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:53:50.761 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:53:50.774 [http-nio-8080-exec-2] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:53:50.794 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:50.795 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:50.808 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:53:50.808 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:50.810 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:50.811 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.815 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:50.819 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:53:50.820 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:53:50.822 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:50.838 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:50.839 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.840 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6707cb20
[DEBUG] 2020-03-02 11:53:50.841 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.842 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:50.842 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:50.843 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:50.843 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.843 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:53:50.843 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.843 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:50.843 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.844 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:53:50.844 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.845 [http-nio-8080-exec-2] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:53:50.845 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:53:50.847 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:50.847 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:53:50.848 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:50.849 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:53:50.849 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:53:50.849 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:50.850 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:50.851 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:53:51.052 [http-nio-8080-exec-11] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:51.054 [http-nio-8080-exec-11] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:53:51.060 [http-nio-8080-exec-11] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.061 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.062 [http-nio-8080-exec-11] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:51.064 [http-nio-8080-exec-11] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:53:51.065 [http-nio-8080-exec-11] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:53:51.065 [http-nio-8080-exec-11] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:51.066 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.067 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6518f91d
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:53:51.068 [http-nio-8080-exec-11] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] Loader - Done entity load
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:51.070 [http-nio-8080-exec-11] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:51.071 [http-nio-8080-exec-11] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:53:57.060 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:57.060 [http-nio-8080-exec-10] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:53:57.062 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:57.062 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.063 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:57.064 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:53:57.065 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:53:57.065 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@383d7eb1
[DEBUG] 2020-03-02 11:53:57.066 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:53:57.067 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:53:57.068 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:57.068 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:57.068 [http-nio-8080-exec-10] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:57.068 [http-nio-8080-exec-10] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] Loader - Done entity load
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:57.069 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:53:57.102 [http-nio-8080-exec-12] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:57.102 [http-nio-8080-exec-12] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:53:57.103 [http-nio-8080-exec-12] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:57.103 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:57.103 [http-nio-8080-exec-12] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:53:57.103 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.104 [http-nio-8080-exec-12] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:57.107 [http-nio-8080-exec-12] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:53:57.107 [http-nio-8080-exec-12] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:53:57.109 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.110 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:57.113 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@336e813a
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:53:57.114 [http-nio-8080-exec-12] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] Loader - Done entity load
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:57.116 [http-nio-8080-exec-12] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:53:59.949 [http-nio-8080-exec-13] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:59.949 [http-nio-8080-exec-13] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:53:59.954 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.955 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:59.955 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.955 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:53:59.957 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:53:59.957 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.958 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@45af2278
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:53:59.959 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:53:59.961 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:53:59.961 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:53:59.962 [http-nio-8080-exec-13] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:53:59.962 [http-nio-8080-exec-13] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] Loader - Done entity load
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:53:59.963 [http-nio-8080-exec-13] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:53:59.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:53:59.965 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:53:59.965 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:53:59.998 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:53:59.998 [http-nio-8080-exec-1] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:00.115 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:00.116 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:00.117 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:00.117 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:00.118 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.119 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:00.119 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.119 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:00.119 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.121 [http-nio-8080-exec-1] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:00.130 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:00.131 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.132 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@59e61dea
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.133 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:00.134 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:00.135 [http-nio-8080-exec-1] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:00.143 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:00.145 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:00.145 [http-nio-8080-exec-1] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:00.146 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:00.147 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:00.147 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:02.238 [http-nio-8080-exec-14] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:54:02.238 [http-nio-8080-exec-14] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:02.240 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:02.240 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.241 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.242 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@70730308
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:02.243 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:02.244 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:02.272 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:54:02.272 [http-nio-8080-exec-7] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:02.274 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:02.274 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:02.275 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:02.275 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.276 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:02.277 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:02.277 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.278 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2d8eebf7
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:02.279 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:02.282 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:02.283 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:03.580 [http-nio-8080-exec-11] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:54:03.581 [http-nio-8080-exec-11] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:03.582 [http-nio-8080-exec-11] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:03.583 [http-nio-8080-exec-11] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:03.583 [http-nio-8080-exec-11] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:03.583 [http-nio-8080-exec-11] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:03.583 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:03.583 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.584 [http-nio-8080-exec-11] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:03.585 [http-nio-8080-exec-11] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:03.585 [http-nio-8080-exec-11] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.586 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@d4e6ff2
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:03.587 [http-nio-8080-exec-11] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:03.588 [http-nio-8080-exec-11] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:03.589 [http-nio-8080-exec-11] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:03.590 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.591 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:03.591 [http-nio-8080-exec-11] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:03.619 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:54:03.619 [http-nio-8080-exec-9] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:03.620 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.621 [http-nio-8080-exec-9] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:03.622 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:03.622 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:03.623 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@69044848
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.624 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:03.625 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.625 [http-nio-8080-exec-9] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:03.625 [http-nio-8080-exec-9] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:03.627 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:03.628 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:05.909 [http-nio-8080-exec-12] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:54:05.909 [http-nio-8080-exec-12] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:05.911 [http-nio-8080-exec-12] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:05.911 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:05.912 [http-nio-8080-exec-12] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:05.912 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:05.913 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.914 [http-nio-8080-exec-12] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:05.920 [http-nio-8080-exec-12] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:05.920 [http-nio-8080-exec-12] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:05.922 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7442b1c5
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:05.923 [http-nio-8080-exec-12] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:05.924 [http-nio-8080-exec-12] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:05.925 [http-nio-8080-exec-12] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:05.953 [http-nio-8080-exec-17] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-03-02 11:54:05.953 [http-nio-8080-exec-17] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-03-02 11:54:05.955 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:05.955 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:05.955 [http-nio-8080-exec-17] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:05.955 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `description` : value = This is FAQ Creates Test. More and more. Very Happy it works!!!
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T22:03
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.956 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:05.957 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:05.957 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@636f0489
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:05.958 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question. Some data
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T16:19:20
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-03-02 11:54:05.961 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:30.405 [http-nio-8080-exec-19] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 11:54:30.405 [http-nio-8080-exec-19] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-03-02 11:54:30.406 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_7_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:54:30.407 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:54:30.408 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:54:30.412 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:30.412 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:30.412 [http-nio-8080-exec-19] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:30.412 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] Loader - Result set row: 2
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@276cec4d
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:30.413 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1f9ce25d
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = atorrance@streammedia.com
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Aria
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = atorrence
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@684ed1a9
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.414 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:30.418 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:54:30.418 [http-nio-8080-exec-19] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:54:30.426 [http-nio-8080-exec-19] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:54:30.426 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:30.427 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=atorrence}]
[DEBUG] 2020-03-02 11:54:30.428 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#7], EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#7]
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.432 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:30.433 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:54:30.433 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:54:30.433 [http-nio-8080-exec-19] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:54:30.436 [http-nio-8080-exec-19] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:54:30.436 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:30.437 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More, createdAt=2020-02-16, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:54:30.439 [http-nio-8080-exec-19] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:54:30.440 [http-nio-8080-exec-19] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More, createdAt=2020-02-16, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:54:30.440 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:30.440 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.442 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:30.443 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:30.443 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:30.443 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:30.444 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:54:30.445 [http-nio-8080-exec-19] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:34.838 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:34.840 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:34.840 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2d3a299a
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:34.841 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:54:34.843 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:34.845 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:34.846 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:34.846 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@36e34412
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:34.847 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:34.848 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:34.848 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:54:34.850 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:46.294 [http-nio-8080-exec-15] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:46.296 [http-nio-8080-exec-15] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:46.296 [http-nio-8080-exec-15] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:46.296 [http-nio-8080-exec-15] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.296 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@422e59f3
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:46.297 [http-nio-8080-exec-15] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:46.299 [http-nio-8080-exec-15] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:54:46.300 [http-nio-8080-exec-15] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:46.324 [http-nio-8080-exec-15] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-02 11:54:46.324 [http-nio-8080-exec-15] TransactionImpl - begin
[DEBUG] 2020-03-02 11:54:46.340 [http-nio-8080-exec-15] TransactionImpl - committing
[DEBUG] 2020-03-02 11:54:46.341 [http-nio-8080-exec-15] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-02 11:54:46.341 [http-nio-8080-exec-15] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-02 11:54:46.355 [http-nio-8080-exec-15] Collections - Collection found: [com.streammedia.entity.User.faqs#1], was: [com.streammedia.entity.User.faqs#1] (uninitialized)
[DEBUG] 2020-03-02 11:54:46.355 [http-nio-8080-exec-15] Collections - Collection found: [com.streammedia.entity.User.films#1], was: [com.streammedia.entity.User.films#1] (uninitialized)
[DEBUG] 2020-03-02 11:54:46.355 [http-nio-8080-exec-15] Collections - Collection found: [com.streammedia.entity.User.roles#1], was: [com.streammedia.entity.User.roles#1] (initialized)
[DEBUG] 2020-03-02 11:54:46.355 [http-nio-8080-exec-15] Collections - Collection found: [com.streammedia.entity.User.trailers#1], was: [com.streammedia.entity.User.trailers#1] (uninitialized)
[DEBUG] 2020-03-02 11:54:46.356 [http-nio-8080-exec-15] AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 2 objects
[DEBUG] 2020-03-02 11:54:46.356 [http-nio-8080-exec-15] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 4 collections
[DEBUG] 2020-03-02 11:54:46.358 [http-nio-8080-exec-15] EntityPrinter - Listing entities:
[DEBUG] 2020-03-02 11:54:46.358 [http-nio-8080-exec-15] EntityPrinter - com.streammedia.entity.Role{createdAt=2020-02-16, roleId=1, name=user, user=com.streammedia.entity.User#1, updatedAt=2020-02-27}
[DEBUG] 2020-03-02 11:54:46.361 [http-nio-8080-exec-15] EntityPrinter - com.streammedia.entity.User{films=<uninitialized>, lastName=Declan, birthdate=1995-06-12, gender=Male, roles=[com.streammedia.entity.Role#1], updateAt=2020-03-02, biography=This is a Test.TestMore and More and more, userId=1, picture=, trailers=<uninitialized>, createdAt=2020-02-16, firstName=Ian, faqs=<uninitialized>, password=12345, email=ian@madisoncollege.edu, username=ian}
[DEBUG] 2020-03-02 11:54:46.400 [http-nio-8080-exec-15] SQL - update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-02 11:54:46.744 [http-nio-8080-exec-15] SQL - update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-02 11:54:46.813 [http-nio-8080-exec-15] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:46.814 [http-nio-8080-exec-15] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:46.820 [http-nio-8080-exec-18] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 11:54:46.820 [http-nio-8080-exec-18] SQL - select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] Loader - Result set row: 2
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] Loader - Result row: EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:54:46.823 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3b757618
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.824 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.825 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@41f006f6
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `email` : value = atorrance@streammedia.com
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `firstName` : value = Aria
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `username` : value = atorrence
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3b581aa5
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.826 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:46.827 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:54:46.827 [http-nio-8080-exec-18] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:54:46.829 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:54:46.829 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:46.831 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.831 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=atorrence}]
[DEBUG] 2020-03-02 11:54:46.832 [http-nio-8080-exec-18] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] Loader - Result row: EntityKey[com.streammedia.entity.Role#7], EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#7]
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:54:46.833 [http-nio-8080-exec-18] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:54:46.834 [http-nio-8080-exec-18] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:54:46.835 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.836 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:54:46.836 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.836 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:46.836 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:54:46.836 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:54:46.836 [http-nio-8080-exec-18] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:54:46.837 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:54:46.837 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.838 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:46.839 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:46.839 [http-nio-8080-exec-18] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:46.839 [http-nio-8080-exec-18] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:46.840 [http-nio-8080-exec-18] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:46.840 [http-nio-8080-exec-18] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:46.840 [http-nio-8080-exec-18] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:46.840 [http-nio-8080-exec-18] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.840 [http-nio-8080-exec-18] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:46.840 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:46.841 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.841 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:46.841 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:46.841 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:46.841 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:54:46.841 [http-nio-8080-exec-18] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:59.035 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:59.043 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:59.044 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:59.044 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:59.044 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5ff15b2a
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:59.045 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:59.049 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:59.049 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:59.049 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:54:59.050 [http-nio-8080-exec-19] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:54:59.053 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:54:59.056 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:54:59.056 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@50c9fee0
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:54:59.058 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:54:59.059 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:54:59.059 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:59.060 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:54:59.061 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:54:59.061 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:54:59.061 [http-nio-8080-exec-19] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:54:59.061 [http-nio-8080-exec-19] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:07.041 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:07.049 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:07.049 [http-nio-8080-exec-14] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@42304776
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.050 [http-nio-8080-exec-14] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:07.051 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:07.051 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:07.051 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:07.052 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:07.078 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:07.078 [http-nio-8080-exec-14] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@363ef05b
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:07.079 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:07.082 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:07.082 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:07.082 [http-nio-8080-exec-14] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:07.082 [http-nio-8080-exec-14] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:07.082 [http-nio-8080-exec-14] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:56:07.083 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:11.898 [http-nio-8080-exec-13] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-02 11:56:11.899 [http-nio-8080-exec-13] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-02 11:56:11.905 [http-nio-8080-exec-13] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-02 11:56:11.969 [http-nio-8080-exec-13] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-02 11:56:11.970 [http-nio-8080-exec-13] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-02 11:56:12.075 [http-nio-8080-exec-13] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-02 11:56:12.075 [http-nio-8080-exec-13] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-02 11:56:12.079 [http-nio-8080-exec-13] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-02 11:56:12.265 [http-nio-8080-exec-13] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-02 11:56:12.280 [http-nio-8080-exec-13] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-02 11:56:12.281 [http-nio-8080-exec-13] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-02 11:56:12.298 [http-nio-8080-exec-13] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-02 11:56:12.328 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6c639fc0
[DEBUG] 2020-03-02 11:56:12.328 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6c639fc0
[DEBUG] 2020-03-02 11:56:12.328 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c639fc0
[DEBUG] 2020-03-02 11:56:12.329 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5699a65f
[DEBUG] 2020-03-02 11:56:12.329 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6230c835
[DEBUG] 2020-03-02 11:56:12.329 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@da1f030
[DEBUG] 2020-03-02 11:56:12.330 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@557c93ed
[DEBUG] 2020-03-02 11:56:12.331 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@557c93ed
[DEBUG] 2020-03-02 11:56:12.331 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@557c93ed
[DEBUG] 2020-03-02 11:56:12.332 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6bdbb198
[DEBUG] 2020-03-02 11:56:12.332 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6bdbb198
[DEBUG] 2020-03-02 11:56:12.332 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bdbb198
[DEBUG] 2020-03-02 11:56:12.333 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@794de76f
[DEBUG] 2020-03-02 11:56:12.333 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@794de76f
[DEBUG] 2020-03-02 11:56:12.333 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@794de76f
[DEBUG] 2020-03-02 11:56:12.334 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@180c7959
[DEBUG] 2020-03-02 11:56:12.334 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@180c7959
[DEBUG] 2020-03-02 11:56:12.334 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@180c7959
[DEBUG] 2020-03-02 11:56:12.335 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@79212dbf
[DEBUG] 2020-03-02 11:56:12.335 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@79212dbf
[DEBUG] 2020-03-02 11:56:12.335 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@79212dbf
[DEBUG] 2020-03-02 11:56:12.335 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c21cca5
[DEBUG] 2020-03-02 11:56:12.335 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c21cca5
[DEBUG] 2020-03-02 11:56:12.335 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c21cca5
[DEBUG] 2020-03-02 11:56:12.336 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d2f8724
[DEBUG] 2020-03-02 11:56:12.336 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d2f8724
[DEBUG] 2020-03-02 11:56:12.336 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d2f8724
[DEBUG] 2020-03-02 11:56:12.336 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@596b09b0
[DEBUG] 2020-03-02 11:56:12.337 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@596b09b0
[DEBUG] 2020-03-02 11:56:12.337 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7ecc95a6
[DEBUG] 2020-03-02 11:56:12.337 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7ecc95a6
[DEBUG] 2020-03-02 11:56:12.338 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@14ed3955
[DEBUG] 2020-03-02 11:56:12.338 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@14ed3955
[DEBUG] 2020-03-02 11:56:12.338 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5231e894
[DEBUG] 2020-03-02 11:56:12.338 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@253e57a
[DEBUG] 2020-03-02 11:56:12.339 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@530dcaf2
[DEBUG] 2020-03-02 11:56:12.339 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@530dcaf2
[DEBUG] 2020-03-02 11:56:12.340 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2a1782c7
[DEBUG] 2020-03-02 11:56:12.341 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2a1782c7
[DEBUG] 2020-03-02 11:56:12.342 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7babfe71
[DEBUG] 2020-03-02 11:56:12.342 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7babfe71
[DEBUG] 2020-03-02 11:56:12.344 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3da84e95
[DEBUG] 2020-03-02 11:56:12.344 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3da84e95
[DEBUG] 2020-03-02 11:56:12.345 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@578076ab
[DEBUG] 2020-03-02 11:56:12.345 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@578076ab
[DEBUG] 2020-03-02 11:56:12.347 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2ebcec0
[DEBUG] 2020-03-02 11:56:12.347 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2ebcec0
[DEBUG] 2020-03-02 11:56:12.349 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7eeee794
[DEBUG] 2020-03-02 11:56:12.349 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7eeee794
[DEBUG] 2020-03-02 11:56:12.350 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a9439a
[DEBUG] 2020-03-02 11:56:12.350 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a9439a
[DEBUG] 2020-03-02 11:56:12.351 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74aa1d4
[DEBUG] 2020-03-02 11:56:12.351 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@74aa1d4
[DEBUG] 2020-03-02 11:56:12.352 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1d7945ac
[DEBUG] 2020-03-02 11:56:12.352 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d7945ac
[DEBUG] 2020-03-02 11:56:12.353 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@42b65fa2
[DEBUG] 2020-03-02 11:56:12.353 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42b65fa2
[DEBUG] 2020-03-02 11:56:12.353 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@777cf73
[DEBUG] 2020-03-02 11:56:12.353 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@777cf73
[DEBUG] 2020-03-02 11:56:12.353 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@777cf73
[DEBUG] 2020-03-02 11:56:12.354 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54cbb863
[DEBUG] 2020-03-02 11:56:12.355 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@64312e68
[DEBUG] 2020-03-02 11:56:12.355 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@64312e68
[DEBUG] 2020-03-02 11:56:12.356 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@64312e68
[DEBUG] 2020-03-02 11:56:12.356 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76459aa4
[DEBUG] 2020-03-02 11:56:12.357 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3cd8d7b2
[DEBUG] 2020-03-02 11:56:12.357 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3cd8d7b2
[DEBUG] 2020-03-02 11:56:12.358 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1151955e
[DEBUG] 2020-03-02 11:56:12.358 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1151955e
[DEBUG] 2020-03-02 11:56:12.358 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46fc9ef0
[DEBUG] 2020-03-02 11:56:12.359 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46fc9ef0
[DEBUG] 2020-03-02 11:56:12.359 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@f763f2f
[DEBUG] 2020-03-02 11:56:12.359 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f763f2f
[DEBUG] 2020-03-02 11:56:12.360 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d083265
[DEBUG] 2020-03-02 11:56:12.360 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d083265
[DEBUG] 2020-03-02 11:56:12.360 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2ec4cf0a
[DEBUG] 2020-03-02 11:56:12.361 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@34fd8524
[DEBUG] 2020-03-02 11:56:12.362 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@34fd8524
[DEBUG] 2020-03-02 11:56:12.362 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@34fd8524
[DEBUG] 2020-03-02 11:56:12.362 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75cc92cd
[DEBUG] 2020-03-02 11:56:12.362 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75cc92cd
[DEBUG] 2020-03-02 11:56:12.362 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75cc92cd
[DEBUG] 2020-03-02 11:56:12.363 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@276baa64
[DEBUG] 2020-03-02 11:56:12.364 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@b21806
[DEBUG] 2020-03-02 11:56:12.364 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1d8b78b6
[DEBUG] 2020-03-02 11:56:12.364 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1d8b78b6
[DEBUG] 2020-03-02 11:56:12.364 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1d8b78b6
[DEBUG] 2020-03-02 11:56:12.365 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4f7d08b3
[DEBUG] 2020-03-02 11:56:12.365 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4f7d08b3
[DEBUG] 2020-03-02 11:56:12.365 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4f7d08b3
[DEBUG] 2020-03-02 11:56:12.366 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1c2fb380
[DEBUG] 2020-03-02 11:56:12.367 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@461c6ca9
[DEBUG] 2020-03-02 11:56:12.368 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3ffc9f1a
[DEBUG] 2020-03-02 11:56:12.368 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ffc9f1a
[DEBUG] 2020-03-02 11:56:12.369 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44d04d4b
[DEBUG] 2020-03-02 11:56:12.369 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1df7baa9
[DEBUG] 2020-03-02 11:56:12.369 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1df7baa9
[DEBUG] 2020-03-02 11:56:12.370 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2345d456
[DEBUG] 2020-03-02 11:56:12.370 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2345d456
[DEBUG] 2020-03-02 11:56:12.370 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@719086ce
[DEBUG] 2020-03-02 11:56:12.371 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@32b74e27
[DEBUG] 2020-03-02 11:56:12.371 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5a237c72
[DEBUG] 2020-03-02 11:56:12.375 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@19ee825a
[DEBUG] 2020-03-02 11:56:12.375 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19ee825a
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67b50446
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@323d519a
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54047f2c
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7bd7f2cd
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@340f5ec5
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6ce6685f
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b6c87f0
[DEBUG] 2020-03-02 11:56:12.380 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5fe95fca
[DEBUG] 2020-03-02 11:56:12.407 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-02 11:56:12.408 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-02 11:56:12.411 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 11:56:12.411 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-02 11:56:12.412 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-02 11:56:12.413 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-02 11:56:12.414 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-02 11:56:12.415 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 11:56:12.416 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-02 11:56:12.416 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-02 11:56:12.417 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-02 11:56:12.417 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-02 11:56:12.417 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-02 11:56:12.418 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-02 11:56:12.422 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-02 11:56:12.422 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-02 11:56:12.422 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-02 11:56:12.552 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-02 11:56:12.722 [http-nio-8080-exec-13] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-02 11:56:12.722 [http-nio-8080-exec-13] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-02 11:56:12.723 [http-nio-8080-exec-13] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-02 11:56:12.747 [http-nio-8080-exec-13] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-02 11:56:12.772 [http-nio-8080-exec-13] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-02 11:56:12.789 [http-nio-8080-exec-13] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-02 11:56:12.827 [http-nio-8080-exec-13] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-02 11:56:12.830 [http-nio-8080-exec-13] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6009d686] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60f1586b]
[DEBUG] 2020-03-02 11:56:12.884 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:12.902 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:12.906 [http-nio-8080-exec-13] EntityBinder - Import with entity name User
[DEBUG] 2020-03-02 11:56:12.909 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-02 11:56:12.924 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.930 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-02 11:56:12.932 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-02 11:56:12.934 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-02 11:56:12.936 [http-nio-8080-exec-13] PropertyBinder - Building property userId
[DEBUG] 2020-03-02 11:56:12.938 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:12.939 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.939 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - Building property biography
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 11:56:12.940 [http-nio-8080-exec-13] PropertyBinder - Building property email
[DEBUG] 2020-03-02 11:56:12.941 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.942 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.945 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.956 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.957 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.957 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:12.959 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.959 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.959 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:56:12.961 [http-nio-8080-exec-13] PropertyBinder - Building property faqs
[DEBUG] 2020-03-02 11:56:12.961 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] PropertyBinder - Building property gender
[DEBUG] 2020-03-02 11:56:12.962 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] PropertyBinder - Building property password
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] PropertyBinder - Building property picture
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.963 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] PropertyBinder - Building property roles
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.964 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] PropertyBinder - Building property trailers
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-02 11:56:12.965 [http-nio-8080-exec-13] PropertyBinder - Building property username
[DEBUG] 2020-03-02 11:56:12.966 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:56:12.966 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:12.966 [http-nio-8080-exec-13] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-02 11:56:12.967 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] PropertyBinder - Building property roleId
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:12.969 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:12.974 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] PropertyBinder - Building property name
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-02 11:56:12.975 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.977 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:56:12.977 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:56:12.978 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:12.978 [http-nio-8080-exec-13] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-02 11:56:12.979 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-02 11:56:12.979 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.980 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-02 11:56:12.980 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-02 11:56:12.982 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-02 11:56:12.982 [http-nio-8080-exec-13] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - Building property author
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - Building property cover
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-02 11:56:12.983 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - Building property duration
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - Building property link
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - Building property summary
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:56:12.984 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] PropertyBinder - Building property video
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:12.985 [http-nio-8080-exec-13] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] PropertyBinder - Building property faqId
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-02 11:56:12.986 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - Building property category
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - Building property description
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:56:12.987 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-02 11:56:12.988 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] PropertyBinder - Building property genreId
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-02 11:56:12.989 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] PropertyBinder - Building property description
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:56:12.990 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:12.991 [http-nio-8080-exec-13] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-02 11:56:12.994 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-02 11:56:12.995 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.995 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-02 11:56:12.995 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] PropertyBinder - Building property filmId
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] PropertyBinder - Building property cover
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:12.996 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:12.998 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:12.999 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.000 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.000 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:13.000 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:13.000 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:13.000 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:56:13.000 [http-nio-8080-exec-13] PropertyBinder - Building property crews
[DEBUG] 2020-03-02 11:56:13.001 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.001 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-02 11:56:13.001 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-02 11:56:13.001 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-02 11:56:13.001 [http-nio-8080-exec-13] PropertyBinder - Building property director
[DEBUG] 2020-03-02 11:56:13.001 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] PropertyBinder - Building property duration
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] PropertyBinder - Building property episode
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] PropertyBinder - Building property genres
[DEBUG] 2020-03-02 11:56:13.002 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.003 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-02 11:56:13.003 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] PropertyBinder - Building property link
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.004 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - Building property summary
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] PropertyBinder - Building property video
[DEBUG] 2020-03-02 11:56:13.005 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.006 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-02 11:56:13.006 [http-nio-8080-exec-13] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-02 11:56:13.006 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-02 11:56:13.007 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.007 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-02 11:56:13.007 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-02 11:56:13.007 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-02 11:56:13.007 [http-nio-8080-exec-13] PropertyBinder - Building property crewId
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] PropertyBinder - Building property biography
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-02 11:56:13.008 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] PropertyBinder - Building property email
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] PropertyBinder - Building property films
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] PropertyBinder - Building property firstName
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-02 11:56:13.009 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] PropertyBinder - Building property lastName
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] PropertyBinder - Building property profession
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-02 11:56:13.010 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-02 11:56:13.013 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-02 11:56:13.013 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-02 11:56:13.013 [http-nio-8080-exec-13] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-02 11:56:13.015 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-02 11:56:13.016 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:56:13.021 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:56:13.024 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-02 11:56:13.025 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-02 11:56:13.025 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-02 11:56:13.030 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:56:13.030 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:56:13.031 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-02 11:56:13.031 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-02 11:56:13.031 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-02 11:56:13.031 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.031 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.031 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-02 11:56:13.032 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-02 11:56:13.033 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.034 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.034 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.035 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.035 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:13.035 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.035 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.035 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.037 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.079 [http-nio-8080-exec-13] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - SessionFactory name : null
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Statistics: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Default null ordering: NONE
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Query language substitutions: {}
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Named query checking : enabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Second-level cache: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - JDBC batch size: 15
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-02 11:56:13.080 [http-nio-8080-exec-13] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - JPA compliance - query : 
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-02 11:56:13.081 [http-nio-8080-exec-13] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-02 11:56:13.123 [http-nio-8080-exec-13] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-02 11:56:13.145 [http-nio-8080-exec-13] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-02 11:56:13.145 [http-nio-8080-exec-13] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@8ff36cf, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-02 11:56:13.165 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:56:13.166 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.166 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:56:13.167 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:56:13.169 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:56:13.169 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:56:13.170 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:56:13.170 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:13.170 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:56:13.170 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:56:13.177 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:56:13.177 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.178 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:56:13.178 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.181 [http-nio-8080-exec-13] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-02 11:56:13.182 [http-nio-8080-exec-13] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-02 11:56:13.182 [http-nio-8080-exec-13] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6009d686] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@388f4899]
[DEBUG] 2020-03-02 11:56:13.220 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:56:13.220 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.229 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-02 11:56:13.229 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.476 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:56:13.476 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:56:13.477 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-02 11:56:13.477 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:56:13.512 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:56:13.512 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:56:13.512 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-02 11:56:13.512 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:56:13.519 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:56:13.519 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:13.519 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-02 11:56:13.519 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:13.528 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:56:13.528 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:56:13.528 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-02 11:56:13.528 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:56:13.542 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:56:13.542 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.545 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-02 11:56:13.545 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.573 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:56:13.573 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.573 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-02 11:56:13.574 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-02 11:56:13.596 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-02 11:56:13.597 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-02 11:56:13.597 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-02 11:56:13.597 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-02 11:56:13.597 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-02 11:56:13.597 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-02 11:56:13.599 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-02 11:56:13.599 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-02 11:56:13.601 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-02 11:56:13.601 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-02 11:56:13.601 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-02 11:56:13.602 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-02 11:56:13.605 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-02 11:56:13.606 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-02 11:56:13.606 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-02 11:56:13.606 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.606 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-02 11:56:13.606 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-02 11:56:13.606 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.624 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51678ed6]
[DEBUG] 2020-03-02 11:56:13.625 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.625 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.625 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:56:13.630 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d4271de]
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e0de690]
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10e00300]
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776d7194]
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.632 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.633 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.633 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.634 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798d7ac6]
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46c0bd52]
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac2d331]
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48a64d36]
[DEBUG] 2020-03-02 11:56:13.636 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14214448]
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c4c67a3]
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19477a8]
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.637 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.638 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@48953c91]
[DEBUG] 2020-03-02 11:56:13.639 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.639 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.640 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.653 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.658 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.659 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e0f38]
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@742764a7]
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435e435]
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72a4dc44]
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e629db4]
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.660 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@512fc083]
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.661 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e822725]
[DEBUG] 2020-03-02 11:56:13.662 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2407807c]
[DEBUG] 2020-03-02 11:56:13.664 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b0367a7]
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757b9a72]
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@424d3600]
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b4c8c31]
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.665 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@58076137]
[DEBUG] 2020-03-02 11:56:13.666 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.666 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.666 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.666 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.666 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.666 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-02 11:56:13.677 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-02 11:56:13.677 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45bc8ef6]
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17cfc2ea]
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b7d6bc]
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f1645ec]
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.678 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36270476]
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c88c47e]
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@230842d4]
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f9c9ff]
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@e43c07e]
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.679 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b9c369]
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72e83219]
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c5c920c]
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb40959]
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.680 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f7f822c]
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e8f564]
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@425371f3]
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f2ef08]
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6becc9d6]
[DEBUG] 2020-03-02 11:56:13.681 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.682 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.682 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.682 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.682 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:56:13.682 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c95937]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3edba1c8]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e5bf084]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e5f4972]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d697690]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@155effec]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@490e213]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20203f2a]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@560b1048]
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.683 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@374bd80a]
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b4b368]
[DEBUG] 2020-03-02 11:56:13.684 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44c2547]
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9371b20]
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34a5c69d]
[DEBUG] 2020-03-02 11:56:13.685 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28cc1e52]
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dcf6011]
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c909c93]
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@669b3cb2]
[DEBUG] 2020-03-02 11:56:13.689 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.690 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.690 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.690 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.690 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-02 11:56:13.690 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1814a299]
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fd90f11]
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d73943f]
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20ceed62]
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.691 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@114efe8f]
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109d52f5]
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476f1879]
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.692 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61cd6a51]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24aee9b9]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29074f90]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23922703]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546b93b8]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75b5bad]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b3ff19]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@730e79d9]
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.693 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd8acc]
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.694 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.697 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.697 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.697 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.697 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@504531b]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64fc0a13]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400abe3d]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67b1b1ac]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1905ad06]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dad80a7]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c33e79]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@27152403]
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.698 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.701 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.702 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-02 11:56:13.702 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afdd786]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43cb741b]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525dfd9a]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@460851b0]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@812a9df]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10e17f6a]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dede1c1]
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.703 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f2c9b7e]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0d84b3]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@21adad47]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33a08a82]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e82ecda]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664a8ab7]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5109f866]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3d597e]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47b0945f]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751da12c]
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-02 11:56:13.704 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c2a8453]
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a65c3b]
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5220472b]
[DEBUG] 2020-03-02 11:56:13.705 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.708 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.708 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.708 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-02 11:56:13.708 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:13.708 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:13.708 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-03-02 11:56:13.712 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e4d3efb]
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@579867d7]
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef8e0d4]
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@935a316]
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7306a3a]
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef7c448]
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:56:13.713 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:56:13.714 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42494342]
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de93ecb]
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.717 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.721 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.722 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-02 11:56:13.722 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-02 11:56:13.722 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3678db18]
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7207d220]
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2325f6d6]
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fffb640]
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.724 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b6264b2]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bd8c28]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76e761d5]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13de6fed]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c4ab305]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69943b3d]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d590e5]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40cec841]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6427ba58]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ca22832]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d5d7fb]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3f6f8a40]
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.725 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.726 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4187a90a]
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70052f5a]
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3abc1abe]
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@631a8d4c]
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.730 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f47c4c]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dd31722]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a148939]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7159962b]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@321e4046]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37f13b20]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a221a6]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4770077]
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.731 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7abd7751]
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@523ad6b1]
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60b6a2a6]
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@643d7f5f]
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.732 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c34c2fb]
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@337c85a5]
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f6727ea]
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1861c20e]
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c67291b]
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b9d5b3]
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-02 11:56:13.733 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-02 11:56:13.763 [http-nio-8080-exec-13] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-02 11:56:13.763 [http-nio-8080-exec-13] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-02 11:56:13.763 [http-nio-8080-exec-13] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-02 11:56:13.768 [http-nio-8080-exec-13] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-02 11:56:13.768 [http-nio-8080-exec-13] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-02 11:56:13.768 [http-nio-8080-exec-13] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-02 11:56:13.768 [http-nio-8080-exec-13] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-02 11:56:13.770 [http-nio-8080-exec-13] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@61de7dbf
[DEBUG] 2020-03-02 11:56:13.771 [http-nio-8080-exec-13] SessionFactoryRegistry - Registering SessionFactory: 1ed488fc-2526-496a-aeb9-09c35aa60b50 (<unnamed>)
[DEBUG] 2020-03-02 11:56:13.771 [http-nio-8080-exec-13] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-02 11:56:13.838 [http-nio-8080-exec-13] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-02 11:56:13.854 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:13.877 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:13.880 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:56:13.891 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:13.901 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.902 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3e0fbbef
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:13.904 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:13.905 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:13.907 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:13.907 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:13.907 [http-nio-8080-exec-13] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:13.908 [http-nio-8080-exec-13] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:56:13.909 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:13.912 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:13.917 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:13.918 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6abe05fd
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:13.922 [http-nio-8080-exec-13] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:13.923 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:56:13.925 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:21.465 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:21.467 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:21.467 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:56:21.467 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.468 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@64f308dc
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:21.469 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:21.471 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:56:21.472 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:21.476 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-02 11:56:21.479 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:21.479 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.480 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1922247e
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:21.481 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:21.483 [http-nio-8080-exec-17] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-02 11:56:21.484 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:56:58.693 [http-nio-8080-exec-19] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 11:56:58.712 [http-nio-8080-exec-19] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4234d889
[DEBUG] 2020-03-02 11:56:58.736 [http-nio-8080-exec-19] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-03-02 11:56:58.740 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:56:58.743 [http-nio-8080-exec-19] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-02 11:56:58.764 [http-nio-8080-exec-19] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-02 11:56:58.779 [http-nio-8080-exec-19] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-03-02 11:56:58.781 [http-nio-8080-exec-19] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-03-02 11:56:58.783 [http-nio-8080-exec-19] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-02 11:56:58.783 [http-nio-8080-exec-19] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-03-02 11:56:58.791 [http-nio-8080-exec-19] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-03-02 11:56:58.791 [http-nio-8080-exec-19] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-02 11:56:58.791 [http-nio-8080-exec-19] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_7_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-03-02 11:56:58.791 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:56:58.798 [http-nio-8080-exec-19] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-03-02 11:56:58.798 [http-nio-8080-exec-19] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:56:58.798 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-02 11:56:58.808 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:56:58.810 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:58.810 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:58.810 [http-nio-8080-exec-19] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:56:58.810 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:56:58.810 [http-nio-8080-exec-19] Loader - Result set row: 2
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@72e6ba46
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.811 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6ae0ae1d
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `email` : value = atorrance@streammedia.com
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `firstName` : value = Aria
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `username` : value = atorrence
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2e2315b8
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.812 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:56:58.815 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:56:58.815 [http-nio-8080-exec-19] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:56:58.818 [http-nio-8080-exec-19] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:58.819 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.820 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=atorrence}]
[DEBUG] 2020-03-02 11:56:58.820 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#7], EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#7]
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:58.821 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:56:58.822 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:56:58.822 [http-nio-8080-exec-19] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:56:58.822 [http-nio-8080-exec-19] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:56:58.822 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:56:58.823 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:56:58.824 [http-nio-8080-exec-19] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:56:58.825 [http-nio-8080-exec-19] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:56:58.825 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:56:58.825 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:56:58.826 [http-nio-8080-exec-19] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:56:58.827 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:56:58.827 [http-nio-8080-exec-19] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] Loader - Done entity load
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:56:58.828 [http-nio-8080-exec-19] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:56:58.830 [http-nio-8080-exec-19] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:57:00.820 [http-nio-8080-exec-20] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 11:57:00.820 [http-nio-8080-exec-20] SQL - select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:57:00.822 [http-nio-8080-exec-20] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:00.822 [http-nio-8080-exec-20] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:00.822 [http-nio-8080-exec-20] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:57:00.822 [http-nio-8080-exec-20] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:00.822 [http-nio-8080-exec-20] Loader - Result set row: 2
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] Loader - Result row: EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4cf3553f
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@323bb143
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:00.823 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `email` : value = atorrance@streammedia.com
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `firstName` : value = Aria
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.826 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `username` : value = atorrence
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@73b85cbe
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.827 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:00.828 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:57:00.828 [http-nio-8080-exec-20] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:57:00.832 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:57:00.832 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:57:00.834 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:00.835 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=atorrence}]
[DEBUG] 2020-03-02 11:57:00.836 [http-nio-8080-exec-20] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:57:00.839 [http-nio-8080-exec-20] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:00.839 [http-nio-8080-exec-20] Loader - Result row: EntityKey[com.streammedia.entity.Role#7], EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:00.839 [http-nio-8080-exec-20] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:00.839 [http-nio-8080-exec-20] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] Loader - Done entity load
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#7]
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:57:00.840 [http-nio-8080-exec-20] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:57:00.841 [http-nio-8080-exec-20] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:57:00.842 [http-nio-8080-exec-20] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:00.842 [http-nio-8080-exec-20] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] Loader - Done entity load
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:57:00.843 [http-nio-8080-exec-20] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:57:00.847 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:57:00.847 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:57:00.849 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:57:00.850 [http-nio-8080-exec-20] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:57:00.851 [http-nio-8080-exec-20] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:00.851 [http-nio-8080-exec-20] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:00.851 [http-nio-8080-exec-20] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:00.851 [http-nio-8080-exec-20] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] Loader - Done entity load
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:57:00.852 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-02 11:57:01.759 [http-nio-8080-exec-14] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-03-02 11:57:01.759 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_
[DEBUG] 2020-03-02 11:57:01.761 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:01.761 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] Loader - Result set row: 1
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] Loader - Result set row: 2
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@63ef571c
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.762 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@139a6d89
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `email` : value = atorrance@streammedia.com
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `firstName` : value = Aria
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-02 11:57:01.763 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `username` : value = atorrence
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@58e1c049
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:57:01.764 [http-nio-8080-exec-14] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=7, username=atorrence, email=atorrance@streammedia.com, password=12345, firstName=Aria, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-27, updateAt=2020-02-27)]
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-27
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.765 [http-nio-8080-exec-14] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=atorrence}]
[DEBUG] 2020-03-02 11:57:01.766 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:57:01.766 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:01.766 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.Role#7], EntityKey[com.streammedia.entity.User#7]
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=atorrence, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] Loader - Done entity load
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#7]
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#7]
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:57:01.767 [http-nio-8080-exec-14] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:57:01.769 [http-nio-8080-exec-14] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin., createdAt=2020-02-16, updateAt=2020-02-18)]
[DEBUG] 2020-03-02 11:57:01.769 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:57:01.770 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:01.770 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:57:01.770 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:01.770 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-02 11:57:01.771 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] Loader - Done entity load
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:57:01.772 [http-nio-8080-exec-14] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-02 11:57:01.773 [http-nio-8080-exec-14] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=1995-06-12, picture=, gender=Male, biography=This is a Test.TestMore and More and more, createdAt=2020-02-16, updateAt=2020-03-02)]
[DEBUG] 2020-03-02 11:57:01.773 [http-nio-8080-exec-14] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-02
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-02 11:57:01.774 [http-nio-8080-exec-14] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-02 11:57:01.775 [http-nio-8080-exec-14] Loader - Result set row: 0
[DEBUG] 2020-03-02 11:57:01.775 [http-nio-8080-exec-14] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] Loader - Done entity load
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-02 11:57:01.776 [http-nio-8080-exec-14] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
