[DEBUG] 2020-03-05 14:44:04.704 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-05 14:44:04.706 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-05 14:44:04.712 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-05 14:44:04.811 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-05 14:44:04.814 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-05 14:44:04.980 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-05 14:44:04.981 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-05 14:44:05.007 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-05 14:44:05.512 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-05 14:44:05.560 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-05 14:44:05.561 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-05 14:44:05.595 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-05 14:44:05.644 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@fde7734
[DEBUG] 2020-03-05 14:44:05.645 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@fde7734
[DEBUG] 2020-03-05 14:44:05.645 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fde7734
[DEBUG] 2020-03-05 14:44:05.646 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56c3a3f4
[DEBUG] 2020-03-05 14:44:05.646 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56ab1ddd
[DEBUG] 2020-03-05 14:44:05.647 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@31335c01
[DEBUG] 2020-03-05 14:44:05.648 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@21b7351a
[DEBUG] 2020-03-05 14:44:05.648 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@21b7351a
[DEBUG] 2020-03-05 14:44:05.648 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21b7351a
[DEBUG] 2020-03-05 14:44:05.649 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@36f941e9
[DEBUG] 2020-03-05 14:44:05.649 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@36f941e9
[DEBUG] 2020-03-05 14:44:05.650 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36f941e9
[DEBUG] 2020-03-05 14:44:05.650 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1cafab32
[DEBUG] 2020-03-05 14:44:05.653 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1cafab32
[DEBUG] 2020-03-05 14:44:05.654 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1cafab32
[DEBUG] 2020-03-05 14:44:05.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2d1b9429
[DEBUG] 2020-03-05 14:44:05.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2d1b9429
[DEBUG] 2020-03-05 14:44:05.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d1b9429
[DEBUG] 2020-03-05 14:44:05.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53c2a8bf
[DEBUG] 2020-03-05 14:44:05.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53c2a8bf
[DEBUG] 2020-03-05 14:44:05.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@53c2a8bf
[DEBUG] 2020-03-05 14:44:05.662 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2210e07a
[DEBUG] 2020-03-05 14:44:05.662 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2210e07a
[DEBUG] 2020-03-05 14:44:05.662 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2210e07a
[DEBUG] 2020-03-05 14:44:05.663 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ff2061d
[DEBUG] 2020-03-05 14:44:05.663 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ff2061d
[DEBUG] 2020-03-05 14:44:05.664 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ff2061d
[DEBUG] 2020-03-05 14:44:05.667 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2804f377
[DEBUG] 2020-03-05 14:44:05.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2804f377
[DEBUG] 2020-03-05 14:44:05.669 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ca1c1d5
[DEBUG] 2020-03-05 14:44:05.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ca1c1d5
[DEBUG] 2020-03-05 14:44:05.671 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@221ffac5
[DEBUG] 2020-03-05 14:44:05.671 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@221ffac5
[DEBUG] 2020-03-05 14:44:05.671 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40686eae
[DEBUG] 2020-03-05 14:44:05.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@251bdaf5
[DEBUG] 2020-03-05 14:44:05.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1eb5ca0c
[DEBUG] 2020-03-05 14:44:05.673 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1eb5ca0c
[DEBUG] 2020-03-05 14:44:05.674 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4b725f2a
[DEBUG] 2020-03-05 14:44:05.674 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4b725f2a
[DEBUG] 2020-03-05 14:44:05.677 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7728bcc3
[DEBUG] 2020-03-05 14:44:05.677 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7728bcc3
[DEBUG] 2020-03-05 14:44:05.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@22fabed5
[DEBUG] 2020-03-05 14:44:05.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@22fabed5
[DEBUG] 2020-03-05 14:44:05.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ba1aab6
[DEBUG] 2020-03-05 14:44:05.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ba1aab6
[DEBUG] 2020-03-05 14:44:05.680 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5b0e84bc
[DEBUG] 2020-03-05 14:44:05.680 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5b0e84bc
[DEBUG] 2020-03-05 14:44:05.681 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a4f1bf9
[DEBUG] 2020-03-05 14:44:05.681 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a4f1bf9
[DEBUG] 2020-03-05 14:44:05.684 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@79f89c41
[DEBUG] 2020-03-05 14:44:05.684 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@79f89c41
[DEBUG] 2020-03-05 14:44:05.686 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@a7bbfd8
[DEBUG] 2020-03-05 14:44:05.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@a7bbfd8
[DEBUG] 2020-03-05 14:44:05.690 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6f0f43d2
[DEBUG] 2020-03-05 14:44:05.690 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f0f43d2
[DEBUG] 2020-03-05 14:44:05.691 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d3b61ce
[DEBUG] 2020-03-05 14:44:05.692 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d3b61ce
[DEBUG] 2020-03-05 14:44:05.692 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3cb576c5
[DEBUG] 2020-03-05 14:44:05.692 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3cb576c5
[DEBUG] 2020-03-05 14:44:05.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3cb576c5
[DEBUG] 2020-03-05 14:44:05.694 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50557df9
[DEBUG] 2020-03-05 14:44:05.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@32766eab
[DEBUG] 2020-03-05 14:44:05.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@32766eab
[DEBUG] 2020-03-05 14:44:05.697 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@32766eab
[DEBUG] 2020-03-05 14:44:05.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7be8911e
[DEBUG] 2020-03-05 14:44:05.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2bc9391d
[DEBUG] 2020-03-05 14:44:05.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2bc9391d
[DEBUG] 2020-03-05 14:44:05.701 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7ff49930
[DEBUG] 2020-03-05 14:44:05.702 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ff49930
[DEBUG] 2020-03-05 14:44:05.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d0a208d
[DEBUG] 2020-03-05 14:44:05.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d0a208d
[DEBUG] 2020-03-05 14:44:05.709 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5cb13105
[DEBUG] 2020-03-05 14:44:05.709 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5cb13105
[DEBUG] 2020-03-05 14:44:05.713 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f39a177
[DEBUG] 2020-03-05 14:44:05.713 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f39a177
[DEBUG] 2020-03-05 14:44:05.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69690749
[DEBUG] 2020-03-05 14:44:05.717 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4cee936b
[DEBUG] 2020-03-05 14:44:05.718 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4cee936b
[DEBUG] 2020-03-05 14:44:05.719 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4cee936b
[DEBUG] 2020-03-05 14:44:05.721 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78ce83a6
[DEBUG] 2020-03-05 14:44:05.721 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78ce83a6
[DEBUG] 2020-03-05 14:44:05.721 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78ce83a6
[DEBUG] 2020-03-05 14:44:05.724 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@11764699
[DEBUG] 2020-03-05 14:44:05.724 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@f7d0d20
[DEBUG] 2020-03-05 14:44:05.727 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@78dd521a
[DEBUG] 2020-03-05 14:44:05.727 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@78dd521a
[DEBUG] 2020-03-05 14:44:05.727 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@78dd521a
[DEBUG] 2020-03-05 14:44:05.728 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3600f7cb
[DEBUG] 2020-03-05 14:44:05.728 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3600f7cb
[DEBUG] 2020-03-05 14:44:05.728 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3600f7cb
[DEBUG] 2020-03-05 14:44:05.728 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2499c7e4
[DEBUG] 2020-03-05 14:44:05.728 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@352d368a
[DEBUG] 2020-03-05 14:44:05.730 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5180648e
[DEBUG] 2020-03-05 14:44:05.730 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5180648e
[DEBUG] 2020-03-05 14:44:05.731 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4bbbbb46
[DEBUG] 2020-03-05 14:44:05.731 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@a357b17
[DEBUG] 2020-03-05 14:44:05.732 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a357b17
[DEBUG] 2020-03-05 14:44:05.737 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4be27f1
[DEBUG] 2020-03-05 14:44:05.738 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4be27f1
[DEBUG] 2020-03-05 14:44:05.738 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a42df2c
[DEBUG] 2020-03-05 14:44:05.739 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3382a671
[DEBUG] 2020-03-05 14:44:05.742 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5f7bd54a
[DEBUG] 2020-03-05 14:44:05.746 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@45c0ef2d
[DEBUG] 2020-03-05 14:44:05.746 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45c0ef2d
[DEBUG] 2020-03-05 14:44:05.746 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51c1d70e
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67c2ec1a
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ac64e92
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ee6c26a
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41401f1f
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31929911
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59c8e36f
[DEBUG] 2020-03-05 14:44:05.747 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71158fae
[DEBUG] 2020-03-05 14:44:05.797 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-05 14:44:05.797 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-05 14:44:05.798 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-05 14:44:05.798 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-05 14:44:05.798 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-05 14:44:05.799 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-05 14:44:05.800 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-05 14:44:05.801 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-05 14:44:05.801 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-05 14:44:05.804 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-05 14:44:05.805 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-05 14:44:05.807 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-05 14:44:05.808 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-05 14:44:05.809 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-05 14:44:05.816 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-05 14:44:05.817 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-05 14:44:05.817 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-05 14:44:05.989 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-05 14:44:06.322 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-05 14:44:06.322 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-05 14:44:06.322 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-05 14:44:06.379 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-05 14:44:06.433 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-05 14:44:06.464 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-05 14:44:06.594 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-05 14:44:06.607 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d8258fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51673d37]
[DEBUG] 2020-03-05 14:44:06.693 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:06.730 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:06.744 [http-nio-8080-exec-3] EntityBinder - Import with entity name User
[DEBUG] 2020-03-05 14:44:06.748 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-05 14:44:06.789 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.797 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-05 14:44:06.798 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-05 14:44:06.802 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-05 14:44:06.809 [http-nio-8080-exec-3] PropertyBinder - Building property userId
[DEBUG] 2020-03-05 14:44:06.814 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:06.816 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.817 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-05 14:44:06.817 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-05 14:44:06.817 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-05 14:44:06.817 [http-nio-8080-exec-3] PropertyBinder - Building property biography
[DEBUG] 2020-03-05 14:44:06.817 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.818 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-05 14:44:06.818 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-05 14:44:06.818 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-05 14:44:06.818 [http-nio-8080-exec-3] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-05 14:44:06.820 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.821 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.821 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-05 14:44:06.821 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:06.821 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:06.848 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.850 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.855 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.871 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.872 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.873 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.877 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.877 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.877 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:44:06.882 [http-nio-8080-exec-3] PropertyBinder - Building property crews
[DEBUG] 2020-03-05 14:44:06.883 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.883 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-05 14:44:06.883 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-05 14:44:06.883 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-05 14:44:06.883 [http-nio-8080-exec-3] PropertyBinder - Building property email
[DEBUG] 2020-03-05 14:44:06.884 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.884 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.884 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:44:06.885 [http-nio-8080-exec-3] PropertyBinder - Building property faqs
[DEBUG] 2020-03-05 14:44:06.887 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.887 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.888 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:44:06.889 [http-nio-8080-exec-3] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:44:06.891 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.893 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-05 14:44:06.895 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-05 14:44:06.895 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-05 14:44:06.895 [http-nio-8080-exec-3] PropertyBinder - Building property firstName
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] PropertyBinder - Building property gender
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] PropertyBinder - Building property lastName
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-05 14:44:06.896 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] PropertyBinder - Building property password
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] PropertyBinder - Building property picture
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.897 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.898 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.898 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.898 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.898 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] PropertyBinder - Building property roles
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.899 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.900 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.900 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:44:06.902 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:44:06.911 [http-nio-8080-exec-3] PropertyBinder - Building property trailers
[DEBUG] 2020-03-05 14:44:06.913 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.913 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.914 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-05 14:44:06.914 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-05 14:44:06.914 [http-nio-8080-exec-3] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-05 14:44:06.916 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-05 14:44:06.917 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-05 14:44:06.917 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-05 14:44:06.918 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-05 14:44:06.918 [http-nio-8080-exec-3] PropertyBinder - Building property username
[DEBUG] 2020-03-05 14:44:06.921 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:44:06.921 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:06.922 [http-nio-8080-exec-3] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-05 14:44:06.922 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-05 14:44:06.934 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.934 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-05 14:44:06.935 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-05 14:44:06.935 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-05 14:44:06.935 [http-nio-8080-exec-3] PropertyBinder - Building property roleId
[DEBUG] 2020-03-05 14:44:06.935 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:06.935 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.935 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.936 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-05 14:44:06.936 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:06.936 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.938 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.943 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:44:06.943 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:44:06.944 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:06.944 [http-nio-8080-exec-3] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-05 14:44:06.944 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-05 14:44:06.945 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-05 14:44:06.946 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] PropertyBinder - Building property author
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] PropertyBinder - Building property cover
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:06.947 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - Building property duration
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - Building property link
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-05 14:44:06.948 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - Building property summary
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.949 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] PropertyBinder - Building property video
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-05 14:44:06.950 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-05 14:44:06.953 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] PropertyBinder - Building property faqId
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.954 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-05 14:44:06.955 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-05 14:44:06.955 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-05 14:44:06.955 [http-nio-8080-exec-3] PropertyBinder - Building property category
[DEBUG] 2020-03-05 14:44:06.956 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.956 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.957 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-05 14:44:06.957 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:06.957 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:06.961 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.961 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-05 14:44:06.961 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-05 14:44:06.962 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-05 14:44:06.964 [http-nio-8080-exec-3] PropertyBinder - Building property description
[DEBUG] 2020-03-05 14:44:06.966 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.967 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.968 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:44:06.969 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:44:06.969 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:06.969 [http-nio-8080-exec-3] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-05 14:44:06.969 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-05 14:44:06.972 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.972 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] PropertyBinder - Building property genreId
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-05 14:44:06.973 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-05 14:44:06.974 [http-nio-8080-exec-3] PropertyBinder - Building property description
[DEBUG] 2020-03-05 14:44:06.974 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.974 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.974 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.974 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.975 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-05 14:44:06.975 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-05 14:44:06.975 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:44:06.976 [http-nio-8080-exec-3] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:44:06.976 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:06.977 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:44:06.978 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:06.978 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:06.978 [http-nio-8080-exec-3] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-05 14:44:06.978 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-05 14:44:06.982 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] PropertyBinder - Building property filmId
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] PropertyBinder - Building property cover
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-05 14:44:06.983 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:44:06.984 [http-nio-8080-exec-3] PropertyBinder - Building property crews
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] PropertyBinder - Building property director
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] PropertyBinder - Building property duration
[DEBUG] 2020-03-05 14:44:06.985 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.986 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-05 14:44:06.986 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-05 14:44:06.986 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-05 14:44:06.986 [http-nio-8080-exec-3] PropertyBinder - Building property episode
[DEBUG] 2020-03-05 14:44:06.986 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.987 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.987 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.987 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:06.987 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.987 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.987 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:44:06.992 [http-nio-8080-exec-3] PropertyBinder - Building property genres
[DEBUG] 2020-03-05 14:44:06.992 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.992 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-05 14:44:06.992 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - Building property link
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - Building property summary
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:44:06.993 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:44:06.994 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.994 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:44:06.994 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-05 14:44:06.994 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:06.994 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:44:06.995 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:06.995 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:06.995 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:44:06.999 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.003 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-05 14:44:07.004 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-05 14:44:07.004 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-05 14:44:07.004 [http-nio-8080-exec-3] PropertyBinder - Building property video
[DEBUG] 2020-03-05 14:44:07.004 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:07.005 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:44:07.005 [http-nio-8080-exec-3] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-05 14:44:07.005 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-05 14:44:07.010 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - Building property crewId
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - Building property biography
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-05 14:44:07.011 [http-nio-8080-exec-3] PropertyBinder - Building property email
[DEBUG] 2020-03-05 14:44:07.012 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.012 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.012 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.012 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-05 14:44:07.013 [http-nio-8080-exec-3] PropertyBinder - Building property firstName
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] PropertyBinder - Building property lastName
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-05 14:44:07.014 [http-nio-8080-exec-3] PropertyBinder - Building property profession
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:44:07.015 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-05 14:44:07.016 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-05 14:44:07.017 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-05 14:44:07.029 [http-nio-8080-exec-3] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-05 14:44:07.030 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:44:07.031 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:44:07.034 [http-nio-8080-exec-3] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-05 14:44:07.034 [http-nio-8080-exec-3] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-05 14:44:07.034 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-05 14:44:07.034 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:44:07.034 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.crews through a foreign key
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.crews -> Crew
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Crew.user
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-05 14:44:07.035 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-05 14:44:07.036 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-05 14:44:07.037 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.039 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.039 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.039 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:07.041 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.041 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:44:07.041 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.041 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.041 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.044 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.120 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2020-03-05 14:44:07.121 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-05 14:44:07.122 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-05 14:44:07.122 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-05 14:44:07.220 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-05 14:44:07.274 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-05 14:44:07.274 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3f773b94, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-05 14:44:07.311 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:44:07.312 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.334 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:44:07.334 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:44:07.341 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:44:07.341 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:44:07.343 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:44:07.343 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:44:07.343 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:44:07.343 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:44:07.345 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:44:07.345 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:07.349 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:44:07.349 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:07.359 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-05 14:44:07.360 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-05 14:44:07.360 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d8258fd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6da9b504]
[DEBUG] 2020-03-05 14:44:07.430 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:44:07.430 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.459 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:44:07.460 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:07.948 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:44:07.948 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:44:07.948 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:44:07.948 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:44:07.965 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:44:07.965 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:44:07.965 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:44:07.965 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:44:07.986 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:44:07.986 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:44:07.987 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:44:07.987 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:44:07.987 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:44:07.987 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:44:08.020 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:44:08.020 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:08.025 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:44:08.025 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:08.055 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:44:08.055 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:08.056 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:44:08.056 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:08.086 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:44:08.086 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Crew set user=? where crew_id=?
[DEBUG] 2020-03-05 14:44:08.086 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Crew set  where crew_id=?
[DEBUG] 2020-03-05 14:44:08.086 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Crew set user=null where user=? and crew_id=?
[DEBUG] 2020-03-05 14:44:08.086 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Crew set user=null where user=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-05 14:44:08.087 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-05 14:44:08.088 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:44:08.088 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-05 14:44:08.088 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-05 14:44:08.088 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-05 14:44:08.088 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-05 14:44:08.089 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-05 14:44:08.092 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.122 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eabd093]
[DEBUG] 2020-03-05 14:44:08.124 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.124 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.124 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.131 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31d85eb4]
[DEBUG] 2020-03-05 14:44:08.133 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cde795c]
[DEBUG] 2020-03-05 14:44:08.133 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@281897bc]
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426fa9e8]
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.134 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295f9b59]
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59614550]
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1485fa1d]
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57d0fe1b]
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235c1dfa]
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b5ad15b]
[DEBUG] 2020-03-05 14:44:08.136 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@582aac07]
[DEBUG] 2020-03-05 14:44:08.137 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.137 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.137 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.137 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.137 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.138 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.138 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d248256]
[DEBUG] 2020-03-05 14:44:08.138 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@102ec875]
[DEBUG] 2020-03-05 14:44:08.138 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.138 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.138 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.140 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e06296a]
[DEBUG] 2020-03-05 14:44:08.142 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.142 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.142 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.155 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.167 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d48b282]
[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2152198]
[DEBUG] 2020-03-05 14:44:08.169 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b28d65]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f56f1b3]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dff996e]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664d68a8]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d54b6d9]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd174f4]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41545dee]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cdb1765]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44618859]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d022f5]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cc7809b]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e02c07c]
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.170 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b8d2334]
[DEBUG] 2020-03-05 14:44:08.171 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.171 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.171 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.171 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.171 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.171 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-05 14:44:08.187 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-05 14:44:08.187 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@166d694f]
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.188 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.189 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591665b0]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51eea443]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f4e99d6]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@251f5e6a]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d9f8d8d]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@977f8c1]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@324c5010]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@adae940]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac6e4db]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4a087df2]
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.190 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.191 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.191 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b64360]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d59829]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@147851fb]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630e4d2a]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d1495b2]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46f41f]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56e78a65]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4711fa8e]
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.192 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53eea4f5]
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b63f18c]
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1ff073bd]
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:44:08.193 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bbacd1]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d213467]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@459a9e3a]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42de4fe8]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56c8d9d8]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3012eb69]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21e8d81f]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@117972c5]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16f6f2b]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260185cc]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@414e8933]
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.194 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611706f6]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e20dfbd]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65c48237]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@380c334a]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4029cec1]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14df6727]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55cb8ab1]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c846521]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d5fdb6]
[DEBUG] 2020-03-05 14:44:08.195 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddc4494]
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64cbc59c]
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-05 14:44:08.196 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66dc75db]
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53f6aaec]
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f6f29a]
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@558137f2]
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1743f17]
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66717f81]
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:44:08.197 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a93ea1a]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6737eb9c]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fb1f5e6]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37753c6f]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f464a16]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcf011f]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d71d185]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f91c00]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e32ec93]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bd0d5b3]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6a93f028]
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.198 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.199 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@692662a5]
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ddb7e6]
[DEBUG] 2020-03-05 14:44:08.200 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a42b15e]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@168339bb]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42b5ce0a]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c058a1a]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53521a85]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c93bfb5]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@303affb3]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@508fe6f4]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35458901]
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.201 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.202 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.202 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:44:08.202 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:44:08.202 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b1bb2db]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@390d23d9]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30de475a]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36d5a6f0]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bfb188b]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bb8fbc6]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@499e997c]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52675499]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@515b211e]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4832e285]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e9794c]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5138772f]
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.203 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f97275]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a42c765]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4237cc5e]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a7574b7]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@864a60a]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64f1318c]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18584470]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59495b00]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7430e2d5]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5083be35]
[DEBUG] 2020-03-05 14:44:08.204 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d6c8ba]
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3cedd8ee]
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.205 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.206 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-05 14:44:08.206 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:44:08.206 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:44:08.209 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:44:08.213 [http-nio-8080-exec-3] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:44:08.213 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.created_at as created_3_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_, crew_.user as user9_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Crew set biography=?, created_at=?, email=?, first_name=?, last_name=?, profession=?, updated_at=?, user=? where crew_id=?
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f3efaf]
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cfb7fd0]
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@521c209d]
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e6e23e6]
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43a08b5a]
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708b437b]
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fa53f9f]
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@385f7e2b]
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f62c821]
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5558cc2d]
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79202b4f]
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0ab9e2]
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a2cdc5]
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.216 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.217 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.217 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.217 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:44:08.221 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd90167]
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17fa43f3]
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bbbbcec]
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e9c46c5]
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.222 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.223 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.224 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.224 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:44:08.224 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.225 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.225 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22d2de85]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d84aef]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ee90df]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@188e79e5]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c9cba87]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2512c9]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24fac6fe]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fb2bf2]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@18adb0c6]
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.226 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.227 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:44:08.227 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:44:08.227 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:44:08.227 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46a3f2ad]
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afe3f3b]
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10b57be9]
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b899923]
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:44:08.234 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.237 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.238 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.crews].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.crews].<elements>.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.crews].<elements>.films.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {user9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crews0_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.crews: select crews0_.user as user9_0_0_, crews0_.crew_id as crew_id1_0_0_, crews0_.crew_id as crew_id1_0_1_, crews0_.biography as biograph2_0_1_, crews0_.created_at as created_3_0_1_, crews0_.email as email4_0_1_, crews0_.first_name as first_na5_0_1_, crews0_.last_name as last_nam6_0_1_, crews0_.profession as professi7_0_1_, crews0_.updated_at as updated_8_0_1_, crews0_.user as user9_0_1_ from Crew crews0_ where crews0_.user=?
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54b061b9]
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56bd693d]
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:44:08.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.240 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.242 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41f68694]
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cbfeb16]
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:44:08.243 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.244 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46cd6ec6]
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a9da52]
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.245 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.246 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.246 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b32e38b]
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c2ddf5]
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:44:08.247 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11331e17]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f844b1]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5785e42f]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2feb867f]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a0382ff]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62dfa90c]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6f1b7a]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3844a416]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed6cd9b]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@215e8484]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1259ef1e]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@f209d57]
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.248 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.249 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.249 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@121de755]
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f72a26c]
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5699d48b]
[DEBUG] 2020-03-05 14:44:08.272 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc27df6]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3b243e]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1524ee76]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a761ce9]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@80ecf4d]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7effdb]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d9be71c]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67502512]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19dafa12]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61224ed5]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@363f6ea]
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.273 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bb947e6]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581ee0a2]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29197eeb]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76446853]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a350550]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2839d4db]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fab806]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17a956fa]
[DEBUG] 2020-03-05 14:44:08.274 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d4deda]
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13ad53b7]
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@480e34c]
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@59437ba0]
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.275 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Film.crews].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Film.crews].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Film.crews].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Film.crews].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_, crew1_.user as user9_0_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id left outer join SM_Users user2_ on crew1_.user=user2_.user_id where crews0_.film_id=?
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@737b8646]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70e281e6]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5907a28]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619926cd]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389c0d44]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@101bebd4]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@988ac35]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cba6310]
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:44:08.276 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-05 14:44:08.277 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-05 14:44:08.331 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-05 14:44:08.331 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-05 14:44:08.332 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-05 14:44:08.344 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-05 14:44:08.344 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-05 14:44:08.345 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-05 14:44:08.345 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-05 14:44:08.347 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5fdb728b
[DEBUG] 2020-03-05 14:44:08.349 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: 3b78bb79-b103-4860-b030-4030d12d5e7f (<unnamed>)
[DEBUG] 2020-03-05 14:44:08.349 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-05 14:44:08.476 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-05 14:44:08.529 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Crew as generatedAlias0
[DEBUG] 2020-03-05 14:44:08.580 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4fd1b724
[DEBUG] 2020-03-05 14:44:08.624 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Crew as generatedAlias0
[DEBUG] 2020-03-05 14:44:08.628 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-05 14:44:08.633 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Crew'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-05 14:44:08.658 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-05 14:44:08.676 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : com.streammedia.entity.Crew (generatedAlias0) -> crew0_
[DEBUG] 2020-03-05 14:44:08.676 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> crew0_.crew_id
[DEBUG] 2020-03-05 14:44:08.678 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-05 14:44:08.678 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} crew0_.crew_id ) ( FromClause{level=1} Crew crew0_ ) )
[DEBUG] 2020-03-05 14:44:08.689 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [Crew crew0_]
[DEBUG] 2020-03-05 14:44:08.690 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-05 14:44:08.691 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Crew)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'crew0_.crew_id as crew_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Crew, tableAlias=crew0_}
    |  \-[SQL_TOKEN] SqlFragment: 'crew0_.biography as biograph2_0_, crew0_.created_at as created_3_0_, crew0_.email as email4_0_, crew0_.first_name as first_na5_0_, crew0_.last_name as last_nam6_0_, crew0_.profession as professi7_0_, crew0_.updated_at as updated_8_0_, crew0_.user as user9_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[crew0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Crew crew0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Crew,tableAlias=crew0_,origin=null,columns={,className=com.streammedia.entity.Crew}}

[DEBUG] 2020-03-05 14:44:08.691 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-05 14:44:08.697 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Crew as generatedAlias0
[DEBUG] 2020-03-05 14:44:08.697 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select crew0_.crew_id as crew_id1_0_, crew0_.biography as biograph2_0_, crew0_.created_at as created_3_0_, crew0_.email as email4_0_, crew0_.first_name as first_na5_0_, crew0_.last_name as last_nam6_0_, crew0_.profession as professi7_0_, crew0_.updated_at as updated_8_0_, crew0_.user as user9_0_ from Crew crew0_
[DEBUG] 2020-03-05 14:44:08.697 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-05 14:44:08.727 [http-nio-8080-exec-3] SQL - select crew0_.crew_id as crew_id1_0_, crew0_.biography as biograph2_0_, crew0_.created_at as created_3_0_, crew0_.email as email4_0_, crew0_.first_name as first_na5_0_, crew0_.last_name as last_nam6_0_, crew0_.profession as professi7_0_, crew0_.updated_at as updated_8_0_, crew0_.user as user9_0_ from Crew crew0_
[DEBUG] 2020-03-05 14:44:08.762 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:44:08.764 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.Crew#1]
[DEBUG] 2020-03-05 14:44:08.780 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Crew#1]
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `biography` : value = This is biography for Lisa.
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = llarson@example.com
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.781 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.787 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Lisa
[DEBUG] 2020-03-05 14:44:08.787 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.787 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Larson
[DEBUG] 2020-03-05 14:44:08.787 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.787 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `profession` : value = Student
[DEBUG] 2020-03-05 14:44:08.787 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`profession`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.788 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-05
[DEBUG] 2020-03-05 14:44:08.788 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.788 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-03-05 14:44:08.788 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.796 [http-nio-8080-exec-3] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:44:08.802 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-05 14:44:08.803 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-05 14:44:08.847 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-05 14:44:08.850 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.851 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-05 14:44:08.856 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.857 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3a6052f1
[DEBUG] 2020-03-05 14:44:08.858 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.866 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-05 14:44:08.867 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.867 [http-nio-8080-exec-3] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-05 14:44:08.867 [http-nio-8080-exec-3] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:44:08.888 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:44:08.888 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:44:08.888 [http-nio-8080-exec-3] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:44:08.889 [http-nio-8080-exec-3] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:44:08.892 [http-nio-8080-exec-3] Loader - Done entity load
[DEBUG] 2020-03-05 14:44:08.893 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:44:08.893 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:44:08.895 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-05 14:44:08.895 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:44:08.895 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-05 14:44:08.895 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-05 14:44:08.895 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Crew#1]
[DEBUG] 2020-03-05 14:44:08.899 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-05 14:44:08.928 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0
[DEBUG] 2020-03-05 14:44:08.928 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Genre as generatedAlias0
[DEBUG] 2020-03-05 14:44:08.930 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-05 14:44:08.930 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Genre'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-05 14:44:08.930 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-05 14:44:08.931 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : com.streammedia.entity.Genre (generatedAlias0) -> genre0_
[DEBUG] 2020-03-05 14:44:08.931 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> genre0_.genre_id
[DEBUG] 2020-03-05 14:44:08.931 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-05 14:44:08.931 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} genre0_.genre_id ) ( FromClause{level=1} Genre genre0_ ) )
[DEBUG] 2020-03-05 14:44:08.931 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [Genre genre0_]
[DEBUG] 2020-03-05 14:44:08.931 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-05 14:44:08.932 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Genre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'genre0_.genre_id as genre_id1_5_' {alias=generatedAlias0, className=com.streammedia.entity.Genre, tableAlias=genre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[genre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Genre genre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Genre,tableAlias=genre0_,origin=null,columns={,className=com.streammedia.entity.Genre}}

[DEBUG] 2020-03-05 14:44:08.932 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-05 14:44:08.932 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Genre as generatedAlias0
[DEBUG] 2020-03-05 14:44:08.932 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-05 14:44:08.932 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-05 14:44:08.933 [http-nio-8080-exec-3] SQL - select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-05 14:44:08.935 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:44:08.936 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-05 14:44:08.938 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2020-03-05 14:44:08.938 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.939 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Romantics
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.940 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:44:08.941 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-05 14:44:08.942 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-05 14:45:21.158 [http-nio-8080-exec-6] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:45:21.161 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-05 14:45:21.161 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-05 14:45:21.161 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:45:21.162 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@446f1448
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-05 14:45:21.163 [http-nio-8080-exec-6] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:45:21.164 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] Loader - Done entity load
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-05 14:45:21.165 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-05 14:52:50.277 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-05 14:52:50.279 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-05 14:52:50.285 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-05 14:52:50.367 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-05 14:52:50.369 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-05 14:52:50.542 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-05 14:52:50.542 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-05 14:52:50.544 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-05 14:52:50.776 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-05 14:52:50.793 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-05 14:52:50.795 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-05 14:52:50.816 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-05 14:52:50.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@176e35c3
[DEBUG] 2020-03-05 14:52:50.866 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@176e35c3
[DEBUG] 2020-03-05 14:52:50.866 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@176e35c3
[DEBUG] 2020-03-05 14:52:50.866 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7244c3f9
[DEBUG] 2020-03-05 14:52:50.867 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@36e93344
[DEBUG] 2020-03-05 14:52:50.868 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@94d4519
[DEBUG] 2020-03-05 14:52:50.870 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@364afb0d
[DEBUG] 2020-03-05 14:52:50.870 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@364afb0d
[DEBUG] 2020-03-05 14:52:50.871 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@364afb0d
[DEBUG] 2020-03-05 14:52:50.874 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@58df8c15
[DEBUG] 2020-03-05 14:52:50.874 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@58df8c15
[DEBUG] 2020-03-05 14:52:50.874 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@58df8c15
[DEBUG] 2020-03-05 14:52:50.875 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b12a1da
[DEBUG] 2020-03-05 14:52:50.876 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b12a1da
[DEBUG] 2020-03-05 14:52:50.876 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b12a1da
[DEBUG] 2020-03-05 14:52:50.876 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@40b0232
[DEBUG] 2020-03-05 14:52:50.876 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@40b0232
[DEBUG] 2020-03-05 14:52:50.876 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40b0232
[DEBUG] 2020-03-05 14:52:50.877 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6548cc18
[DEBUG] 2020-03-05 14:52:50.877 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6548cc18
[DEBUG] 2020-03-05 14:52:50.877 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6548cc18
[DEBUG] 2020-03-05 14:52:50.878 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f9c1cbb
[DEBUG] 2020-03-05 14:52:50.878 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f9c1cbb
[DEBUG] 2020-03-05 14:52:50.878 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f9c1cbb
[DEBUG] 2020-03-05 14:52:50.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@334ad564
[DEBUG] 2020-03-05 14:52:50.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@334ad564
[DEBUG] 2020-03-05 14:52:50.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@334ad564
[DEBUG] 2020-03-05 14:52:50.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b530b8f
[DEBUG] 2020-03-05 14:52:50.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b530b8f
[DEBUG] 2020-03-05 14:52:50.880 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25a8f8f7
[DEBUG] 2020-03-05 14:52:50.880 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25a8f8f7
[DEBUG] 2020-03-05 14:52:50.881 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1ed02fc8
[DEBUG] 2020-03-05 14:52:50.881 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ed02fc8
[DEBUG] 2020-03-05 14:52:50.881 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@185ea311
[DEBUG] 2020-03-05 14:52:50.883 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7aef2cf
[DEBUG] 2020-03-05 14:52:50.884 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@539d7537
[DEBUG] 2020-03-05 14:52:50.884 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@539d7537
[DEBUG] 2020-03-05 14:52:50.885 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@74291ea4
[DEBUG] 2020-03-05 14:52:50.885 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74291ea4
[DEBUG] 2020-03-05 14:52:50.886 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7e87fffc
[DEBUG] 2020-03-05 14:52:50.886 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7e87fffc
[DEBUG] 2020-03-05 14:52:50.887 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e36186d
[DEBUG] 2020-03-05 14:52:50.887 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5e36186d
[DEBUG] 2020-03-05 14:52:50.888 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@386f40b2
[DEBUG] 2020-03-05 14:52:50.890 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@386f40b2
[DEBUG] 2020-03-05 14:52:50.893 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c5e84ec
[DEBUG] 2020-03-05 14:52:50.893 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c5e84ec
[DEBUG] 2020-03-05 14:52:50.895 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bd06ec2
[DEBUG] 2020-03-05 14:52:50.895 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bd06ec2
[DEBUG] 2020-03-05 14:52:50.896 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62f610bd
[DEBUG] 2020-03-05 14:52:50.897 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62f610bd
[DEBUG] 2020-03-05 14:52:50.898 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@715361da
[DEBUG] 2020-03-05 14:52:50.898 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@715361da
[DEBUG] 2020-03-05 14:52:50.899 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@58bf1f26
[DEBUG] 2020-03-05 14:52:50.899 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58bf1f26
[DEBUG] 2020-03-05 14:52:50.900 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@d1cbdac
[DEBUG] 2020-03-05 14:52:50.900 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d1cbdac
[DEBUG] 2020-03-05 14:52:50.902 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5bb7924d
[DEBUG] 2020-03-05 14:52:50.902 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5bb7924d
[DEBUG] 2020-03-05 14:52:50.902 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5bb7924d
[DEBUG] 2020-03-05 14:52:50.906 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4130b96c
[DEBUG] 2020-03-05 14:52:50.907 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7511287
[DEBUG] 2020-03-05 14:52:50.907 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7511287
[DEBUG] 2020-03-05 14:52:50.909 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7511287
[DEBUG] 2020-03-05 14:52:50.913 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73cd96c2
[DEBUG] 2020-03-05 14:52:50.914 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d900e0a
[DEBUG] 2020-03-05 14:52:50.914 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d900e0a
[DEBUG] 2020-03-05 14:52:50.916 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@569b7cc9
[DEBUG] 2020-03-05 14:52:50.916 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@569b7cc9
[DEBUG] 2020-03-05 14:52:50.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c31f33
[DEBUG] 2020-03-05 14:52:50.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c31f33
[DEBUG] 2020-03-05 14:52:50.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3248cd15
[DEBUG] 2020-03-05 14:52:50.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3248cd15
[DEBUG] 2020-03-05 14:52:50.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4995d5b6
[DEBUG] 2020-03-05 14:52:50.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4995d5b6
[DEBUG] 2020-03-05 14:52:50.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4309b8
[DEBUG] 2020-03-05 14:52:50.919 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@54431fe2
[DEBUG] 2020-03-05 14:52:50.919 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@54431fe2
[DEBUG] 2020-03-05 14:52:50.919 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@54431fe2
[DEBUG] 2020-03-05 14:52:50.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6217fd90
[DEBUG] 2020-03-05 14:52:50.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6217fd90
[DEBUG] 2020-03-05 14:52:50.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6217fd90
[DEBUG] 2020-03-05 14:52:50.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7925e007
[DEBUG] 2020-03-05 14:52:50.921 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@9795c7b
[DEBUG] 2020-03-05 14:52:50.921 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@42105d64
[DEBUG] 2020-03-05 14:52:50.921 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@42105d64
[DEBUG] 2020-03-05 14:52:50.921 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@42105d64
[DEBUG] 2020-03-05 14:52:50.923 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@dcf9912
[DEBUG] 2020-03-05 14:52:50.923 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@dcf9912
[DEBUG] 2020-03-05 14:52:50.923 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@dcf9912
[DEBUG] 2020-03-05 14:52:50.923 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@46197ac2
[DEBUG] 2020-03-05 14:52:50.924 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5a8c51df
[DEBUG] 2020-03-05 14:52:50.926 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7be05cae
[DEBUG] 2020-03-05 14:52:50.926 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7be05cae
[DEBUG] 2020-03-05 14:52:50.926 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d53d01d
[DEBUG] 2020-03-05 14:52:50.928 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@258eb8d4
[DEBUG] 2020-03-05 14:52:50.928 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@258eb8d4
[DEBUG] 2020-03-05 14:52:50.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@32781e1e
[DEBUG] 2020-03-05 14:52:50.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@32781e1e
[DEBUG] 2020-03-05 14:52:50.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2a31aa1b
[DEBUG] 2020-03-05 14:52:50.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f7209f8
[DEBUG] 2020-03-05 14:52:50.931 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@db764fb
[DEBUG] 2020-03-05 14:52:50.935 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@51401807
[DEBUG] 2020-03-05 14:52:50.935 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@51401807
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e64e5ad
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@140ce55c
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a9f170
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@461a3f51
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f4af3b2
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c9fdb02
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60f19d90
[DEBUG] 2020-03-05 14:52:50.937 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7786d668
[DEBUG] 2020-03-05 14:52:50.970 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-05 14:52:50.971 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-05 14:52:50.976 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-05 14:52:50.976 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-05 14:52:50.977 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-05 14:52:50.979 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-05 14:52:50.980 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-05 14:52:50.981 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-05 14:52:50.982 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-05 14:52:50.983 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-05 14:52:50.983 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-05 14:52:50.984 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-05 14:52:50.984 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-05 14:52:50.984 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-05 14:52:50.992 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-05 14:52:50.992 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-05 14:52:50.992 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-05 14:52:51.135 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-05 14:52:51.384 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-05 14:52:51.385 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-05 14:52:51.385 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-05 14:52:51.428 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-05 14:52:51.453 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-05 14:52:51.581 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-05 14:52:51.626 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-05 14:52:51.631 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cd5998f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@335813eb]
[DEBUG] 2020-03-05 14:52:51.693 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.720 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.724 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2020-03-05 14:52:51.729 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-05 14:52:51.761 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.766 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-05 14:52:51.769 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-05 14:52:51.771 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-05 14:52:51.773 [http-nio-8080-exec-10] PropertyBinder - Building property userId
[DEBUG] 2020-03-05 14:52:51.775 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.776 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.777 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-05 14:52:51.777 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-05 14:52:51.777 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-05 14:52:51.777 [http-nio-8080-exec-10] PropertyBinder - Building property biography
[DEBUG] 2020-03-05 14:52:51.777 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.778 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-05 14:52:51.778 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-05 14:52:51.778 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-05 14:52:51.778 [http-nio-8080-exec-10] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-05 14:52:51.779 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.779 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.779 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-05 14:52:51.779 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.779 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.787 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.788 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.790 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.797 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.797 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.797 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.798 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.798 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.799 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:52:51.800 [http-nio-8080-exec-10] PropertyBinder - Building property crews
[DEBUG] 2020-03-05 14:52:51.800 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.801 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] PropertyBinder - Building property faqs
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.802 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-05 14:52:51.803 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] PropertyBinder - Building property gender
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-05 14:52:51.804 [http-nio-8080-exec-10] PropertyBinder - Building property password
[DEBUG] 2020-03-05 14:52:51.805 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.805 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-05 14:52:51.805 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-05 14:52:51.806 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-05 14:52:51.806 [http-nio-8080-exec-10] PropertyBinder - Building property picture
[DEBUG] 2020-03-05 14:52:51.806 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.807 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.807 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.807 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.807 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.807 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.808 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.808 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.808 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:52:51.808 [http-nio-8080-exec-10] PropertyBinder - Building property roles
[DEBUG] 2020-03-05 14:52:51.808 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.809 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.809 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.809 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.809 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.809 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.809 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.811 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:52:51.811 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:52:51.811 [http-nio-8080-exec-10] PropertyBinder - Building property trailers
[DEBUG] 2020-03-05 14:52:51.812 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.812 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.812 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-05 14:52:51.812 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-05 14:52:51.812 [http-nio-8080-exec-10] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-05 14:52:51.813 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-05 14:52:51.813 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-05 14:52:51.813 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-05 14:52:51.813 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-05 14:52:51.813 [http-nio-8080-exec-10] PropertyBinder - Building property username
[DEBUG] 2020-03-05 14:52:51.814 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:52:51.814 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.814 [http-nio-8080-exec-10] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-05 14:52:51.814 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-05 14:52:51.815 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.815 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-05 14:52:51.815 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-05 14:52:51.815 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-05 14:52:51.815 [http-nio-8080-exec-10] PropertyBinder - Building property roleId
[DEBUG] 2020-03-05 14:52:51.815 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.816 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.818 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:52:51.818 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:52:51.818 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.820 [http-nio-8080-exec-10] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-05 14:52:51.821 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-05 14:52:51.825 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.825 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-05 14:52:51.828 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-05 14:52:51.828 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-05 14:52:51.828 [http-nio-8080-exec-10] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-05 14:52:51.829 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.829 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.829 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-05 14:52:51.829 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-05 14:52:51.829 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-05 14:52:51.829 [http-nio-8080-exec-10] PropertyBinder - Building property author
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] PropertyBinder - Building property cover
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] PropertyBinder - Building property duration
[DEBUG] 2020-03-05 14:52:51.830 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] PropertyBinder - Building property link
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-05 14:52:51.831 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] PropertyBinder - Building property summary
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:52:51.832 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] PropertyBinder - Building property video
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-05 14:52:51.833 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-05 14:52:51.834 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - Building property faqId
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - Building property category
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.835 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] PropertyBinder - Building property description
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:52:51.836 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:52:51.837 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.837 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.837 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-05 14:52:51.837 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.837 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-05 14:52:51.838 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] PropertyBinder - Building property genreId
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.840 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] PropertyBinder - Building property description
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.841 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.842 [http-nio-8080-exec-10] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-05 14:52:51.843 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-05 14:52:51.847 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.847 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-05 14:52:51.847 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-05 14:52:51.847 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-05 14:52:51.847 [http-nio-8080-exec-10] PropertyBinder - Building property filmId
[DEBUG] 2020-03-05 14:52:51.847 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] PropertyBinder - Building property cover
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.848 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - Building property crews
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - Building property director
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - Building property duration
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] PropertyBinder - Building property episode
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.849 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - Building property genres
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - Building property link
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - Building property summary
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.850 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] PropertyBinder - Building property video
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:52:51.851 [http-nio-8080-exec-10] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-05 14:52:51.852 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-05 14:52:51.852 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.852 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-05 14:52:51.852 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-05 14:52:51.852 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] PropertyBinder - Building property crewId
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] PropertyBinder - Building property biography
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:52:51.853 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-05 14:52:51.854 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-05 14:52:51.855 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-05 14:52:51.855 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2020-03-05 14:52:51.856 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.857 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-05 14:52:51.857 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-05 14:52:51.857 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-05 14:52:51.857 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2020-03-05 14:52:51.857 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] PropertyBinder - Building property profession
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:52:51.858 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-05 14:52:51.860 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.861 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-05 14:52:51.862 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-05 14:52:51.867 [http-nio-8080-exec-10] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:52:51.868 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:52:51.870 [http-nio-8080-exec-10] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:52:51.871 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.crews through a foreign key
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.crews -> Crew
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Crew.user
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-05 14:52:51.872 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-05 14:52:51.873 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-05 14:52:51.874 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.879 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.879 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.880 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:51.880 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:51.880 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:51.880 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:51.880 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.880 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.884 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-05 14:52:51.884 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.885 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:51.940 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-05 14:52:51.941 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-05 14:52:51.942 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-05 14:52:52.002 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-05 14:52:52.035 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-05 14:52:52.035 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@119a2446, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-05 14:52:52.055 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:52:52.055 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:52.056 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:52:52.056 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:52:52.057 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:52:52.057 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:52:52.057 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:52:52.057 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:52.058 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:52:52.058 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:52:52.058 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:52:52.058 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:52.060 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:52:52.060 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:52.065 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-05 14:52:52.066 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-05 14:52:52.066 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cd5998f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@337ae173]
[DEBUG] 2020-03-05 14:52:52.104 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:52:52.104 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:52.115 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:52:52.115 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:52.391 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:52:52.391 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:52:52.392 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:52:52.392 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:52:52.434 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:52:52.435 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:52:52.435 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:52:52.435 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:52:52.456 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:52:52.456 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:52.456 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:52:52.456 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:52.492 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:52:52.492 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:52:52.493 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:52:52.494 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:52:52.524 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:52:52.524 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:52.530 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:52:52.530 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:52.569 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:52:52.569 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:52.573 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:52:52.574 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:52.606 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:52:52.606 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Crew set user=? where crew_id=?
[DEBUG] 2020-03-05 14:52:52.606 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Crew set  where crew_id=?
[DEBUG] 2020-03-05 14:52:52.606 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Crew set user=null where user=? and crew_id=?
[DEBUG] 2020-03-05 14:52:52.606 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Crew set user=null where user=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-05 14:52:52.607 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-05 14:52:52.608 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-05 14:52:52.609 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-05 14:52:52.610 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:52:52.610 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-05 14:52:52.610 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-05 14:52:52.610 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-05 14:52:52.610 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-05 14:52:52.612 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:52:52.613 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-05 14:52:52.613 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-05 14:52:52.613 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.613 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-05 14:52:52.613 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-05 14:52:52.613 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.631 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ef9d634]
[DEBUG] 2020-03-05 14:52:52.633 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.633 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.633 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.636 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@482e0394]
[DEBUG] 2020-03-05 14:52:52.637 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f1c568]
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a61834f]
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46839cd0]
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.638 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.639 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@761150c5]
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@685429c4]
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d9dcbb0]
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34329ddd]
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dadde45]
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2721f60a]
[DEBUG] 2020-03-05 14:52:52.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@643d4b5d]
[DEBUG] 2020-03-05 14:52:52.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c381488]
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d39a73a]
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@28a582c2]
[DEBUG] 2020-03-05 14:52:52.645 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.645 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.645 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.659 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.679 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44134a]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3369bd98]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75eda7b0]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55933404]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c4e8ab]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19bf1cb6]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d08cf28]
[DEBUG] 2020-03-05 14:52:52.683 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc9e792]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cf20031]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@527be2f1]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59810619]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb68fcc]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bb89fe3]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@145fafb7]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3c7643c0]
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.685 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.685 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.685 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.685 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-05 14:52:52.700 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-05 14:52:52.701 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18f2fda1]
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:52:52.703 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2067eeac]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50544d36]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4ea84b]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15433520]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f19ebfe]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dd626d6]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62a5c9d7]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6269352f]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e4ea3c4]
[DEBUG] 2020-03-05 14:52:52.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@58af1b21]
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d0f8f8]
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d55fc]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bc65752]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec2546e]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8e652ff]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@86874b0]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21bdce28]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d409f55]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30e313a]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8dbc39]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67c6aec3]
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.706 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@324983e8]
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.707 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37909737]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6eca0e1b]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa673d3]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3c763f]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2813217d]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@161748b2]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a038948]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75c19db9]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@446852b5]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6816d052]
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.708 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@372c3de2]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9dee60]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d1bc229]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a69cbe]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35489a84]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd01733]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cb9826a]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dfbb42f]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c168bae]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13507a90]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@13fa1042]
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.709 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf334fd]
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@585c30c7]
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f4d5976]
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.710 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0bcabe]
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55f1a7a8]
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c2c289]
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.711 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.712 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.712 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-05 14:52:52.712 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.720 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@730fba15]
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54310b0a]
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cc084ca]
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ce03aa]
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@557b30c2]
[DEBUG] 2020-03-05 14:52:52.721 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7daef2c7]
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55e0df6c]
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c4a5529]
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20bb8d42]
[DEBUG] 2020-03-05 14:52:52.722 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a097b58]
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7bf177f2]
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.723 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d238e67]
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.724 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b7932e3]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@89aec6d]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbe141a]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d62d724]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c541c5e]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7372743d]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ca3a08d]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27639bca]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd9d594]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@51ea822a]
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.725 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.726 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.726 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:52:52.726 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b75e1d8]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23a127aa]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fcb610]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4703e496]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19d6a53d]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33e05dda]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150a2180]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4df540e3]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6126fb2d]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73cee1dc]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2567831b]
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:52:52.727 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3e47b86d]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d9dd3e]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6eb8aeef]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76aaabda]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ca0b81c]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e32fea2]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7556ec5d]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56817d56]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fa85fc2]
[DEBUG] 2020-03-05 14:52:52.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a6657b]
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14edfb56]
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7105c90d]
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67bc0734]
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.729 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.730 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.730 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-05 14:52:52.733 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:52:52.733 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:52:52.734 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.created_at as created_3_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_, crew_.user as user9_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Crew set biography=?, created_at=?, email=?, first_name=?, last_name=?, profession=?, updated_at=?, user=? where crew_id=?
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630f3ddc]
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a3758b2]
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e65922a]
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.736 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@249ea9e7]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c29ade0]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ecf808d]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fcfd922]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb43d9e]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e63cd25]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c1ae78c]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@330142b3]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180cf5d8]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6cba332a]
[DEBUG] 2020-03-05 14:52:52.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bfa58f7]
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29b990b8]
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47e69877]
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e625d9c]
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31257ab8]
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f369cb]
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e1152b4]
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a3fb95d]
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.741 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55f018]
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59316ce8]
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35f94c4e]
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677d3035]
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1295e003]
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.742 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.743 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:52:52.743 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:52:52.743 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:52:52.743 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:52:52.751 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5afac75b]
[DEBUG] 2020-03-05 14:52:52.751 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1980df3a]
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ab45923]
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55d23640]
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:52:52.752 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.753 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.755 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.crews].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.crews].<elements>.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.crews].<elements>.films.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {user9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crews0_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-05 14:52:52.755 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.crews: select crews0_.user as user9_0_0_, crews0_.crew_id as crew_id1_0_0_, crews0_.crew_id as crew_id1_0_1_, crews0_.biography as biograph2_0_1_, crews0_.created_at as created_3_0_1_, crews0_.email as email4_0_1_, crews0_.first_name as first_na5_0_1_, crews0_.last_name as last_nam6_0_1_, crews0_.profession as professi7_0_1_, crews0_.updated_at as updated_8_0_1_, crews0_.user as user9_0_1_ from Crew crews0_ where crews0_.user=?
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ea676f9]
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf4cdd1]
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.756 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f2ccfba]
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@755c13cb]
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:52:52.757 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.758 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.758 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-05 14:52:52.758 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-05 14:52:52.758 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8291d4f]
[DEBUG] 2020-03-05 14:52:52.758 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dfe95ca]
[DEBUG] 2020-03-05 14:52:52.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:52:52.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:52:52.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.761 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.761 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:52:52.761 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.761 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e64eecb]
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57dd6c08]
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@128d67ce]
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8cf4bb]
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b82e2]
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.762 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@448ceb07]
[DEBUG] 2020-03-05 14:52:52.763 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6cf601]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@514c19dc]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e467e6b]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d316277]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17874f2e]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@263436fb]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6ca170]
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.764 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.765 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3db840b0]
[DEBUG] 2020-03-05 14:52:52.765 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.765 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.765 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.766 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@af3b20a]
[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@623c1dc3]
[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.767 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19344675]
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b648295]
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.771 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e12ed4d]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d5499f2]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@221bc0e7]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b5a396c]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef2a3f7]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47d03ed2]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b30c237]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@716b0d64]
[DEBUG] 2020-03-05 14:52:52.772 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6de5a5]
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c0d6e94]
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.773 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48380f23]
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0d8b4c]
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a81fd24]
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@280a5697]
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5f5ea0]
[DEBUG] 2020-03-05 14:52:52.774 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ad2fab2]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b3252ff]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11761fe0]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64a9e930]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1953887d]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608f9402]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@41a71eec]
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.775 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.776 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Film.crews].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Film.crews].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Film.crews].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Film.crews].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:52:52.776 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_, crew1_.user as user9_0_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id left outer join SM_Users user2_ on crew1_.user=user2_.user_id where crews0_.film_id=?
[DEBUG] 2020-03-05 14:52:52.776 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f79e2d1]
[DEBUG] 2020-03-05 14:52:52.776 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ca44b8]
[DEBUG] 2020-03-05 14:52:52.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:52:52.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:52:52.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-05 14:52:52.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.777 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.778 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.778 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.778 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-05 14:52:52.779 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-05 14:52:52.779 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24b2772d]
[DEBUG] 2020-03-05 14:52:52.779 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc1887]
[DEBUG] 2020-03-05 14:52:52.779 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:52:52.779 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:52:52.779 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c927be6]
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29cf7ad3]
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58bef2f0]
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@509d2abe]
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:52:52.780 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:52:52.782 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:52:52.782 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-05 14:52:52.782 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-05 14:52:52.825 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-05 14:52:52.825 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-05 14:52:52.826 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-05 14:52:52.833 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-05 14:52:52.833 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-05 14:52:52.834 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-05 14:52:52.834 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-05 14:52:52.836 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@67b0eff5
[DEBUG] 2020-03-05 14:52:52.837 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 2ff690ad-c45c-48dd-bde6-26db1014ab1c (<unnamed>)
[DEBUG] 2020-03-05 14:52:52.837 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-05 14:52:52.954 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-05 14:52:52.968 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:52:53.031 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-05 14:52:53.033 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-05 14:52:53.044 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:52:53.054 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:52:53.055 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-05 14:52:53.055 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.055 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-05 14:52:53.055 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.055 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:52:53.055 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.056 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:52:53.056 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-05 14:52:53.062 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@51bfced0
[DEBUG] 2020-03-05 14:52:53.063 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-05 14:52:53.065 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:52:53.066 [http-nio-8080-exec-10] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-05 14:52:53.066 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:52:53.069 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:52:53.070 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:52:53.070 [http-nio-8080-exec-10] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:52:53.070 [http-nio-8080-exec-10] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:52:53.070 [http-nio-8080-exec-10] Loader - Done entity load
[DEBUG] 2020-03-05 14:52:53.070 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:52:53.071 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:52:53.071 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-05 14:52:53.071 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:52:53.071 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-05 14:52:53.072 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-05 14:52:53.072 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-05 14:53:27.583 [http-nio-8080-exec-6] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:53:27.585 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-05 14:53:27.585 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-05 14:53:27.585 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3be2ffef
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-05 14:53:27.586 [http-nio-8080-exec-6] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:53:27.588 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:53:27.588 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:53:27.588 [http-nio-8080-exec-6] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] Loader - Done entity load
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:53:27.589 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-05 14:53:27.590 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-05 14:53:27.590 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-05 14:56:07.108 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-05 14:56:07.110 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-05 14:56:07.113 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-05 14:56:07.188 [http-nio-8080-exec-25] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-05 14:56:07.190 [http-nio-8080-exec-25] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-05 14:56:07.346 [http-nio-8080-exec-25] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-05 14:56:07.347 [http-nio-8080-exec-25] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-05 14:56:07.348 [http-nio-8080-exec-25] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-05 14:56:07.511 [http-nio-8080-exec-25] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-05 14:56:07.529 [http-nio-8080-exec-25] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-05 14:56:07.530 [http-nio-8080-exec-25] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-05 14:56:07.553 [http-nio-8080-exec-25] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-05 14:56:07.635 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@514d72d1
[DEBUG] 2020-03-05 14:56:07.636 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@514d72d1
[DEBUG] 2020-03-05 14:56:07.636 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@514d72d1
[DEBUG] 2020-03-05 14:56:07.637 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3fdf9583
[DEBUG] 2020-03-05 14:56:07.637 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41f13f6c
[DEBUG] 2020-03-05 14:56:07.638 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1d53fd63
[DEBUG] 2020-03-05 14:56:07.638 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@bb20de8
[DEBUG] 2020-03-05 14:56:07.638 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@bb20de8
[DEBUG] 2020-03-05 14:56:07.642 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@bb20de8
[DEBUG] 2020-03-05 14:56:07.646 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6a5d966d
[DEBUG] 2020-03-05 14:56:07.646 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6a5d966d
[DEBUG] 2020-03-05 14:56:07.646 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a5d966d
[DEBUG] 2020-03-05 14:56:07.647 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@e26f01b
[DEBUG] 2020-03-05 14:56:07.647 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@e26f01b
[DEBUG] 2020-03-05 14:56:07.647 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e26f01b
[DEBUG] 2020-03-05 14:56:07.648 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@71e17a33
[DEBUG] 2020-03-05 14:56:07.648 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@71e17a33
[DEBUG] 2020-03-05 14:56:07.648 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71e17a33
[DEBUG] 2020-03-05 14:56:07.649 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5dbb03c9
[DEBUG] 2020-03-05 14:56:07.649 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5dbb03c9
[DEBUG] 2020-03-05 14:56:07.649 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5dbb03c9
[DEBUG] 2020-03-05 14:56:07.652 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4df27e8c
[DEBUG] 2020-03-05 14:56:07.652 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4df27e8c
[DEBUG] 2020-03-05 14:56:07.652 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4df27e8c
[DEBUG] 2020-03-05 14:56:07.654 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7257864b
[DEBUG] 2020-03-05 14:56:07.654 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7257864b
[DEBUG] 2020-03-05 14:56:07.654 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7257864b
[DEBUG] 2020-03-05 14:56:07.655 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b01eddc
[DEBUG] 2020-03-05 14:56:07.656 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b01eddc
[DEBUG] 2020-03-05 14:56:07.662 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27f2ca17
[DEBUG] 2020-03-05 14:56:07.662 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27f2ca17
[DEBUG] 2020-03-05 14:56:07.663 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2db94689
[DEBUG] 2020-03-05 14:56:07.663 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2db94689
[DEBUG] 2020-03-05 14:56:07.663 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1741d272
[DEBUG] 2020-03-05 14:56:07.664 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@520d08d2
[DEBUG] 2020-03-05 14:56:07.664 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1259e213
[DEBUG] 2020-03-05 14:56:07.664 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1259e213
[DEBUG] 2020-03-05 14:56:07.665 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@56649fe1
[DEBUG] 2020-03-05 14:56:07.665 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@56649fe1
[DEBUG] 2020-03-05 14:56:07.668 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@190fc791
[DEBUG] 2020-03-05 14:56:07.668 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@190fc791
[DEBUG] 2020-03-05 14:56:07.670 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@34d5a81a
[DEBUG] 2020-03-05 14:56:07.670 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@34d5a81a
[DEBUG] 2020-03-05 14:56:07.671 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@717b53ac
[DEBUG] 2020-03-05 14:56:07.671 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@717b53ac
[DEBUG] 2020-03-05 14:56:07.677 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3c082323
[DEBUG] 2020-03-05 14:56:07.677 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3c082323
[DEBUG] 2020-03-05 14:56:07.679 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14782cc4
[DEBUG] 2020-03-05 14:56:07.680 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@14782cc4
[DEBUG] 2020-03-05 14:56:07.683 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7d88f6d4
[DEBUG] 2020-03-05 14:56:07.683 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7d88f6d4
[DEBUG] 2020-03-05 14:56:07.686 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@288a0fdf
[DEBUG] 2020-03-05 14:56:07.686 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@288a0fdf
[DEBUG] 2020-03-05 14:56:07.687 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@228e2fa2
[DEBUG] 2020-03-05 14:56:07.687 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@228e2fa2
[DEBUG] 2020-03-05 14:56:07.690 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@bfc180f
[DEBUG] 2020-03-05 14:56:07.690 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bfc180f
[DEBUG] 2020-03-05 14:56:07.690 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@68db8881
[DEBUG] 2020-03-05 14:56:07.690 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68db8881
[DEBUG] 2020-03-05 14:56:07.690 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68db8881
[DEBUG] 2020-03-05 14:56:07.691 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f5dc00e
[DEBUG] 2020-03-05 14:56:07.696 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1e4f0544
[DEBUG] 2020-03-05 14:56:07.696 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e4f0544
[DEBUG] 2020-03-05 14:56:07.696 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e4f0544
[DEBUG] 2020-03-05 14:56:07.699 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d0a2d07
[DEBUG] 2020-03-05 14:56:07.700 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d44a9c2
[DEBUG] 2020-03-05 14:56:07.701 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d44a9c2
[DEBUG] 2020-03-05 14:56:07.702 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@72dc964b
[DEBUG] 2020-03-05 14:56:07.702 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72dc964b
[DEBUG] 2020-03-05 14:56:07.703 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f50811
[DEBUG] 2020-03-05 14:56:07.703 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f50811
[DEBUG] 2020-03-05 14:56:07.709 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7f0a3c98
[DEBUG] 2020-03-05 14:56:07.709 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7f0a3c98
[DEBUG] 2020-03-05 14:56:07.710 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@307e4172
[DEBUG] 2020-03-05 14:56:07.710 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@307e4172
[DEBUG] 2020-03-05 14:56:07.710 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d73ce2c
[DEBUG] 2020-03-05 14:56:07.712 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@50c31122
[DEBUG] 2020-03-05 14:56:07.713 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@50c31122
[DEBUG] 2020-03-05 14:56:07.713 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@50c31122
[DEBUG] 2020-03-05 14:56:07.713 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1457efc1
[DEBUG] 2020-03-05 14:56:07.713 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1457efc1
[DEBUG] 2020-03-05 14:56:07.716 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1457efc1
[DEBUG] 2020-03-05 14:56:07.717 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@66dddee6
[DEBUG] 2020-03-05 14:56:07.717 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5a7eeba3
[DEBUG] 2020-03-05 14:56:07.719 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@73a40129
[DEBUG] 2020-03-05 14:56:07.719 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@73a40129
[DEBUG] 2020-03-05 14:56:07.719 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@73a40129
[DEBUG] 2020-03-05 14:56:07.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59974286
[DEBUG] 2020-03-05 14:56:07.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59974286
[DEBUG] 2020-03-05 14:56:07.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59974286
[DEBUG] 2020-03-05 14:56:07.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3280c1a5
[DEBUG] 2020-03-05 14:56:07.724 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@bdfccc6
[DEBUG] 2020-03-05 14:56:07.725 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4af02c69
[DEBUG] 2020-03-05 14:56:07.725 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4af02c69
[DEBUG] 2020-03-05 14:56:07.726 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@580d2d55
[DEBUG] 2020-03-05 14:56:07.726 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@28905bf9
[DEBUG] 2020-03-05 14:56:07.726 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28905bf9
[DEBUG] 2020-03-05 14:56:07.730 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@488543c6
[DEBUG] 2020-03-05 14:56:07.730 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@488543c6
[DEBUG] 2020-03-05 14:56:07.732 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@43dc2cbd
[DEBUG] 2020-03-05 14:56:07.735 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6b0f9970
[DEBUG] 2020-03-05 14:56:07.738 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@74469ab5
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@11e0fb29
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@11e0fb29
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48e3fc9
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d716130
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d883e3c
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@220e3f85
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@570b2c7a
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a5af4a
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7da0089c
[DEBUG] 2020-03-05 14:56:07.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e81e2ba
[DEBUG] 2020-03-05 14:56:07.796 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-05 14:56:07.796 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-05 14:56:07.797 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-05 14:56:07.797 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-05 14:56:07.801 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-05 14:56:07.802 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-05 14:56:07.803 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-05 14:56:07.805 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-05 14:56:07.807 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-05 14:56:07.807 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-05 14:56:07.807 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-05 14:56:07.808 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-05 14:56:07.808 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-05 14:56:07.808 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-05 14:56:07.813 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-05 14:56:07.813 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-05 14:56:07.813 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-05 14:56:07.946 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-05 14:56:08.263 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-05 14:56:08.265 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-05 14:56:08.265 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-05 14:56:08.373 [http-nio-8080-exec-25] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-05 14:56:08.409 [http-nio-8080-exec-25] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-05 14:56:08.441 [http-nio-8080-exec-25] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-05 14:56:08.512 [http-nio-8080-exec-25] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-05 14:56:08.524 [http-nio-8080-exec-25] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24ca0018] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57ac1505]
[DEBUG] 2020-03-05 14:56:08.583 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.612 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.615 [http-nio-8080-exec-25] EntityBinder - Import with entity name User
[DEBUG] 2020-03-05 14:56:08.618 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-05 14:56:08.646 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.649 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-05 14:56:08.650 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-05 14:56:08.652 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-05 14:56:08.654 [http-nio-8080-exec-25] PropertyBinder - Building property userId
[DEBUG] 2020-03-05 14:56:08.657 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.659 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.659 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-05 14:56:08.659 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-05 14:56:08.659 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-05 14:56:08.659 [http-nio-8080-exec-25] PropertyBinder - Building property biography
[DEBUG] 2020-03-05 14:56:08.659 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.660 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-05 14:56:08.660 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-05 14:56:08.660 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-05 14:56:08.660 [http-nio-8080-exec-25] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-05 14:56:08.660 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.661 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.661 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-05 14:56:08.661 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.661 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.674 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.675 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.677 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.686 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.687 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.688 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.688 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.688 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.689 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:56:08.692 [http-nio-8080-exec-25] PropertyBinder - Building property crews
[DEBUG] 2020-03-05 14:56:08.692 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.692 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-05 14:56:08.692 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-05 14:56:08.692 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-05 14:56:08.693 [http-nio-8080-exec-25] PropertyBinder - Building property email
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] PropertyBinder - Building property faqs
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.694 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-05 14:56:08.695 [http-nio-8080-exec-25] PropertyBinder - Building property firstName
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] PropertyBinder - Building property gender
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-05 14:56:08.696 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] PropertyBinder - Building property lastName
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] PropertyBinder - Building property password
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] PropertyBinder - Building property picture
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.697 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.698 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.698 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.698 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:56:08.698 [http-nio-8080-exec-25] PropertyBinder - Building property roles
[DEBUG] 2020-03-05 14:56:08.698 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.698 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] PropertyBinder - Building property trailers
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-05 14:56:08.699 [http-nio-8080-exec-25] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-05 14:56:08.700 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-05 14:56:08.700 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-05 14:56:08.700 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-05 14:56:08.701 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-05 14:56:08.701 [http-nio-8080-exec-25] PropertyBinder - Building property username
[DEBUG] 2020-03-05 14:56:08.703 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:56:08.704 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.704 [http-nio-8080-exec-25] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-05 14:56:08.704 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-05 14:56:08.705 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] PropertyBinder - Building property roleId
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-05 14:56:08.706 [http-nio-8080-exec-25] PropertyBinder - Building property name
[DEBUG] 2020-03-05 14:56:08.707 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.707 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.708 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-05 14:56:08.708 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.708 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:56:08.708 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.708 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.711 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:56:08.711 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:56:08.712 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.712 [http-nio-8080-exec-25] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-05 14:56:08.712 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] PropertyBinder - Building property author
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] PropertyBinder - Building property cover
[DEBUG] 2020-03-05 14:56:08.713 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - Building property duration
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - Building property link
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - Building property summary
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.714 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-05 14:56:08.715 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-05 14:56:08.716 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-05 14:56:08.716 [http-nio-8080-exec-25] PropertyBinder - Building property video
[DEBUG] 2020-03-05 14:56:08.716 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:56:08.716 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.716 [http-nio-8080-exec-25] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-05 14:56:08.716 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] PropertyBinder - Building property faqId
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] PropertyBinder - Building property category
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.717 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - Building property description
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.718 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-05 14:56:08.719 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] PropertyBinder - Building property genreId
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-05 14:56:08.720 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] PropertyBinder - Building property description
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:56:08.721 [http-nio-8080-exec-25] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-05 14:56:08.722 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-05 14:56:08.723 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] PropertyBinder - Building property filmId
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] PropertyBinder - Building property cover
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.724 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] PropertyBinder - Building property crews
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] PropertyBinder - Building property director
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] PropertyBinder - Building property duration
[DEBUG] 2020-03-05 14:56:08.725 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] PropertyBinder - Building property episode
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.726 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - Building property genres
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - Building property link
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - Building property summary
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.727 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-05 14:56:08.728 [http-nio-8080-exec-25] PropertyBinder - Building property video
[DEBUG] 2020-03-05 14:56:08.729 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:08.729 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-05 14:56:08.729 [http-nio-8080-exec-25] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-05 14:56:08.729 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-05 14:56:08.734 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.734 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] PropertyBinder - Building property crewId
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] PropertyBinder - Building property biography
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.735 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-05 14:56:08.736 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] PropertyBinder - Building property email
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-05 14:56:08.737 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - Building property films
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - Building property firstName
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - Building property lastName
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - Building property profession
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.738 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-05 14:56:08.739 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-05 14:56:08.739 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-05 14:56:08.739 [http-nio-8080-exec-25] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-05 14:56:08.739 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-05 14:56:08.739 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-05 14:56:08.739 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-03-05 14:56:08.740 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-05 14:56:08.741 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-05 14:56:08.742 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-05 14:56:08.752 [http-nio-8080-exec-25] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-05 14:56:08.753 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:56:08.753 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:56:08.755 [http-nio-8080-exec-25] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-05 14:56:08.756 [http-nio-8080-exec-25] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-05 14:56:08.756 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-05 14:56:08.756 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:56:08.756 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:56:08.757 [http-nio-8080-exec-25] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-05 14:56:08.757 [http-nio-8080-exec-25] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-05 14:56:08.757 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-05 14:56:08.757 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:56:08.757 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.crews through a foreign key
[DEBUG] 2020-03-05 14:56:08.758 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.crews -> Crew
[DEBUG] 2020-03-05 14:56:08.758 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Crew.user
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:56:08.759 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-05 14:56:08.760 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.761 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.762 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.766 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.811 [http-nio-8080-exec-25] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - SessionFactory name : null
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Statistics: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Default null ordering: NONE
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Query language substitutions: {}
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Named query checking : enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Second-level cache: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JDBC batch size: 15
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JPA compliance - query : 
[DEBUG] 2020-03-05 14:56:08.812 [http-nio-8080-exec-25] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-05 14:56:08.813 [http-nio-8080-exec-25] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-05 14:56:08.813 [http-nio-8080-exec-25] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-05 14:56:08.894 [http-nio-8080-exec-25] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-05 14:56:08.924 [http-nio-8080-exec-25] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-05 14:56:08.925 [http-nio-8080-exec-25] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@258e1590, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-05 14:56:08.941 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:56:08.941 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:08.942 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:56:08.942 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:56:08.943 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:56:08.943 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:56:08.943 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:56:08.943 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:08.943 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:56:08.943 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:56:08.944 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:56:08.944 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:08.945 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:56:08.945 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:08.947 [http-nio-8080-exec-25] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-05 14:56:08.948 [http-nio-8080-exec-25] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-05 14:56:08.948 [http-nio-8080-exec-25] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24ca0018] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77919bbb]
[DEBUG] 2020-03-05 14:56:08.993 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:56:08.993 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:09.000 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-05 14:56:09.001 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:09.244 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:56:09.245 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:56:09.245 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-05 14:56:09.245 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:56:09.268 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:56:09.268 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:56:09.268 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-05 14:56:09.268 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:56:09.290 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:56:09.290 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:09.290 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-05 14:56:09.290 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:09.303 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:56:09.303 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:56:09.304 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-05 14:56:09.304 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:56:09.324 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:56:09.324 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:09.326 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-05 14:56:09.326 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:09.359 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:56:09.359 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:09.359 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-05 14:56:09.360 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Crew set user=? where crew_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Crew set  where crew_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Crew set user=null where user=? and crew_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Crew set user=null where user=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-05 14:56:09.391 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-05 14:56:09.393 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-05 14:56:09.394 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-05 14:56:09.394 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-05 14:56:09.394 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-05 14:56:09.394 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-05 14:56:09.394 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-05 14:56:09.396 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.430 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48edb03f]
[DEBUG] 2020-03-05 14:56:09.430 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.430 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.430 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.438 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31ce214e]
[DEBUG] 2020-03-05 14:56:09.440 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626823d6]
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@425ca408]
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35b1dae9]
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.441 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f925121]
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@854be31]
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a0fd542]
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@368b24ee]
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a087ed]
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e2a954b]
[DEBUG] 2020-03-05 14:56:09.443 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299e48c]
[DEBUG] 2020-03-05 14:56:09.445 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.445 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.445 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.445 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.445 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.447 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.447 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25eeae89]
[DEBUG] 2020-03-05 14:56:09.447 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b81de6e]
[DEBUG] 2020-03-05 14:56:09.447 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.447 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.447 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.448 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@13e9f1fe]
[DEBUG] 2020-03-05 14:56:09.450 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.450 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.453 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.471 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.482 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2e5e1e]
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c343e7d]
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1bbf1e]
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:56:09.487 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2268ce4d]
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eebf50a]
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.491 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.492 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d1fd7c]
[DEBUG] 2020-03-05 14:56:09.492 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.492 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.492 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51ef780]
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14cc118c]
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@284a2474]
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf394c5]
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39a3d8cc]
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d17ee05]
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.493 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@444724ba]
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36529df1]
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a0bfcce]
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.497 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.498 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.499 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.499 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-05 14:56:09.512 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b94b3b]
[DEBUG] 2020-03-05 14:56:09.513 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9099db]
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@832b1e6]
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb88a69]
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.514 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40e88c24]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b52dee]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48150b3f]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f43b96]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a7331ab]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393899f8]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@377d5399]
[DEBUG] 2020-03-05 14:56:09.555 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32902344]
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.556 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1226e846]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dfb381c]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26275b37]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@366f36d]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bb0dba]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c64fd69]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6006ef31]
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.557 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f0dac6e]
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a5bdd9]
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@306ce2a7]
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:56:09.558 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:56:09.559 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a80eff4]
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.560 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d0649a]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f26339e]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669118ea]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dce5416]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be7dde7]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1503adc6]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bbbb1c4]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@446a2441]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3117c1ce]
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.561 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.562 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@397237b7]
[DEBUG] 2020-03-05 14:56:09.562 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.562 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.562 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.564 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.567 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-05 14:56:09.570 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a3cf34d]
[DEBUG] 2020-03-05 14:56:09.570 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.570 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:56:09.570 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.570 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd0af8]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5352066c]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc9781]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4123c72c]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@362ec185]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@750cd04a]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15ac11f5]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ae9aecb]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0b6cfa]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@19167371]
[DEBUG] 2020-03-05 14:56:09.571 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.573 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.573 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.575 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.575 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bd88eaa]
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10423251]
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b393254]
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.576 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@543b4e47]
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@458324dd]
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779a15ab]
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:56:09.577 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:56:09.578 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79dd3469]
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.579 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@739586b4]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44ebfaa5]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c9d66da]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53e2e1db]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288d1d75]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33a8e413]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e4ef0a]
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.580 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10cc3074]
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@506af1ad]
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2647fde3]
[DEBUG] 2020-03-05 14:56:09.581 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.583 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.583 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.584 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.585 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35db9c93]
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@324a1451]
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.586 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@461ecc16]
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f5d2e1]
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@557fa0d2]
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d4cc337]
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d02c6f4]
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f97f6f]
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.587 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c282412]
[DEBUG] 2020-03-05 14:56:09.588 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67260ddb]
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5e20e088]
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.589 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.597 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.597 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:56:09.598 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:56:09.598 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379cd0f2]
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67ffaac5]
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15805d1e]
[DEBUG] 2020-03-05 14:56:09.599 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@444a041c]
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bae8679]
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@711da04b]
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66626bdb]
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@729ce9ef]
[DEBUG] 2020-03-05 14:56:09.600 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d1e248b]
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11121d24]
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3459f1]
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12c237ca]
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.603 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3534909d]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@199fb4fa]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f1751fc]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eb682fb]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a9ef42]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35f5a9e9]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5008961a]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ad377ba]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349e4e5d]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@94f3602]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f656dd0]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@30be5d9]
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.604 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.609 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-05 14:56:09.609 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:56:09.609 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:56:09.609 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:56:09.611 [http-nio-8080-exec-25] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:56:09.611 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-05 14:56:09.611 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-05 14:56:09.611 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.created_at as created_3_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_, crew_.user as user9_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-05 14:56:09.611 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.611 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Crew set biography=?, created_at=?, email=?, first_name=?, last_name=?, profession=?, updated_at=?, user=? where crew_id=?
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f61b57e]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@209f9e0d]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd14bdf]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d19cf1e]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e87b6a8]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bdd9714]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@282fce4e]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b40b65f]
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.612 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a16569]
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f133a5e]
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.613 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@343dc2d0]
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12dadfc3]
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3d9f897a]
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.614 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.615 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.615 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:56:09.615 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b5ce02]
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16c0a8a9]
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1de537]
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4765e1a8]
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:56:09.616 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a239af4]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f02f6da]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57023833]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41657378]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a7b59a]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f3b2992]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@396b6f80]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9aa686]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@54c071e2]
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.617 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.618 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-05 14:56:09.618 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:56:09.619 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:56:09.619 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-05 14:56:09.624 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71a0491d]
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aba3533]
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5079139]
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eff3f07]
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:56:09.625 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.crews].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.crews].<elements>.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.crews].<elements>.films.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {user9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crews0_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.crews: select crews0_.user as user9_0_0_, crews0_.crew_id as crew_id1_0_0_, crews0_.crew_id as crew_id1_0_1_, crews0_.biography as biograph2_0_1_, crews0_.created_at as created_3_0_1_, crews0_.email as email4_0_1_, crews0_.first_name as first_na5_0_1_, crews0_.last_name as last_nam6_0_1_, crews0_.profession as professi7_0_1_, crews0_.updated_at as updated_8_0_1_, crews0_.user as user9_0_1_ from Crew crews0_ where crews0_.user=?
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bcb57dd]
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119da504]
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.627 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@504ce1bb]
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c85db33]
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.628 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@91700b1]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b490ee3]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43fd3660]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@432a6862]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@431d11bb]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1228f9b1]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b6e3864]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d5627b]
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.629 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6565f0a1]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5700f359]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dc74cc5]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269a37bc]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c303b36]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cfa87d2]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3b5c55ec]
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.630 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39bc8af6]
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9d0258]
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf1b651]
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a48fa55]
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.631 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@641a2f7]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d43bd30]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a4789f]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bf93666]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7974ff73]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9ae7750]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3afd867a]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6865dd45]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b4385d]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4c5add2c]
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.632 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c0b3563]
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bea886f]
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-05 14:56:09.633 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc83157]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e0cc32a]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a6c9148]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27334ddb]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e7d687]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f9a52c2]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a26aa8]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cc2b6d2]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35b81823]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@18194014]
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.634 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Film.crews].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Film.crews].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Film.crews].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Film.crews].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_, crew1_.user as user9_0_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id left outer join SM_Users user2_ on crew1_.user=user2_.user_id where crews0_.film_id=?
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23a1d92a]
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56ada47d]
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-05 14:56:09.635 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67c52180]
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c70ff49]
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@689a742f]
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@334b44c2]
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d96ce68]
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@470360e7]
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-05 14:56:09.636 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-05 14:56:09.637 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-05 14:56:09.637 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-05 14:56:09.637 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-05 14:56:09.675 [http-nio-8080-exec-25] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-05 14:56:09.675 [http-nio-8080-exec-25] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-05 14:56:09.675 [http-nio-8080-exec-25] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-05 14:56:09.685 [http-nio-8080-exec-25] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-05 14:56:09.685 [http-nio-8080-exec-25] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-05 14:56:09.686 [http-nio-8080-exec-25] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-05 14:56:09.686 [http-nio-8080-exec-25] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-05 14:56:09.688 [http-nio-8080-exec-25] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b85e3ce
[DEBUG] 2020-03-05 14:56:09.690 [http-nio-8080-exec-25] SessionFactoryRegistry - Registering SessionFactory: bdaac4c1-5bd3-4eac-b835-93cf72ca21d5 (<unnamed>)
[DEBUG] 2020-03-05 14:56:09.690 [http-nio-8080-exec-25] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-05 14:56:09.778 [http-nio-8080-exec-25] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-05 14:56:09.790 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-05 14:56:09.808 [http-nio-8080-exec-25] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-05 14:56:09.810 [http-nio-8080-exec-25] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-05 14:56:09.823 [http-nio-8080-exec-25] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:56:09.834 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:56:09.835 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4c8c35ab
[DEBUG] 2020-03-05 14:56:09.838 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.839 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-05 14:56:09.840 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-05 14:56:09.841 [http-nio-8080-exec-25] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-05 14:56:09.841 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-05 14:56:09.846 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-03-05 14:56:09.850 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-05 14:56:09.851 [http-nio-8080-exec-25] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-05 14:56:09.851 [http-nio-8080-exec-25] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:56:09.852 [http-nio-8080-exec-25] Loader - Done entity load
[DEBUG] 2020-03-05 14:56:09.852 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-05 14:56:09.852 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:56:09.854 [http-nio-8080-exec-25] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-05 14:56:09.854 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-05 14:56:09.855 [http-nio-8080-exec-25] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-05 14:56:09.855 [http-nio-8080-exec-25] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-03-05 14:56:09.855 [http-nio-8080-exec-25] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
