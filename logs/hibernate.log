[DEBUG] 2020-04-04 11:50:05.853 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-04 11:50:05.856 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-04 11:50:05.864 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-04 11:50:05.973 [http-nio-8080-exec-4] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-04 11:50:05.974 [http-nio-8080-exec-4] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-04 11:50:06.162 [http-nio-8080-exec-4] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-04-04 11:50:06.163 [http-nio-8080-exec-4] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-04-04 11:50:06.202 [http-nio-8080-exec-4] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-04 11:50:06.574 [http-nio-8080-exec-4] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-04 11:50:06.650 [http-nio-8080-exec-4] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-04 11:50:06.651 [http-nio-8080-exec-4] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-04 11:50:06.684 [http-nio-8080-exec-4] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-04 11:50:06.766 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b6c3ed2
[DEBUG] 2020-04-04 11:50:06.767 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b6c3ed2
[DEBUG] 2020-04-04 11:50:06.767 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b6c3ed2
[DEBUG] 2020-04-04 11:50:06.768 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@46ba4793
[DEBUG] 2020-04-04 11:50:06.769 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5365d50
[DEBUG] 2020-04-04 11:50:06.769 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@62e34bfd
[DEBUG] 2020-04-04 11:50:06.772 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2c3ceea4
[DEBUG] 2020-04-04 11:50:06.772 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2c3ceea4
[DEBUG] 2020-04-04 11:50:06.772 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c3ceea4
[DEBUG] 2020-04-04 11:50:06.775 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3ea6345e
[DEBUG] 2020-04-04 11:50:06.775 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3ea6345e
[DEBUG] 2020-04-04 11:50:06.777 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3ea6345e
[DEBUG] 2020-04-04 11:50:06.781 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6e53c09e
[DEBUG] 2020-04-04 11:50:06.781 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6e53c09e
[DEBUG] 2020-04-04 11:50:06.781 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e53c09e
[DEBUG] 2020-04-04 11:50:06.783 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@451be3b5
[DEBUG] 2020-04-04 11:50:06.783 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@451be3b5
[DEBUG] 2020-04-04 11:50:06.783 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@451be3b5
[DEBUG] 2020-04-04 11:50:06.785 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e74a493
[DEBUG] 2020-04-04 11:50:06.786 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e74a493
[DEBUG] 2020-04-04 11:50:06.786 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e74a493
[DEBUG] 2020-04-04 11:50:06.788 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@711c7b5f
[DEBUG] 2020-04-04 11:50:06.789 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@711c7b5f
[DEBUG] 2020-04-04 11:50:06.789 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@711c7b5f
[DEBUG] 2020-04-04 11:50:06.790 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7a16ac6f
[DEBUG] 2020-04-04 11:50:06.790 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7a16ac6f
[DEBUG] 2020-04-04 11:50:06.790 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a16ac6f
[DEBUG] 2020-04-04 11:50:06.792 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6faaa335
[DEBUG] 2020-04-04 11:50:06.792 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6faaa335
[DEBUG] 2020-04-04 11:50:06.793 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5cb385c6
[DEBUG] 2020-04-04 11:50:06.793 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5cb385c6
[DEBUG] 2020-04-04 11:50:06.795 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@33aa46e9
[DEBUG] 2020-04-04 11:50:06.796 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@33aa46e9
[DEBUG] 2020-04-04 11:50:06.797 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@20453913
[DEBUG] 2020-04-04 11:50:06.798 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7801c0ae
[DEBUG] 2020-04-04 11:50:06.799 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3fd2024d
[DEBUG] 2020-04-04 11:50:06.799 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3fd2024d
[DEBUG] 2020-04-04 11:50:06.800 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@ef38122
[DEBUG] 2020-04-04 11:50:06.800 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@ef38122
[DEBUG] 2020-04-04 11:50:06.805 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@cb076f6
[DEBUG] 2020-04-04 11:50:06.805 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@cb076f6
[DEBUG] 2020-04-04 11:50:06.809 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@31aafb18
[DEBUG] 2020-04-04 11:50:06.809 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@31aafb18
[DEBUG] 2020-04-04 11:50:06.815 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3357a16c
[DEBUG] 2020-04-04 11:50:06.815 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3357a16c
[DEBUG] 2020-04-04 11:50:06.816 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66dbb1ed
[DEBUG] 2020-04-04 11:50:06.817 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66dbb1ed
[DEBUG] 2020-04-04 11:50:06.819 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@218aec03
[DEBUG] 2020-04-04 11:50:06.820 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@218aec03
[DEBUG] 2020-04-04 11:50:06.822 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c94731b
[DEBUG] 2020-04-04 11:50:06.822 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c94731b
[DEBUG] 2020-04-04 11:50:06.828 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5ef9a0ee
[DEBUG] 2020-04-04 11:50:06.828 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5ef9a0ee
[DEBUG] 2020-04-04 11:50:06.829 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6650bdc4
[DEBUG] 2020-04-04 11:50:06.830 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6650bdc4
[DEBUG] 2020-04-04 11:50:06.831 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3ca3f4f3
[DEBUG] 2020-04-04 11:50:06.831 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3ca3f4f3
[DEBUG] 2020-04-04 11:50:06.832 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@14ff2afc
[DEBUG] 2020-04-04 11:50:06.832 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14ff2afc
[DEBUG] 2020-04-04 11:50:06.832 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14ff2afc
[DEBUG] 2020-04-04 11:50:06.834 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@51e52c3c
[DEBUG] 2020-04-04 11:50:06.835 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@657e9cd0
[DEBUG] 2020-04-04 11:50:06.835 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@657e9cd0
[DEBUG] 2020-04-04 11:50:06.836 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@657e9cd0
[DEBUG] 2020-04-04 11:50:06.837 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28e000be
[DEBUG] 2020-04-04 11:50:06.841 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@14dc6b75
[DEBUG] 2020-04-04 11:50:06.842 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@14dc6b75
[DEBUG] 2020-04-04 11:50:06.844 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7e4c19a5
[DEBUG] 2020-04-04 11:50:06.844 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e4c19a5
[DEBUG] 2020-04-04 11:50:06.845 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@636287e5
[DEBUG] 2020-04-04 11:50:06.846 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@636287e5
[DEBUG] 2020-04-04 11:50:06.848 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@76c801ab
[DEBUG] 2020-04-04 11:50:06.848 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c801ab
[DEBUG] 2020-04-04 11:50:06.849 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@dbe9c53
[DEBUG] 2020-04-04 11:50:06.849 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@dbe9c53
[DEBUG] 2020-04-04 11:50:06.850 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5954ace5
[DEBUG] 2020-04-04 11:50:06.852 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5438aff4
[DEBUG] 2020-04-04 11:50:06.853 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5438aff4
[DEBUG] 2020-04-04 11:50:06.853 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5438aff4
[DEBUG] 2020-04-04 11:50:06.854 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45573c90
[DEBUG] 2020-04-04 11:50:06.854 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45573c90
[DEBUG] 2020-04-04 11:50:06.854 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45573c90
[DEBUG] 2020-04-04 11:50:06.856 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@735cd177
[DEBUG] 2020-04-04 11:50:06.856 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1f18213
[DEBUG] 2020-04-04 11:50:06.857 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@176e4dd
[DEBUG] 2020-04-04 11:50:06.857 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@176e4dd
[DEBUG] 2020-04-04 11:50:06.857 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@176e4dd
[DEBUG] 2020-04-04 11:50:06.858 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8de2abc
[DEBUG] 2020-04-04 11:50:06.858 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8de2abc
[DEBUG] 2020-04-04 11:50:06.858 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8de2abc
[DEBUG] 2020-04-04 11:50:06.859 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1e103adf
[DEBUG] 2020-04-04 11:50:06.860 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@67d155f0
[DEBUG] 2020-04-04 11:50:06.865 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@25361943
[DEBUG] 2020-04-04 11:50:06.865 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@25361943
[DEBUG] 2020-04-04 11:50:06.866 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a91aeb
[DEBUG] 2020-04-04 11:50:06.869 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7250a069
[DEBUG] 2020-04-04 11:50:06.870 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7250a069
[DEBUG] 2020-04-04 11:50:06.872 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1572dac9
[DEBUG] 2020-04-04 11:50:06.872 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1572dac9
[DEBUG] 2020-04-04 11:50:06.873 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68b5cde4
[DEBUG] 2020-04-04 11:50:06.874 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45197ff4
[DEBUG] 2020-04-04 11:50:06.875 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@67f6001c
[DEBUG] 2020-04-04 11:50:06.880 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1f5fe87
[DEBUG] 2020-04-04 11:50:06.880 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f5fe87
[DEBUG] 2020-04-04 11:50:06.881 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1915c784
[DEBUG] 2020-04-04 11:50:06.881 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6de4786
[DEBUG] 2020-04-04 11:50:06.881 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a34631f
[DEBUG] 2020-04-04 11:50:06.886 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7dd86d6d
[DEBUG] 2020-04-04 11:50:06.886 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a46acb5
[DEBUG] 2020-04-04 11:50:06.887 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e50200c
[DEBUG] 2020-04-04 11:50:06.887 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7459042
[DEBUG] 2020-04-04 11:50:06.888 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@394826c2
[DEBUG] 2020-04-04 11:50:06.933 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-04 11:50:06.935 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-04 11:50:06.937 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 11:50:06.939 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 11:50:06.940 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-04 11:50:06.942 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-04 11:50:06.943 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-04 11:50:06.944 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 11:50:06.947 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-04 11:50:06.948 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-04 11:50:06.948 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-04 11:50:06.949 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-04 11:50:06.949 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 11:50:06.950 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-04-04 11:50:06.957 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-04-04 11:50:06.957 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-04-04 11:50:06.957 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-04-04 11:50:07.156 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-04-04 11:50:07.435 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-04-04 11:50:07.435 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-04-04 11:50:07.435 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-04 11:50:07.503 [http-nio-8080-exec-4] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-04-04 11:50:07.537 [http-nio-8080-exec-4] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-04 11:50:07.592 [http-nio-8080-exec-4] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-04 11:50:07.655 [http-nio-8080-exec-4] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-04 11:50:07.658 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bd7fcc2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38cf319f]
[DEBUG] 2020-04-04 11:50:07.757 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:07.790 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:07.803 [http-nio-8080-exec-4] EntityBinder - Import with entity name User
[DEBUG] 2020-04-04 11:50:07.808 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-04-04 11:50:07.877 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.889 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-04-04 11:50:07.893 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-04-04 11:50:07.908 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-04-04 11:50:07.918 [http-nio-8080-exec-4] PropertyBinder - Building property userId
[DEBUG] 2020-04-04 11:50:07.927 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:07.929 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.929 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-04-04 11:50:07.929 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-04-04 11:50:07.929 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-04-04 11:50:07.929 [http-nio-8080-exec-4] PropertyBinder - Building property biography
[DEBUG] 2020-04-04 11:50:07.930 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.930 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-04-04 11:50:07.930 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-04-04 11:50:07.930 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-04-04 11:50:07.930 [http-nio-8080-exec-4] PropertyBinder - Building property birthdate
[DEBUG] 2020-04-04 11:50:07.931 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:07.933 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.958 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.970 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.974 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.975 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:07.976 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:07.976 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:07.977 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.books
[DEBUG] 2020-04-04 11:50:07.982 [http-nio-8080-exec-4] PropertyBinder - Building property books
[DEBUG] 2020-04-04 11:50:07.982 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:07.983 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:07.983 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-04-04 11:50:07.984 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:07.984 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.000 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.000 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.000 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.001 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.001 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.001 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.001 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.001 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.001 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.crews
[DEBUG] 2020-04-04 11:50:08.003 [http-nio-8080-exec-4] PropertyBinder - Building property crews
[DEBUG] 2020-04-04 11:50:08.003 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.003 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-04-04 11:50:08.004 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-04-04 11:50:08.004 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-04-04 11:50:08.004 [http-nio-8080-exec-4] PropertyBinder - Building property email
[DEBUG] 2020-04-04 11:50:08.005 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.006 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.006 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.006 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] PropertyBinder - Building property faqs
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.007 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - Building property films
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - Building property firstName
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - Building property gender
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] PropertyBinder - Building property lastName
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.008 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=musics, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=musics_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='musics_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.musics
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] PropertyBinder - Building property musics
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-04-04 11:50:08.009 [http-nio-8080-exec-4] PropertyBinder - Building property password
[DEBUG] 2020-04-04 11:50:08.010 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.010 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-04-04 11:50:08.010 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-04-04 11:50:08.010 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-04-04 11:50:08.010 [http-nio-8080-exec-4] PropertyBinder - Building property picture
[DEBUG] 2020-04-04 11:50:08.010 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.012 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.015 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.015 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.016 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.017 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.017 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.017 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] PropertyBinder - Building property roles
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=shortStories, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=shortStories_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.018 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='shortStories_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.shortStories
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] PropertyBinder - Building property shortStories
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] PropertyBinder - Building property trailers
[DEBUG] 2020-04-04 11:50:08.019 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.020 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.020 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-04-04 11:50:08.020 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-04-04 11:50:08.020 [http-nio-8080-exec-4] PropertyBinder - Building property updateAt
[DEBUG] 2020-04-04 11:50:08.021 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-04-04 11:50:08.023 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-04-04 11:50:08.024 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-04-04 11:50:08.024 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-04-04 11:50:08.024 [http-nio-8080-exec-4] PropertyBinder - Building property username
[DEBUG] 2020-04-04 11:50:08.025 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-04-04 11:50:08.026 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.026 [http-nio-8080-exec-4] EntityBinder - Import with entity name Role
[DEBUG] 2020-04-04 11:50:08.026 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] PropertyBinder - Building property roleId
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-04-04 11:50:08.030 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] PropertyBinder - Building property name
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.031 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.032 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.034 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.034 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 11:50:08.035 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.035 [http-nio-8080-exec-4] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-04-04 11:50:08.035 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - Building property trailerId
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - Building property author
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-04-04 11:50:08.036 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - Building property duration
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - Building property link
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] PropertyBinder - Building property summary
[DEBUG] 2020-04-04 11:50:08.037 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.038 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.040 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.040 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] PropertyBinder - Building property video
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-04-04 11:50:08.041 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-04-04 11:50:08.042 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] PropertyBinder - Building property faqId
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-04-04 11:50:08.043 [http-nio-8080-exec-4] PropertyBinder - Building property category
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] PropertyBinder - Building property description
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.044 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.045 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:08.047 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.048 [http-nio-8080-exec-4] EntityBinder - Import with entity name Genre
[DEBUG] 2020-04-04 11:50:08.048 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] PropertyBinder - Building property genreId
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.052 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-04-04 11:50:08.053 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] PropertyBinder - Building property description
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 11:50:08.054 [http-nio-8080-exec-4] PropertyBinder - Building property films
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.055 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.056 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.056 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.056 [http-nio-8080-exec-4] EntityBinder - Import with entity name Film
[DEBUG] 2020-04-04 11:50:08.056 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-04-04 11:50:08.059 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] PropertyBinder - Building property filmId
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.060 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-04-04 11:50:08.061 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.062 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.063 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 11:50:08.063 [http-nio-8080-exec-4] PropertyBinder - Building property crews
[DEBUG] 2020-04-04 11:50:08.063 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.063 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-04-04 11:50:08.063 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] PropertyBinder - Building property director
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] PropertyBinder - Building property duration
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-04-04 11:50:08.064 [http-nio-8080-exec-4] PropertyBinder - Building property episode
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.065 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] PropertyBinder - Building property genres
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] PropertyBinder - Building property link
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.066 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] PropertyBinder - Building property summary
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.067 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] PropertyBinder - Building property video
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] EntityBinder - Import with entity name Crew
[DEBUG] 2020-04-04 11:50:08.068 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-04-04 11:50:08.078 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.078 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-04-04 11:50:08.078 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-04-04 11:50:08.078 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] PropertyBinder - Building property crewId
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] PropertyBinder - Building property biography
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.079 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] PropertyBinder - Building property email
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] PropertyBinder - Building property films
[DEBUG] 2020-04-04 11:50:08.080 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] PropertyBinder - Building property firstName
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] PropertyBinder - Building property lastName
[DEBUG] 2020-04-04 11:50:08.081 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] PropertyBinder - Building property profession
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.082 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-04-04 11:50:08.089 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-04-04 11:50:08.089 [http-nio-8080-exec-4] PropertyBinder - Building property updateAt
[DEBUG] 2020-04-04 11:50:08.089 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.089 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.089 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.089 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 11:50:08.090 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.090 [http-nio-8080-exec-4] EntityBinder - Import with entity name BKCategory
[DEBUG] 2020-04-04 11:50:08.091 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.BkCategory on table BKCategory
[DEBUG] 2020-04-04 11:50:08.092 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=bkCategory_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.092 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property bkCategoryId with lazy=false
[DEBUG] 2020-04-04 11:50:08.092 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:bkCategoryId]
[DEBUG] 2020-04-04 11:50:08.092 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for bkCategoryId
[DEBUG] 2020-04-04 11:50:08.092 [http-nio-8080-exec-4] PropertyBinder - Building property bkCategoryId
[DEBUG] 2020-04-04 11:50:08.092 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(bkCategory_id)]), bkCategoryId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.093 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.093 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:createdAt]
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:description]
[DEBUG] 2020-04-04 11:50:08.095 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] PropertyBinder - Building property description
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:title]
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:updatedAt]
[DEBUG] 2020-04-04 11:50:08.096 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.097 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.100 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Book
[DEBUG] 2020-04-04 11:50:08.100 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.100 [http-nio-8080-exec-4] EntityBinder - Import with entity name Book
[DEBUG] 2020-04-04 11:50:08.102 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Book on table Book
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=book_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property bookId with lazy=false
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:bookId]
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for bookId
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] PropertyBinder - Building property bookId
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(book_id)]), bookId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property ISBN with lazy=false
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:ISBN]
[DEBUG] 2020-04-04 11:50:08.108 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for ISBN
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] PropertyBinder - Building property ISBN
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:author]
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] PropertyBinder - Building property author
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 11:50:08.116 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:cover]
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:createdAt]
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=edition, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property edition with lazy=false
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:edition]
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for edition
[DEBUG] 2020-04-04 11:50:08.117 [http-nio-8080-exec-4] PropertyBinder - Building property edition
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=page_number, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property pageNumber with lazy=false
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:pageNumber]
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for pageNumber
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] PropertyBinder - Building property pageNumber
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:publicationDate]
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.119 [http-nio-8080-exec-4] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=publisher, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publisher with lazy=false
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:publisher]
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publisher
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] PropertyBinder - Building property publisher
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-04-04 11:50:08.120 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:summary]
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] PropertyBinder - Building property summary
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:title]
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.121 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:updatedAt]
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Music
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] EntityBinder - Import with entity name Music
[DEBUG] 2020-04-04 11:50:08.122 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Music on table Music
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=musicId, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property musicId with lazy=false
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:musicId]
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for musicId
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] PropertyBinder - Building property musicId
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(musicId)]), musicId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=artist, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property artist with lazy=false
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:artist]
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for artist
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] PropertyBinder - Building property artist
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=music_cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:cover]
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.126 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:createdAt]
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:duration]
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] PropertyBinder - Building property duration
[DEBUG] 2020-04-04 11:50:08.127 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.132 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.132 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:title]
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:updatedAt]
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.133 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=music_video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:video]
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] PropertyBinder - Building property video
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] EntityBinder - Import with entity name ShortStory
[DEBUG] 2020-04-04 11:50:08.134 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.ShortStory on table ShortStory
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=short_story_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property shortStoryId with lazy=false
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:shortStoryId]
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for shortStoryId
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] PropertyBinder - Building property shortStoryId
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(short_story_id)]), shortStoryId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:author]
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] PropertyBinder - Building property author
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 11:50:08.137 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:cover]
[DEBUG] 2020-04-04 11:50:08.141 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.145 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:createdAt]
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 11:50:08.149 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:description]
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - Building property description
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=publication_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:publicationDate]
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:title]
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:updatedAt]
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 11:50:08.150 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-04-04 11:50:08.155 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-04-04 11:50:08.156 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-04-04 11:50:08.157 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-04-04 11:50:08.158 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for bkCategoryId
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for bookId
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for ISBN
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for edition
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for pageNumber
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publisher
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for musicId
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for artist
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.160 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for shortStoryId
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 11:50:08.161 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 11:50:08.178 [http-nio-8080-exec-4] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-04-04 11:50:08.178 [http-nio-8080-exec-4] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [bkcategory_id] to be non-null as it is part of the primary key for table [bkcategory]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [book_id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [musicid] to be non-null as it is part of the primary key for table [music]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] PrimaryKey - Forcing column [short_story_id] to be non-null as it is part of the primary key for table [shortstory]
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 11:50:08.179 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.books
[DEBUG] 2020-04-04 11:50:08.181 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.books through a foreign key
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.books -> Book
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Book.user
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Book
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.crews through a foreign key
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.crews -> Crew
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Crew.user
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.musics
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.musics through a foreign key
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.musics -> Music
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Music.user
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Music
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-04-04 11:50:08.182 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.shortStories
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.shortStories through a foreign key
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.shortStories -> ShortStory
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.ShortStory.user
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-04-04 11:50:08.183 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.185 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.185 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.185 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.186 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.192 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.281 [http-nio-8080-exec-4] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - SessionFactory name : null
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Statistics: disabled
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-04 11:50:08.282 [http-nio-8080-exec-4] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Default null ordering: NONE
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Query language substitutions: {}
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Named query checking : enabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Second-level cache: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JDBC batch size: 15
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JPA compliance - query : 
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-04 11:50:08.283 [http-nio-8080-exec-4] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-04 11:50:08.439 [http-nio-8080-exec-4] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-04 11:50:08.504 [http-nio-8080-exec-4] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-04 11:50:08.530 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-45-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d51e1a4, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-04-04 11:50:08.570 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Music] is safe
[DEBUG] 2020-04-04 11:50:08.570 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Music
[DEBUG] 2020-04-04 11:50:08.572 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.BkCategory] is safe
[DEBUG] 2020-04-04 11:50:08.572 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 11:50:08.577 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-04-04 11:50:08.577 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:08.583 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-04-04 11:50:08.583 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 11:50:08.584 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Book] is safe
[DEBUG] 2020-04-04 11:50:08.584 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Book
[DEBUG] 2020-04-04 11:50:08.585 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-04-04 11:50:08.585 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-04-04 11:50:08.586 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-04-04 11:50:08.586 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:08.587 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-04-04 11:50:08.587 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 11:50:08.587 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-04-04 11:50:08.587 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:08.589 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.ShortStory] is safe
[DEBUG] 2020-04-04 11:50:08.590 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 11:50:08.590 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-04-04 11:50:08.590 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:08.601 [http-nio-8080-exec-4] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-04 11:50:08.602 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-04 11:50:08.603 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bd7fcc2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2400d86b]
[DEBUG] 2020-04-04 11:50:08.702 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Music] is safe
[DEBUG] 2020-04-04 11:50:08.702 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Music
[DEBUG] 2020-04-04 11:50:08.715 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Music] is safe
[DEBUG] 2020-04-04 11:50:08.715 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Music
[DEBUG] 2020-04-04 11:50:09.041 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.BkCategory] is safe
[DEBUG] 2020-04-04 11:50:09.044 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 11:50:09.044 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.BkCategory] is safe
[DEBUG] 2020-04-04 11:50:09.044 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 11:50:09.066 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-04-04 11:50:09.066 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:09.066 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-04-04 11:50:09.066 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:09.116 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-04-04 11:50:09.116 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 11:50:09.116 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-04-04 11:50:09.116 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 11:50:09.139 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Book] is safe
[DEBUG] 2020-04-04 11:50:09.139 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Book
[DEBUG] 2020-04-04 11:50:09.140 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Book] is safe
[DEBUG] 2020-04-04 11:50:09.140 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Book
[DEBUG] 2020-04-04 11:50:09.169 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-04-04 11:50:09.169 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-04-04 11:50:09.170 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-04-04 11:50:09.170 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-04-04 11:50:09.202 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-04-04 11:50:09.202 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:09.203 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-04-04 11:50:09.203 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:09.223 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-04-04 11:50:09.223 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 11:50:09.224 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-04-04 11:50:09.224 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 11:50:09.235 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-04-04 11:50:09.235 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:09.237 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-04-04 11:50:09.237 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:09.265 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.ShortStory] is safe
[DEBUG] 2020-04-04 11:50:09.265 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 11:50:09.265 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.ShortStory] is safe
[DEBUG] 2020-04-04 11:50:09.265 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 11:50:09.284 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-04-04 11:50:09.284 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:09.284 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-04-04 11:50:09.284 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Crew set user=? where crew_id=?
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Crew set  where crew_id=?
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Crew set user=null where user=? and crew_id=?
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Crew set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-04-04 11:50:09.342 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.musics
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Music set user=? where musicId=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Music set  where musicId=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Music set user=null where user=? and musicId=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Music set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-04-04 11:50:09.343 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.345 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 11:50:09.345 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-04-04 11:50:09.345 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-04-04 11:50:09.345 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-04-04 11:50:09.345 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.shortStories
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update ShortStory set user=? where short_story_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update ShortStory set  where short_story_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update ShortStory set user=null where user=? and short_story_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update ShortStory set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-04-04 11:50:09.346 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-04-04 11:50:09.348 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 11:50:09.348 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-04-04 11:50:09.348 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-04-04 11:50:09.348 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-04-04 11:50:09.348 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-04-04 11:50:09.348 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.books
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Book set user=? where book_id=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Book set  where book_id=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Book set user=null where user=? and book_id=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Book set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-04-04 11:50:09.349 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Music
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select musicId from Music where musicId =?
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select music_.musicId, music_.artist as artist2_8_, music_.music_cover as music_co3_8_, music_.created_at as created_4_8_, music_.duration as duration5_8_, music_.title as title6_8_, music_.updated_at as updated_7_8_, music_.user as user9_8_, music_.music_video as music_vi8_8_ from Music music_ where music_.musicId=?
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Music (artist, music_cover, created_at, duration, title, updated_at, user, music_video, musicId) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Music set artist=?, music_cover=?, created_at=?, duration=?, title=?, updated_at=?, user=?, music_video=? where musicId=?
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Music where musicId=?
[DEBUG] 2020-04-04 11:50:09.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Music (artist, music_cover, created_at, duration, title, updated_at, user, music_video) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.390 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@199b33cc]
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : artist
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.391 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.395 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e0b5743]
[DEBUG] 2020-04-04 11:50:09.398 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.398 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.398 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.399 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f9ffe15]
[DEBUG] 2020-04-04 11:50:09.400 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e990e7]
[DEBUG] 2020-04-04 11:50:09.400 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.400 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.400 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f9a8cba]
[DEBUG] 2020-04-04 11:50:09.400 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e93de79]
[DEBUG] 2020-04-04 11:50:09.400 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4195a1f6]
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d05129c]
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5681b4da]
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66d1c865]
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.musics
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@544f6f3a]
[DEBUG] 2020-04-04 11:50:09.401 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c350736]
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@206f8a72]
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a510fa9]
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41b96af3]
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699eed8c]
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.402 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.403 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@50cd2f38]
[DEBUG] 2020-04-04 11:50:09.405 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.405 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.405 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.426 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.436 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Music)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Music, querySpaceUid=<gen:0>, path=com.streammedia.entity.Music)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Music.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Music.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Music.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Music.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Music.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Music.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Music.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Music.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Music.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Music.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Music.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Music.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Music.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Music.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Music.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Music.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Music)
          - SQL table alias mapping - music0_
          - alias suffix - 0_
          - suffixed key columns - {musicId1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.441 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Music [NONE]: select music0_.musicId as musicId1_8_0_, music0_.artist as artist2_8_0_, music0_.music_cover as music_co3_8_0_, music0_.created_at as created_4_8_0_, music0_.duration as duration5_8_0_, music0_.title as title6_8_0_, music0_.updated_at as updated_7_8_0_, music0_.user as user9_8_0_, music0_.music_video as music_vi8_8_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Music music0_ left outer join SM_Users user1_ on music0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where music0_.musicId=?
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16cb8647]
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : artist
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e985eca]
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37443fb8]
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71ce50]
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53d3ad7a]
[DEBUG] 2020-04-04 11:50:09.442 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15dde0f0]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@372b40c]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12e0e97c]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c162e27]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b69f35]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.musics
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30729d3b]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cc3940]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ea4f8ef]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ae6d842]
[DEBUG] 2020-04-04 11:50:09.443 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@403ce3da]
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434a2322]
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1af0d824]
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.444 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.445 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Music)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Music, querySpaceUid=<gen:0>, path=com.streammedia.entity.Music)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Music.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Music.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Music.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Music.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Music.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Music.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Music.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Music.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Music.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Music.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Music.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Music.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Music.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Music.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Music.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Music.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Music)
          - SQL table alias mapping - music0_
          - alias suffix - 0_
          - suffixed key columns - {musicId1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.445 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Music [READ]: select music0_.musicId as musicId1_8_0_, music0_.artist as artist2_8_0_, music0_.music_cover as music_co3_8_0_, music0_.created_at as created_4_8_0_, music0_.duration as duration5_8_0_, music0_.title as title6_8_0_, music0_.updated_at as updated_7_8_0_, music0_.user as user9_8_0_, music0_.music_video as music_vi8_8_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Music music0_ left outer join SM_Users user1_ on music0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where music0_.musicId=?
[DEBUG] 2020-04-04 11:50:09.462 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Music: select music0_.musicId as musicId1_8_0_, music0_.artist as artist2_8_0_, music0_.music_cover as music_co3_8_0_, music0_.created_at as created_4_8_0_, music0_.duration as duration5_8_0_, music0_.title as title6_8_0_, music0_.updated_at as updated_7_8_0_, music0_.user as user9_8_0_, music0_.music_video as music_vi8_8_0_ from Music music0_ where music0_.musicId=?
[DEBUG] 2020-04-04 11:50:09.462 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Music: select music0_.musicId as musicId1_8_0_, music0_.artist as artist2_8_0_, music0_.music_cover as music_co3_8_0_, music0_.created_at as created_4_8_0_, music0_.duration as duration5_8_0_, music0_.title as title6_8_0_, music0_.updated_at as updated_7_8_0_, music0_.user as user9_8_0_, music0_.music_video as music_vi8_8_0_ from Music music0_ where music0_.musicId=?
[DEBUG] 2020-04-04 11:50:09.463 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 11:50:09.463 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select bkCategory_id from BKCategory where bkCategory_id =?
[DEBUG] 2020-04-04 11:50:09.463 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select bkcategory_.bkCategory_id, bkcategory_.created_at as created_2_0_, bkcategory_.description as descript3_0_, bkcategory_.title as title4_0_, bkcategory_.updated_at as updated_5_0_ from BKCategory bkcategory_ where bkcategory_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.463 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into BKCategory (created_at, description, title, updated_at, bkCategory_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.463 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update BKCategory set created_at=?, description=?, title=?, updated_at=? where bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.463 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from BKCategory where bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.465 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into BKCategory (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.465 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b24ccc2]
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.BkCategory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:0>, path=com.streammedia.entity.BkCategory)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.BkCategory)
          - SQL table alias mapping - bkcategory0_
          - alias suffix - 0_
          - suffixed key columns - {bkCatego1_0_0_}

[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.BkCategory [NONE]: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@565f2a7d]
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.466 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.BkCategory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:0>, path=com.streammedia.entity.BkCategory)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.BkCategory)
          - SQL table alias mapping - bkcategory0_
          - alias suffix - 0_
          - suffixed key columns - {bkCatego1_0_0_}

[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.BkCategory [READ]: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.BkCategory: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.BkCategory: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_4_, film_.created_at as created_3_4_, film_.director as director4_4_, film_.duration as duration5_4_, film_.episode as episode6_4_, film_.link as link7_4_, film_.pub_date as pub_date8_4_, film_.summary as summary9_4_, film_.title as title10_4_, film_.updated_at as updated11_4_, film_.user as user13_4_, film_.video as video12_4_ from Film film_ where film_.film_id=?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e95fe4f]
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7131d4ed]
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314aa32d]
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 11:50:09.467 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70ec44cd]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ebcc5c1]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4155f847]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@373a8ac6]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff0d32d]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1098954]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37190fde]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5496cf41]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d161745]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70186a9a]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f00ecb8]
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.468 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d0ed6de]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60af4805]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@409e7441]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a6be337]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cfc8b78]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@387b3838]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:20> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@b747f0a]
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.469 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.470 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:15>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:16>, path=com.streammedia.entity.Film.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:17>, path=com.streammedia.entity.Film.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:18>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:19>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:20>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:14>
                   - CollectionQuerySpaceImpl(uid=<gen:14>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:14> -> <gen:15>
                         - EntityQuerySpaceImpl(uid=<gen:15>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:20>
                   - CompositeQuerySpaceImpl(uid=<gen:20>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_4_0_, film0_.cover as cover2_4_0_, film0_.created_at as created_3_4_0_, film0_.director as director4_4_0_, film0_.duration as duration5_4_0_, film0_.episode as episode6_4_0_, film0_.link as link7_4_0_, film0_.pub_date as pub_date8_4_0_, film0_.summary as summary9_4_0_, film0_.title as title10_4_0_, film0_.updated_at as updated11_4_0_, film0_.user as user13_4_0_, film0_.video as video12_4_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ccaaeb]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fb35725]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b1c7ecc]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@388400b6]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd320]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35b3b67b]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@751878b9]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@136b20e9]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bc34c91]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c85c64a]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a6eb0d3]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2048a91f]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14ede43]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@730bffb6]
[DEBUG] 2020-04-04 11:50:09.471 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c7c212c]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9997ded]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ff08e44]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc4f642]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@734acb6f]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d6ae9e]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:20> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3f0f9eee]
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.472 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.473 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:15>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:16>, path=com.streammedia.entity.Film.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:17>, path=com.streammedia.entity.Film.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:18>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:19>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:20>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:14>
                   - CollectionQuerySpaceImpl(uid=<gen:14>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:14> -> <gen:15>
                         - EntityQuerySpaceImpl(uid=<gen:15>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:20>
                   - CompositeQuerySpaceImpl(uid=<gen:20>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.473 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_4_0_, film0_.cover as cover2_4_0_, film0_.created_at as created_3_4_0_, film0_.director as director4_4_0_, film0_.duration as duration5_4_0_, film0_.episode as episode6_4_0_, film0_.link as link7_4_0_, film0_.pub_date as pub_date8_4_0_, film0_.summary as summary9_4_0_, film0_.title as title10_4_0_, film0_.updated_at as updated11_4_0_, film0_.user as user13_4_0_, film0_.video as video12_4_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_4_1_, film0_.cover as cover2_4_1_, film0_.created_at as created_3_4_1_, film0_.director as director4_4_1_, film0_.duration as duration5_4_1_, film0_.episode as episode6_4_1_, film0_.link as link7_4_1_, film0_.pub_date as pub_date8_4_1_, film0_.summary as summary9_4_1_, film0_.title as title10_4_1_, film0_.updated_at as updated11_4_1_, film0_.user as user13_4_1_, film0_.video as video12_4_1_, crews1_.film_id as film_id1_5_3_, crew2_.crew_id as crew_id2_5_3_, crew2_.crew_id as crew_id1_2_0_, crew2_.biography as biograph2_2_0_, crew2_.created_at as created_3_2_0_, crew2_.email as email4_2_0_, crew2_.first_name as first_na5_2_0_, crew2_.last_name as last_nam6_2_0_, crew2_.profession as professi7_2_0_, crew2_.updated_at as updated_8_2_0_, crew2_.user as user9_2_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_4_1_, film0_.cover as cover2_4_1_, film0_.created_at as created_3_4_1_, film0_.director as director4_4_1_, film0_.duration as duration5_4_1_, film0_.episode as episode6_4_1_, film0_.link as link7_4_1_, film0_.pub_date as pub_date8_4_1_, film0_.summary as summary9_4_1_, film0_.title as title10_4_1_, film0_.updated_at as updated11_4_1_, film0_.user as user13_4_1_, film0_.video as video12_4_1_, crews1_.film_id as film_id1_5_3_, crew2_.crew_id as crew_id2_5_3_, crew2_.crew_id as crew_id1_2_0_, crew2_.biography as biograph2_2_0_, crew2_.created_at as created_3_2_0_, crew2_.email as email4_2_0_, crew2_.first_name as first_na5_2_0_, crew2_.last_name as last_nam6_2_0_, crew2_.profession as professi7_2_0_, crew2_.updated_at as updated_8_2_0_, crew2_.user as user9_2_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_3_, faq_.created_at as created_3_3_, faq_.description as descript4_3_, faq_.title as title5_3_, faq_.updated_at as updated_6_3_, faq_.user as user7_3_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.477 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297995b4]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@170cf004]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a5172b8]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a9c5865]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ae003e2]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d0e49]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20787860]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78ff437a]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32caa094]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4c9fc2]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389457b3]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3af22748]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78e52242]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53069271]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51ab497d]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a3e54]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@544ceb89]
[DEBUG] 2020-04-04 11:50:09.478 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.FAQ.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.FAQ.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_3_0_, faq0_.category as category2_3_0_, faq0_.created_at as created_3_3_0_, faq0_.description as descript4_3_0_, faq0_.title as title5_3_0_, faq0_.updated_at as updated_6_3_0_, faq0_.user as user7_3_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d539d0]
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.479 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fba96b9]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ebd478c]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc1b773]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2045f3ec]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@620e89]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6407b82e]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42dbe1f2]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d0eb0d6]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d88f9b8]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@417fcef]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19de59ee]
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.480 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fad9a2]
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b00e17a]
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ca948d3]
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@afb69bb]
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c1a968f]
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.481 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.FAQ.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.FAQ.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_3_0_, faq0_.category as category2_3_0_, faq0_.created_at as created_3_3_0_, faq0_.description as descript4_3_0_, faq0_.title as title5_3_0_, faq0_.updated_at as updated_6_3_0_, faq0_.user as user7_3_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_3_0_, faq0_.category as category2_3_0_, faq0_.created_at as created_3_3_0_, faq0_.description as descript4_3_0_, faq0_.title as title5_3_0_, faq0_.updated_at as updated_6_3_0_, faq0_.user as user7_3_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_3_0_, faq0_.category as category2_3_0_, faq0_.created_at as created_3_3_0_, faq0_.description as descript4_3_0_, faq0_.title as title5_3_0_, faq0_.updated_at as updated_6_3_0_, faq0_.user as user7_3_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Book
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select book_id from Book where book_id =?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select book_.book_id, book_.isbn as isbn2_1_, book_.author as author3_1_, book_.cover as cover4_1_, book_.created_at as created_5_1_, book_.edition as edition6_1_, book_.page_number as page_num7_1_, book_.pub_date as pub_date8_1_, book_.publisher as publishe9_1_, book_.summary as summary10_1_, book_.title as title11_1_, book_.updated_at as updated12_1_, book_.user as user13_1_ from Book book_ where book_.book_id=?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Book (isbn, author, cover, created_at, edition, page_number, pub_date, publisher, summary, title, updated_at, user, book_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Book set isbn=?, author=?, cover=?, created_at=?, edition=?, page_number=?, pub_date=?, publisher=?, summary=?, title=?, updated_at=?, user=? where book_id=?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Book where book_id=?
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Book (isbn, author, cover, created_at, edition, page_number, pub_date, publisher, summary, title, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46648e5b]
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.482 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa5d31c]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@204b406a]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bcf2297]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a4339c1]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20874ca1]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ab500cb]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8bc5a90]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b32e777]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@114a40f4]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@638bb94e]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9091775]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ed7d9e]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291e6d49]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ef647b6]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdb9794]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1c59187c]
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.483 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Book, querySpaceUid=<gen:0>, path=com.streammedia.entity.Book)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Book.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Book.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Book.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Book.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Book.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Book.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:8>, path=com.streammedia.entity.Book.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:9>, path=com.streammedia.entity.Book.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Book.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Book.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Book.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Book.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Book.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Book.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Book [NONE]: select book0_.book_id as book_id1_1_0_, book0_.isbn as isbn2_1_0_, book0_.author as author3_1_0_, book0_.cover as cover4_1_0_, book0_.created_at as created_5_1_0_, book0_.edition as edition6_1_0_, book0_.page_number as page_num7_1_0_, book0_.pub_date as pub_date8_1_0_, book0_.publisher as publishe9_1_0_, book0_.summary as summary10_1_0_, book0_.title as title11_1_0_, book0_.updated_at as updated12_1_0_, book0_.user as user13_1_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Book book0_ left outer join SM_Users user1_ on book0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where book0_.book_id=?
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ad07e14]
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dba5447]
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@686c840f]
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200f71bc]
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ff81196]
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2560d0ba]
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.484 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@292064e5]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@727972ec]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d82b994]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e44539e]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@746913ff]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dbee18c]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65f6d60b]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffee9b8]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f7b98fe]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9a229]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@536c7ab3]
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.485 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Book, querySpaceUid=<gen:0>, path=com.streammedia.entity.Book)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Book.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Book.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Book.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Book.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Book.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Book.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:8>, path=com.streammedia.entity.Book.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:9>, path=com.streammedia.entity.Book.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Book.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Book.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Book.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Book.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Book.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Book.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Book [READ]: select book0_.book_id as book_id1_1_0_, book0_.isbn as isbn2_1_0_, book0_.author as author3_1_0_, book0_.cover as cover4_1_0_, book0_.created_at as created_5_1_0_, book0_.edition as edition6_1_0_, book0_.page_number as page_num7_1_0_, book0_.pub_date as pub_date8_1_0_, book0_.publisher as publishe9_1_0_, book0_.summary as summary10_1_0_, book0_.title as title11_1_0_, book0_.updated_at as updated12_1_0_, book0_.user as user13_1_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Book book0_ left outer join SM_Users user1_ on book0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where book0_.book_id=?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Book: select book0_.book_id as book_id1_1_0_, book0_.isbn as isbn2_1_0_, book0_.author as author3_1_0_, book0_.cover as cover4_1_0_, book0_.created_at as created_5_1_0_, book0_.edition as edition6_1_0_, book0_.page_number as page_num7_1_0_, book0_.pub_date as pub_date8_1_0_, book0_.publisher as publishe9_1_0_, book0_.summary as summary10_1_0_, book0_.title as title11_1_0_, book0_.updated_at as updated12_1_0_, book0_.user as user13_1_0_ from Book book0_ where book0_.book_id=?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Book: select book0_.book_id as book_id1_1_0_, book0_.isbn as isbn2_1_0_, book0_.author as author3_1_0_, book0_.cover as cover4_1_0_, book0_.created_at as created_5_1_0_, book0_.edition as edition6_1_0_, book0_.page_number as page_num7_1_0_, book0_.pub_date as pub_date8_1_0_, book0_.publisher as publishe9_1_0_, book0_.summary as summary10_1_0_, book0_.title as title11_1_0_, book0_.updated_at as updated12_1_0_, book0_.user as user13_1_0_ from Book book0_ where book0_.book_id=?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_9_, role_.name as name3_9_, role_.updated_at as updated_4_9_, role_.username as username5_9_ from Role role_ where role_.role_id=?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.486 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a831a7]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65846181]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7819627e]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44abdba4]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e532d9]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@95cba43]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a653384]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2009a997]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bd134b5]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6733192e]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7459ff5f]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f1b552]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b075e45]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6402de62]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f9a76ba]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b55033e]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6a019967]
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.487 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Role.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Role.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Role.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_9_0_, role0_.created_at as created_2_9_0_, role0_.name as name3_9_0_, role0_.updated_at as updated_4_9_0_, role0_.username as username5_9_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14212187]
[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.488 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a2f9e9]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c1e1b5]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a75bf]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c1b9a2]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16971371]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1855945f]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49039d67]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4006214c]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea4aea6]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ae73841]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fda6edf]
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.489 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e272229]
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35bd72d5]
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@567b7113]
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0b4195]
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4dfa0c97]
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.490 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.491 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Role.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Role.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Role.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_9_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.491 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_9_0_, role0_.created_at as created_2_9_0_, role0_.name as name3_9_0_, role0_.updated_at as updated_4_9_0_, role0_.username as username5_9_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_9_0_, role0_.created_at as created_2_9_0_, role0_.name as name3_9_0_, role0_.updated_at as updated_4_9_0_, role0_.username as username5_9_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_9_0_, role0_.created_at as created_2_9_0_, role0_.name as name3_9_0_, role0_.updated_at as updated_4_9_0_, role0_.username as username5_9_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_7_, genre_.description as descript3_7_, genre_.title as title4_7_, genre_.updated_at as updated_5_7_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ef1ecac]
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@532532e9]
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f67ca66]
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_7_0_}

[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_7_0_, genre0_.created_at as created_2_7_0_, genre0_.description as descript3_7_0_, genre0_.title as title4_7_0_, genre0_.updated_at as updated_5_7_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee2c5aa]
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a7acd8c]
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bcf065f]
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_7_0_}

[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_7_0_, genre0_.created_at as created_2_7_0_, genre0_.description as descript3_7_0_, genre0_.title as title4_7_0_, genre0_.updated_at as updated_5_7_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_7_0_, genre0_.created_at as created_2_7_0_, genre0_.description as descript3_7_0_, genre0_.title as title4_7_0_, genre0_.updated_at as updated_5_7_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 11:50:09.493 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_7_0_, genre0_.created_at as created_2_7_0_, genre0_.description as descript3_7_0_, genre0_.title as title4_7_0_, genre0_.updated_at as updated_5_7_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 11:50:09.494 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_12_, trailer_.cover as cover3_12_, trailer_.created_at as created_4_12_, trailer_.duration as duration5_12_, trailer_.links as links6_12_, trailer_.pub_date as pub_date7_12_, trailer_.summary as summary8_12_, trailer_.title as title9_12_, trailer_.updated_at as updated10_12_, trailer_.user as user12_12_, trailer_.video as video11_12_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.495 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b84919]
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd8e7e7]
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dd78fbb]
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c914bf7]
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41e7e5d]
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fae1c7a]
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.497 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e15f863]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383ddea5]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f26a369]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d43b3b]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17303a2]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@576d3ddf]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2daaf1b0]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c761add]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21e17ffe]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0d39ed]
[DEBUG] 2020-04-04 11:50:09.498 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3250ac6]
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Trailer.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Trailer.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Trailer.user.shortStories.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_12_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.499 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_12_0_, trailer0_.author as author2_12_0_, trailer0_.cover as cover3_12_0_, trailer0_.created_at as created_4_12_0_, trailer0_.duration as duration5_12_0_, trailer0_.links as links6_12_0_, trailer0_.pub_date as pub_date7_12_0_, trailer0_.summary as summary8_12_0_, trailer0_.title as title9_12_0_, trailer0_.updated_at as updated10_12_0_, trailer0_.user as user12_12_0_, trailer0_.video as video11_12_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1385c0cf]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c1b0a07]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3293b408]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f55b010]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bfadecf]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c0d274]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@175c1290]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59be55b]
[DEBUG] 2020-04-04 11:50:09.500 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@81a5f81]
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36777f84]
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41c82348]
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b23a717]
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@411f15a5]
[DEBUG] 2020-04-04 11:50:09.501 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c19d95d]
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@735deaa6]
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@710c06a1]
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66df15bc]
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.502 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Trailer.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Trailer.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Trailer.user.shortStories.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_12_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_12_0_, trailer0_.author as author2_12_0_, trailer0_.cover as cover3_12_0_, trailer0_.created_at as created_4_12_0_, trailer0_.duration as duration5_12_0_, trailer0_.links as links6_12_0_, trailer0_.pub_date as pub_date7_12_0_, trailer0_.summary as summary8_12_0_, trailer0_.title as title9_12_0_, trailer0_.updated_at as updated10_12_0_, trailer0_.user as user12_12_0_, trailer0_.video as video11_12_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_12_0_, trailer0_.author as author2_12_0_, trailer0_.cover as cover3_12_0_, trailer0_.created_at as created_4_12_0_, trailer0_.duration as duration5_12_0_, trailer0_.links as links6_12_0_, trailer0_.pub_date as pub_date7_12_0_, trailer0_.summary as summary8_12_0_, trailer0_.title as title9_12_0_, trailer0_.updated_at as updated10_12_0_, trailer0_.user as user12_12_0_, trailer0_.video as video11_12_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_12_0_, trailer0_.author as author2_12_0_, trailer0_.cover as cover3_12_0_, trailer0_.created_at as created_4_12_0_, trailer0_.duration as duration5_12_0_, trailer0_.links as links6_12_0_, trailer0_.pub_date as pub_date7_12_0_, trailer0_.summary as summary8_12_0_, trailer0_.title as title9_12_0_, trailer0_.updated_at as updated10_12_0_, trailer0_.user as user12_12_0_, trailer0_.video as video11_12_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_11_, user_.birthdate as birthdat3_11_, user_.created_at as created_4_11_, user_.email as email5_11_, user_.first_name as first_na6_11_, user_.gender as gender7_11_, user_.last_name as last_nam8_11_, user_.password as password9_11_, user_.picture as picture10_11_, user_.updated_at as updated11_11_, user_.username as usernam12_11_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30721c1]
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-04-04 11:50:09.503 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cc38312]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c521b4d]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36e12a2f]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c14c58b]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cdf0608]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@504bf4ad]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fc41cd9]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1506b437]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : musics
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@215d0fd9]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ebc79c3]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61d18a19]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d62d18]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : shortStories
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28ef1872]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58214e9a]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@367ac193]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d3e43ce]
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.504 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3d42ea93]
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.musics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.musics.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=com.streammedia.entity.User.shortStories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=com.streammedia.entity.User.shortStories.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:11>
             - CollectionQuerySpaceImpl(uid=<gen:11>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_9_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_9_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:11> -> <gen:12>
                   - EntityQuerySpaceImpl(uid=<gen:12>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_9_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:17>
             - CompositeQuerySpaceImpl(uid=<gen:17>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_11_0_, user0_.biography as biograph2_11_0_, user0_.birthdate as birthdat3_11_0_, user0_.created_at as created_4_11_0_, user0_.email as email5_11_0_, user0_.first_name as first_na6_11_0_, user0_.gender as gender7_11_0_, user0_.last_name as last_nam8_11_0_, user0_.password as password9_11_0_, user0_.picture as picture10_11_0_, user0_.updated_at as updated11_11_0_, user0_.username as usernam12_11_0_, roles1_.username as username5_9_1_, roles1_.role_id as role_id1_9_1_, roles1_.role_id as role_id1_9_2_, roles1_.created_at as created_2_9_2_, roles1_.name as name3_9_2_, roles1_.updated_at as updated_4_9_2_, roles1_.username as username5_9_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f53041d]
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ad060f6]
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce2dd4d]
[DEBUG] 2020-04-04 11:50:09.505 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b065d20]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1baa4a0c]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22445e5f]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a6f7ef]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11104c86]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58239e82]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : musics
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5815957f]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2773081d]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34940409]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70874b97]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : shortStories
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fe1aadc]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65708744]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@de1cc41]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c3eeed1]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1eab04c0]
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.506 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.507 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.musics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.musics.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=com.streammedia.entity.User.shortStories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=com.streammedia.entity.User.shortStories.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:11>
             - CollectionQuerySpaceImpl(uid=<gen:11>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_9_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_9_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:11> -> <gen:12>
                   - EntityQuerySpaceImpl(uid=<gen:12>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_9_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:17>
             - CompositeQuerySpaceImpl(uid=<gen:17>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-04-04 11:50:09.507 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_11_0_, user0_.biography as biograph2_11_0_, user0_.birthdate as birthdat3_11_0_, user0_.created_at as created_4_11_0_, user0_.email as email5_11_0_, user0_.first_name as first_na6_11_0_, user0_.gender as gender7_11_0_, user0_.last_name as last_nam8_11_0_, user0_.password as password9_11_0_, user0_.picture as picture10_11_0_, user0_.updated_at as updated11_11_0_, user0_.username as usernam12_11_0_, roles1_.username as username5_9_1_, roles1_.role_id as role_id1_9_1_, roles1_.role_id as role_id1_9_2_, roles1_.created_at as created_2_9_2_, roles1_.name as name3_9_2_, roles1_.updated_at as updated_4_9_2_, roles1_.username as username5_9_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 11:50:09.507 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_11_1_, user0_.biography as biograph2_11_1_, user0_.birthdate as birthdat3_11_1_, user0_.created_at as created_4_11_1_, user0_.email as email5_11_1_, user0_.first_name as first_na6_11_1_, user0_.gender as gender7_11_1_, user0_.last_name as last_nam8_11_1_, user0_.password as password9_11_1_, user0_.picture as picture10_11_1_, user0_.updated_at as updated11_11_1_, user0_.username as usernam12_11_1_, roles1_.username as username5_9_3_, roles1_.role_id as role_id1_9_3_, roles1_.role_id as role_id1_9_0_, roles1_.created_at as created_2_9_0_, roles1_.name as name3_9_0_, roles1_.updated_at as updated_4_9_0_, roles1_.username as username5_9_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 11:50:09.507 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_11_1_, user0_.biography as biograph2_11_1_, user0_.birthdate as birthdat3_11_1_, user0_.created_at as created_4_11_1_, user0_.email as email5_11_1_, user0_.first_name as first_na6_11_1_, user0_.gender as gender7_11_1_, user0_.last_name as last_nam8_11_1_, user0_.password as password9_11_1_, user0_.picture as picture10_11_1_, user0_.updated_at as updated11_11_1_, user0_.username as usernam12_11_1_, roles1_.username as username5_9_3_, roles1_.role_id as role_id1_9_3_, roles1_.role_id as role_id1_9_0_, roles1_.created_at as created_2_9_0_, roles1_.name as name3_9_0_, roles1_.updated_at as updated_4_9_0_, roles1_.username as username5_9_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 11:50:09.509 [http-nio-8080-exec-4] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_11_1_, user0_.biography as biograph2_11_1_, user0_.birthdate as birthdat3_11_1_, user0_.created_at as created_4_11_1_, user0_.email as email5_11_1_, user0_.first_name as first_na6_11_1_, user0_.gender as gender7_11_1_, user0_.last_name as last_nam8_11_1_, user0_.password as password9_11_1_, user0_.picture as picture10_11_1_, user0_.updated_at as updated11_11_1_, user0_.username as usernam12_11_1_, roles1_.username as username5_9_3_, roles1_.role_id as role_id1_9_3_, roles1_.role_id as role_id1_9_0_, roles1_.created_at as created_2_9_0_, roles1_.name as name3_9_0_, roles1_.updated_at as updated_4_9_0_, roles1_.username as username5_9_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select short_story_id from ShortStory where short_story_id =?
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select shortstory_.short_story_id, shortstory_.author as author2_10_, shortstory_.cover as cover3_10_, shortstory_.created_at as created_4_10_, shortstory_.description as descript5_10_, shortstory_.publication_date as publicat6_10_, shortstory_.title as title7_10_, shortstory_.updated_at as updated_8_10_, shortstory_.user as user9_10_ from ShortStory shortstory_ where shortstory_.short_story_id=?
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into ShortStory (author, cover, created_at, description, publication_date, title, updated_at, user, short_story_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update ShortStory set author=?, cover=?, created_at=?, description=?, publication_date=?, title=?, updated_at=?, user=? where short_story_id=?
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from ShortStory where short_story_id=?
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into ShortStory (author, cover, created_at, description, publication_date, title, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59a3372b]
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.510 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c2bcbb]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ebec839]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54800641]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@788b4f0e]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23a11b14]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b16f059]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff05174]
[DEBUG] 2020-04-04 11:50:09.513 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d218abb]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f35bb0]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a3bf10f]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577d76cd]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46985acb]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1ab773]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.shortStories
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67210e22]
[DEBUG] 2020-04-04 11:50:09.514 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@583f8c9a]
[DEBUG] 2020-04-04 11:50:09.515 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.515 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.515 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.515 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@631dbe1b]
[DEBUG] 2020-04-04 11:50:09.515 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.515 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.516 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.517 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.ShortStory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:0>, path=com.streammedia.entity.ShortStory)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.ShortStory.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.ShortStory.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.ShortStory.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.ShortStory.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.ShortStory.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.ShortStory.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.ShortStory.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.ShortStory.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.ShortStory.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.ShortStory.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.ShortStory.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.ShortStory.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.ShortStory.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.ShortStory.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.ShortStory.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.ShortStory.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.ShortStory)
          - SQL table alias mapping - shortstory0_
          - alias suffix - 0_
          - suffixed key columns - {short_st1_10_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.517 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.ShortStory [NONE]: select shortstory0_.short_story_id as short_st1_10_0_, shortstory0_.author as author2_10_0_, shortstory0_.cover as cover3_10_0_, shortstory0_.created_at as created_4_10_0_, shortstory0_.description as descript5_10_0_, shortstory0_.publication_date as publicat6_10_0_, shortstory0_.title as title7_10_0_, shortstory0_.updated_at as updated_8_10_0_, shortstory0_.user as user9_10_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from ShortStory shortstory0_ left outer join SM_Users user1_ on shortstory0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350496fb]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f981ecf]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a9907bd]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47932e1c]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18a22e47]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c16cc3d]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e708ced]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404db2f1]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49947ca9]
[DEBUG] 2020-04-04 11:50:09.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23092682]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3904c1ea]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f33601]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e686102]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bf657b]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.shortStories
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b388072]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c3aed3]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d0b689]
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.519 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.520 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.ShortStory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:0>, path=com.streammedia.entity.ShortStory)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.ShortStory.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.ShortStory.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.ShortStory.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.ShortStory.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.ShortStory.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.ShortStory.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.ShortStory.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.ShortStory.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.ShortStory.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.ShortStory.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.ShortStory.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.ShortStory.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.ShortStory.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.ShortStory.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.ShortStory.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.ShortStory.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.ShortStory)
          - SQL table alias mapping - shortstory0_
          - alias suffix - 0_
          - suffixed key columns - {short_st1_10_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.520 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.ShortStory [READ]: select shortstory0_.short_story_id as short_st1_10_0_, shortstory0_.author as author2_10_0_, shortstory0_.cover as cover3_10_0_, shortstory0_.created_at as created_4_10_0_, shortstory0_.description as descript5_10_0_, shortstory0_.publication_date as publicat6_10_0_, shortstory0_.title as title7_10_0_, shortstory0_.updated_at as updated_8_10_0_, shortstory0_.user as user9_10_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from ShortStory shortstory0_ left outer join SM_Users user1_ on shortstory0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 11:50:09.520 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.ShortStory: select shortstory0_.short_story_id as short_st1_10_0_, shortstory0_.author as author2_10_0_, shortstory0_.cover as cover3_10_0_, shortstory0_.created_at as created_4_10_0_, shortstory0_.description as descript5_10_0_, shortstory0_.publication_date as publicat6_10_0_, shortstory0_.title as title7_10_0_, shortstory0_.updated_at as updated_8_10_0_, shortstory0_.user as user9_10_0_ from ShortStory shortstory0_ where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.ShortStory: select shortstory0_.short_story_id as short_st1_10_0_, shortstory0_.author as author2_10_0_, shortstory0_.cover as cover3_10_0_, shortstory0_.created_at as created_4_10_0_, shortstory0_.description as descript5_10_0_, shortstory0_.publication_date as publicat6_10_0_, shortstory0_.title as title7_10_0_, shortstory0_.updated_at as updated_8_10_0_, shortstory0_.user as user9_10_0_ from ShortStory shortstory0_ where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_2_, crew_.created_at as created_3_2_, crew_.email as email4_2_, crew_.first_name as first_na5_2_, crew_.last_name as last_nam6_2_, crew_.profession as professi7_2_, crew_.updated_at as updated_8_2_, crew_.user as user9_2_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Crew set biography=?, created_at=?, email=?, first_name=?, last_name=?, profession=?, updated_at=?, user=? where crew_id=?
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55d58a87]
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19c89a2a]
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e5b3128]
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a315d6]
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.521 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e84b8b1]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29311238]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76e3bf6d]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@667a09b9]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d5064f7]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c5107b7]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47a2cd87]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71a3230b]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fda9614]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b125ae7]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@491febaf]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134509]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61a8dd2e]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76bfda56]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@404b15bd]
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.522 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Crew.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Crew.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                   - CompositeQuerySpaceImpl(uid=<gen:18>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_2_0_, crew0_.biography as biograph2_2_0_, crew0_.created_at as created_3_2_0_, crew0_.email as email4_2_0_, crew0_.first_name as first_na5_2_0_, crew0_.last_name as last_nam6_2_0_, crew0_.profession as professi7_2_0_, crew0_.updated_at as updated_8_2_0_, crew0_.user as user9_2_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0ccc7e]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d97d10e]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ab40a7]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ddf1f30]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@156634ce]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f4f0bd]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c575c2c]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3efac430]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a9e4765]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14e13d93]
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.523 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c1a51f]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af23a33]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23fed67]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faf5516]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1638ede9]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@735a0ddd]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c59b5fd]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ca101e6]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1d27ea3e]
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.524 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.525 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Crew.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Crew.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_11_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_9_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_9_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_9_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                   - CompositeQuerySpaceImpl(uid=<gen:18>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 11:50:09.525 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_2_0_, crew0_.biography as biograph2_2_0_, crew0_.created_at as created_3_2_0_, crew0_.email as email4_2_0_, crew0_.first_name as first_na5_2_0_, crew0_.last_name as last_nam6_2_0_, crew0_.profession as professi7_2_0_, crew0_.updated_at as updated_8_2_0_, crew0_.user as user9_2_0_, user1_.user_id as user_id1_11_1_, user1_.biography as biograph2_11_1_, user1_.birthdate as birthdat3_11_1_, user1_.created_at as created_4_11_1_, user1_.email as email5_11_1_, user1_.first_name as first_na6_11_1_, user1_.gender as gender7_11_1_, user1_.last_name as last_nam8_11_1_, user1_.password as password9_11_1_, user1_.picture as picture10_11_1_, user1_.updated_at as updated11_11_1_, user1_.username as usernam12_11_1_, roles2_.username as username5_9_2_, roles2_.role_id as role_id1_9_2_, roles2_.role_id as role_id1_9_3_, roles2_.created_at as created_2_9_3_, roles2_.name as name3_9_3_, roles2_.updated_at as updated_4_9_3_, roles2_.username as username5_9_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-04-04 11:50:09.525 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_2_0_, crew0_.biography as biograph2_2_0_, crew0_.created_at as created_3_2_0_, crew0_.email as email4_2_0_, crew0_.first_name as first_na5_2_0_, crew0_.last_name as last_nam6_2_0_, crew0_.profession as professi7_2_0_, crew0_.updated_at as updated_8_2_0_, crew0_.user as user9_2_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-04-04 11:50:09.525 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_2_0_, crew0_.biography as biograph2_2_0_, crew0_.created_at as created_3_2_0_, crew0_.email as email4_2_0_, crew0_.first_name as first_na5_2_0_, crew0_.last_name as last_nam6_2_0_, crew0_.profession as professi7_2_0_, crew0_.updated_at as updated_8_2_0_, crew0_.user as user9_2_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-04-04 11:50:09.531 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@709c5075]
[DEBUG] 2020-04-04 11:50:09.532 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4165f58c]
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.534 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.535 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.537 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.537 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.545 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.546 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_12_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_12_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_12_1_}

[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_12_0_, trailers0_.trailer_id as trailer_1_12_0_, trailers0_.trailer_id as trailer_1_12_1_, trailers0_.author as author2_12_1_, trailers0_.cover as cover3_12_1_, trailers0_.created_at as created_4_12_1_, trailers0_.duration as duration5_12_1_, trailers0_.links as links6_12_1_, trailers0_.pub_date as pub_date7_12_1_, trailers0_.summary as summary8_12_1_, trailers0_.title as title9_12_1_, trailers0_.updated_at as updated10_12_1_, trailers0_.user as user12_12_1_, trailers0_.video as video11_12_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@585d82b7]
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a03f2c8]
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.547 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_9_1_}

[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_9_0_, roles0_.role_id as role_id1_9_0_, roles0_.role_id as role_id1_9_1_, roles0_.created_at as created_2_9_1_, roles0_.name as name3_9_1_, roles0_.updated_at as updated_4_9_1_, roles0_.username as username5_9_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fd4bd0b]
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a148b8b]
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.548 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_3_1_}

[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_3_0_, faqs0_.faq_id as faq_id1_3_0_, faqs0_.faq_id as faq_id1_3_1_, faqs0_.category as category2_3_1_, faqs0_.created_at as created_3_3_1_, faqs0_.description as descript4_3_1_, faqs0_.title as title5_3_1_, faqs0_.updated_at as updated_6_3_1_, faqs0_.user as user7_3_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24404d55]
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a76c285]
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.549 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.550 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.550 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.550 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.shortStories)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.shortStories])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.shortStories].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.shortStories)
          - SQL table alias mapping - shortstori0_
          - alias suffix - 0_
          - suffixed key columns - {user9_10_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - short_st1_10_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.ShortStory)
                - SQL table alias mapping - shortstori0_
                - alias suffix - 1_
                - suffixed key columns - {short_st1_10_1_}

[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.shortStories: select shortstori0_.user as user9_10_0_, shortstori0_.short_story_id as short_st1_10_0_, shortstori0_.short_story_id as short_st1_10_1_, shortstori0_.author as author2_10_1_, shortstori0_.cover as cover3_10_1_, shortstori0_.created_at as created_4_10_1_, shortstori0_.description as descript5_10_1_, shortstori0_.publication_date as publicat6_10_1_, shortstori0_.title as title7_10_1_, shortstori0_.updated_at as updated_8_10_1_, shortstori0_.user as user9_10_1_ from ShortStory shortstori0_ where shortstori0_.user=?
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@100af481]
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c047eef]
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3aa43a5a]
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6508c8e7]
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.crews].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.crews].<elements>.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.crews].<elements>.films.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {user9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crews0_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_2_1_}

[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.crews: select crews0_.user as user9_2_0_, crews0_.crew_id as crew_id1_2_0_, crews0_.crew_id as crew_id1_2_1_, crews0_.biography as biograph2_2_1_, crews0_.created_at as created_3_2_1_, crews0_.email as email4_2_1_, crews0_.first_name as first_na5_2_1_, crews0_.last_name as last_nam6_2_1_, crews0_.profession as professi7_2_1_, crews0_.updated_at as updated_8_2_1_, crews0_.user as user9_2_1_ from Crew crews0_ where crews0_.user=?
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26c838c]
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@140bf558]
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : artist
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.551 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.musics)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.musics])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.musics].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.musics)
          - SQL table alias mapping - musics0_
          - alias suffix - 0_
          - suffixed key columns - {user9_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - musicId1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Music)
                - SQL table alias mapping - musics0_
                - alias suffix - 1_
                - suffixed key columns - {musicId1_8_1_}

[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.musics: select musics0_.user as user9_8_0_, musics0_.musicId as musicId1_8_0_, musics0_.musicId as musicId1_8_1_, musics0_.artist as artist2_8_1_, musics0_.music_cover as music_co3_8_1_, musics0_.created_at as created_4_8_1_, musics0_.duration as duration5_8_1_, musics0_.title as title6_8_1_, musics0_.updated_at as updated_7_8_1_, musics0_.user as user9_8_1_, musics0_.music_video as music_vi8_8_1_ from Music musics0_ where musics0_.user=?
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a9c537c]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f6ce42]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f041875]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b74f09]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f465259]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a5df34d]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68703a08]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54969c5]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c14c142]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9368016]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ff5b42]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eb611d9]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e2db9c]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5969d126]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43d6a402]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d704d78]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3c5371]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@384b4751]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e4b02ee]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@110f8dd2]
[DEBUG] 2020-04-04 11:50:09.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.553 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.557 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.557 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.books)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.books.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Crew.films].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:14>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:15>, path=[com.streammedia.entity.Crew.films].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:16>, path=[com.streammedia.entity.Crew.films].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:17>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:18>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:19>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_4_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_11_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:19>
                         - CompositeQuerySpaceImpl(uid=<gen:19>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_5_0_, films0_.film_id as film_id1_5_0_, film1_.film_id as film_id1_4_1_, film1_.cover as cover2_4_1_, film1_.created_at as created_3_4_1_, film1_.director as director4_4_1_, film1_.duration as duration5_4_1_, film1_.episode as episode6_4_1_, film1_.link as link7_4_1_, film1_.pub_date as pub_date8_4_1_, film1_.summary as summary9_4_1_, film1_.title as title10_4_1_, film1_.updated_at as updated11_4_1_, film1_.user as user13_4_1_, film1_.video as video12_4_1_, user2_.user_id as user_id1_11_2_, user2_.biography as biograph2_11_2_, user2_.birthdate as birthdat3_11_2_, user2_.created_at as created_4_11_2_, user2_.email as email5_11_2_, user2_.first_name as first_na6_11_2_, user2_.gender as gender7_11_2_, user2_.last_name as last_nam8_11_2_, user2_.password as password9_11_2_, user2_.picture as picture10_11_2_, user2_.updated_at as updated11_11_2_, user2_.username as usernam12_11_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36bcca15]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a749607]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64846c77]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ade0a4e]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549ca328]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6053ce3d]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad52403]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b615f92]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63e11577]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dbd0d10]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0bd798]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f479e04]
[DEBUG] 2020-04-04 11:50:09.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e67836]
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11463c37]
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11718e90]
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22f58504]
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75056ea4]
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.559 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@550253b7]
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@489a5289]
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@46c9333b]
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.560 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.561 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.books)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.books.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Genre.films].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:14>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:15>, path=[com.streammedia.entity.Genre.films].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:16>, path=[com.streammedia.entity.Genre.films].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:17>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:18>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:19>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_4_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_11_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:19>
                         - CompositeQuerySpaceImpl(uid=<gen:19>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 11:50:09.561 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_6_0_, films0_.film_id as film_id1_6_0_, film1_.film_id as film_id1_4_1_, film1_.cover as cover2_4_1_, film1_.created_at as created_3_4_1_, film1_.director as director4_4_1_, film1_.duration as duration5_4_1_, film1_.episode as episode6_4_1_, film1_.link as link7_4_1_, film1_.pub_date as pub_date8_4_1_, film1_.summary as summary9_4_1_, film1_.title as title10_4_1_, film1_.updated_at as updated11_4_1_, film1_.user as user13_4_1_, film1_.video as video12_4_1_, user2_.user_id as user_id1_11_2_, user2_.biography as biograph2_11_2_, user2_.birthdate as birthdat3_11_2_, user2_.created_at as created_4_11_2_, user2_.email as email5_11_2_, user2_.first_name as first_na6_11_2_, user2_.gender as gender7_11_2_, user2_.last_name as last_nam8_11_2_, user2_.password as password9_11_2_, user2_.picture as picture10_11_2_, user2_.updated_at as updated11_11_2_, user2_.username as usernam12_11_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-04-04 11:50:09.561 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fbf6258]
[DEBUG] 2020-04-04 11:50:09.564 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45ab6d3c]
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.569 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e92dff3]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c2403d6]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8616895]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50d4432d]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@747242be]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68d4c555]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bf23d1a]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@194dc662]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcc0047]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@317c9c86]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b1c6d5e]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c95cc89]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23442d64]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76090d26]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed7e824]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4c3486f3]
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 11:50:09.570 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.572 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Film.crews].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Film.crews].<elements>.user.books)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Film.crews].<elements>.user.books.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Film.crews].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Film.crews].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Film.crews].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Film.crews].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Film.crews].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=[com.streammedia.entity.Film.crews].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=[com.streammedia.entity.Film.crews].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_11_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:17>
                         - CompositeQuerySpaceImpl(uid=<gen:17>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_5_0_, crews0_.crew_id as crew_id2_5_0_, crew1_.crew_id as crew_id1_2_1_, crew1_.biography as biograph2_2_1_, crew1_.created_at as created_3_2_1_, crew1_.email as email4_2_1_, crew1_.first_name as first_na5_2_1_, crew1_.last_name as last_nam6_2_1_, crew1_.profession as professi7_2_1_, crew1_.updated_at as updated_8_2_1_, crew1_.user as user9_2_1_, user2_.user_id as user_id1_11_2_, user2_.biography as biograph2_11_2_, user2_.birthdate as birthdat3_11_2_, user2_.created_at as created_4_11_2_, user2_.email as email5_11_2_, user2_.first_name as first_na6_11_2_, user2_.gender as gender7_11_2_, user2_.last_name as last_nam8_11_2_, user2_.password as password9_11_2_, user2_.picture as picture10_11_2_, user2_.updated_at as updated11_11_2_, user2_.username as usernam12_11_2_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id left outer join SM_Users user2_ on crew1_.user=user2_.user_id where crews0_.film_id=?
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70c7e9d4]
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1130b920]
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_7_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_7_1_}

[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_6_0_, genres0_.genre_id as genre_id2_6_0_, genre1_.genre_id as genre_id1_7_1_, genre1_.created_at as created_2_7_1_, genre1_.description as descript3_7_1_, genre1_.title as title4_7_1_, genre1_.updated_at as updated_5_7_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@356f5a49]
[DEBUG] 2020-04-04 11:50:09.573 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21020c7d]
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.books].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user13_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - book_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {book_id1_1_1_}

[DEBUG] 2020-04-04 11:50:09.574 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.books: select books0_.user as user13_1_0_, books0_.book_id as book_id1_1_0_, books0_.book_id as book_id1_1_1_, books0_.isbn as isbn2_1_1_, books0_.author as author3_1_1_, books0_.cover as cover4_1_1_, books0_.created_at as created_5_1_1_, books0_.edition as edition6_1_1_, books0_.page_number as page_num7_1_1_, books0_.pub_date as pub_date8_1_1_, books0_.publisher as publishe9_1_1_, books0_.summary as summary10_1_1_, books0_.title as title11_1_1_, books0_.updated_at as updated12_1_1_, books0_.user as user13_1_1_ from Book books0_ where books0_.user=?
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c8b2bd9]
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ddbb1d1]
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4673c7b7]
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5636a391]
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59fc4605]
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@256cb452]
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_4_1_}

[DEBUG] 2020-04-04 11:50:09.575 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_4_0_, films0_.film_id as film_id1_4_0_, films0_.film_id as film_id1_4_1_, films0_.cover as cover2_4_1_, films0_.created_at as created_3_4_1_, films0_.director as director4_4_1_, films0_.duration as duration5_4_1_, films0_.episode as episode6_4_1_, films0_.link as link7_4_1_, films0_.pub_date as pub_date8_4_1_, films0_.summary as summary9_4_1_, films0_.title as title10_4_1_, films0_.updated_at as updated11_4_1_, films0_.user as user13_4_1_, films0_.video as video12_4_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-04-04 11:50:09.640 [http-nio-8080-exec-4] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-04 11:50:09.640 [http-nio-8080-exec-4] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-04 11:50:09.641 [http-nio-8080-exec-4] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-04 11:50:09.651 [http-nio-8080-exec-4] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-04 11:50:09.652 [http-nio-8080-exec-4] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-04 11:50:09.653 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-04 11:50:09.653 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-04 11:50:09.660 [http-nio-8080-exec-4] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@41ee6ce4
[DEBUG] 2020-04-04 11:50:09.662 [http-nio-8080-exec-4] SessionFactoryRegistry - Registering SessionFactory: a38eb08e-afd4-4fbf-b149-be7ae4380dad (<unnamed>)
[DEBUG] 2020-04-04 11:50:09.663 [http-nio-8080-exec-4] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-04-04 11:50:09.781 [http-nio-8080-exec-4] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-04-04 11:50:09.846 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 11:50:09.893 [http-nio-8080-exec-4] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3d76176c
[DEBUG] 2020-04-04 11:50:09.926 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 11:50:09.935 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 11:50:09.946 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'streammedia'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-04-04 11:50:09.975 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-04 11:50:09.998 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-04-04 11:50:09.999 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-04-04 11:50:10.002 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-04-04 11:50:10.003 [http-nio-8080-exec-4] DotNode - getDataType() : username -> org.hibernate.type.StringType@33aa46e9
[DEBUG] 2020-04-04 11:50:10.003 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
[DEBUG] 2020-04-04 11:50:10.005 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-04 11:50:10.005 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
[DEBUG] 2020-04-04 11:50:10.020 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-04-04 11:50:10.021 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-04 11:50:10.021 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_11_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_11_, user0_.birthdate as birthdat3_11_, user0_.created_at as created_4_11_, user0_.email as email5_11_, user0_.first_name as first_na6_11_, user0_.gender as gender7_11_, user0_.last_name as last_nam8_11_, user0_.password as password9_11_, user0_.picture as picture10_11_, user0_.updated_at as updated11_11_, user0_.username as usernam12_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=com.streammedia.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@33aa46e9}

[DEBUG] 2020-04-04 11:50:10.021 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 11:50:10.028 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 11:50:10.028 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_11_, user0_.biography as biograph2_11_, user0_.birthdate as birthdat3_11_, user0_.created_at as created_4_11_, user0_.email as email5_11_, user0_.first_name as first_na6_11_, user0_.gender as gender7_11_, user0_.last_name as last_nam8_11_, user0_.password as password9_11_, user0_.picture as picture10_11_, user0_.updated_at as updated11_11_, user0_.username as usernam12_11_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-04-04 11:50:10.028 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 11:50:10.058 [http-nio-8080-exec-4] SQL - select user0_.user_id as user_id1_11_, user0_.biography as biograph2_11_, user0_.birthdate as birthdat3_11_, user0_.created_at as created_4_11_, user0_.email as email5_11_, user0_.first_name as first_na6_11_, user0_.gender as gender7_11_, user0_.last_name as last_nam8_11_, user0_.password as password9_11_, user0_.picture as picture10_11_, user0_.updated_at as updated11_11_, user0_.username as usernam12_11_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-04-04 11:50:10.091 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:50:10.097 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `biography` : value = Biography
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `birthdate` : value = 1999-04-13
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.110 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Jeanne
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Uwimana
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `musics` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`musics`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = 466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `picture` : value = images/admin/avataaars4.png
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.129 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `shortStories` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`shortStories`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-16
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@f8fe610
[DEBUG] 2020-04-04 11:50:10.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.131 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 11:50:10.150 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=admin, email=admin@streammedia.com, password=466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78, firstName=Jeanne, lastName=Uwimana, birthdate=1999-04-13, picture=images/admin/avataaars4.png, gender=Female, biography=Biography)]
[DEBUG] 2020-04-04 11:50:10.150 [http-nio-8080-exec-4] SQL - select roles0_.username as username5_9_0_, roles0_.role_id as role_id1_9_0_, roles0_.role_id as role_id1_9_1_, roles0_.created_at as created_2_9_1_, roles0_.name as name3_9_1_, roles0_.updated_at as updated_4_9_1_, roles0_.username as username5_9_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-04-04 11:50:10.153 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=admin, email=admin@streammedia.com, password=466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78, firstName=Jeanne, lastName=Uwimana, birthdate=1999-04-13, picture=images/admin/avataaars4.png, gender=Female, biography=Biography)]
[DEBUG] 2020-04-04 11:50:10.159 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:50:10.163 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-16
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)
[DEBUG] 2020-04-04 11:50:10.169 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:10.170 [http-nio-8080-exec-4] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-04-04 11:50:10.170 [http-nio-8080-exec-4] SQL - select user0_.user_id as user_id1_11_1_, user0_.biography as biograph2_11_1_, user0_.birthdate as birthdat3_11_1_, user0_.created_at as created_4_11_1_, user0_.email as email5_11_1_, user0_.first_name as first_na6_11_1_, user0_.gender as gender7_11_1_, user0_.last_name as last_nam8_11_1_, user0_.password as password9_11_1_, user0_.picture as picture10_11_1_, user0_.updated_at as updated11_11_1_, user0_.username as usernam12_11_1_, roles1_.username as username5_9_3_, roles1_.role_id as role_id1_9_3_, roles1_.role_id as role_id1_9_0_, roles1_.created_at as created_2_9_0_, roles1_.name as name3_9_0_, roles1_.updated_at as updated_4_9_0_, roles1_.username as username5_9_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-04-04 11:50:10.174 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:50:10.174 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] Loader - Done entity load
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-04-04 11:50:10.175 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 11:50:10.176 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:50:10.176 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-04 11:50:10.179 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:21.737 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:50:21.739 [http-nio-8080-exec-6] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.BkCategory as generatedAlias0
[DEBUG] 2020-04-04 11:50:21.739 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 11:50:21.740 [http-nio-8080-exec-6] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'BkCategory'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-04-04 11:50:21.740 [http-nio-8080-exec-6] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-04 11:50:21.740 [http-nio-8080-exec-6] FromElement - FromClause{level=1} : com.streammedia.entity.BkCategory (generatedAlias0) -> bkcategory0_
[DEBUG] 2020-04-04 11:50:21.740 [http-nio-8080-exec-6] FromReferenceNode - Resolved : generatedAlias0 -> bkcategory0_.bkCategory_id
[DEBUG] 2020-04-04 11:50:21.740 [http-nio-8080-exec-6] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-04 11:50:21.740 [http-nio-8080-exec-6] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} bkcategory0_.bkCategory_id ) ( FromClause{level=1} BKCategory bkcategory0_ ) )
[DEBUG] 2020-04-04 11:50:21.745 [http-nio-8080-exec-6] JoinProcessor - Using FROM fragment [BKCategory bkcategory0_]
[DEBUG] 2020-04-04 11:50:21.745 [http-nio-8080-exec-6] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-04 11:50:21.745 [http-nio-8080-exec-6] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (BKCategory)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'bkcategory0_.bkCategory_id as bkCatego1_0_' {alias=generatedAlias0, className=com.streammedia.entity.BkCategory, tableAlias=bkcategory0_}
    |  \-[SQL_TOKEN] SqlFragment: 'bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[bkcategory0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'BKCategory bkcategory0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=BKCategory,tableAlias=bkcategory0_,origin=null,columns={,className=com.streammedia.entity.BkCategory}}

[DEBUG] 2020-04-04 11:50:21.745 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 11:50:21.746 [http-nio-8080-exec-6] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.BkCategory as generatedAlias0
[DEBUG] 2020-04-04 11:50:21.746 [http-nio-8080-exec-6] QueryTranslatorImpl - SQL: select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:50:21.746 [http-nio-8080-exec-6] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 11:50:21.746 [http-nio-8080-exec-6] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:50:21.751 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:50:21.751 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:50:21.756 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:21.757 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:25.652 [http-nio-8080-exec-7] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:25.659 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:25.660 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:50:25.660 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#3
[DEBUG] 2020-04-04 11:50:25.660 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:52.415 [http-nio-8080-exec-10] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:52.417 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:50:52.417 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:50:52.417 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#3
[DEBUG] 2020-04-04 11:50:52.418 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:52.432 [http-nio-8080-exec-10] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-04-04 11:50:52.432 [http-nio-8080-exec-10] TransactionImpl - begin
[DEBUG] 2020-04-04 11:50:52.455 [http-nio-8080-exec-10] TransactionImpl - committing
[DEBUG] 2020-04-04 11:50:52.455 [http-nio-8080-exec-10] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-04-04 11:50:52.455 [http-nio-8080-exec-10] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-04-04 11:50:52.463 [http-nio-8080-exec-10] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-04-04 11:50:52.464 [http-nio-8080-exec-10] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-04-04 11:50:52.468 [http-nio-8080-exec-10] EntityPrinter - Listing entities:
[DEBUG] 2020-04-04 11:50:52.468 [http-nio-8080-exec-10] EntityPrinter - com.streammedia.entity.BkCategory{createdAt=2020-04-04T11:48:08, bkCategoryId=3, description=These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment., title=Suspense and Thrillers, updatedAt=2020-04-04T11:48:08}
[DEBUG] 2020-04-04 11:50:52.550 [http-nio-8080-exec-10] SQL - update BKCategory set created_at=?, description=?, title=?, updated_at=? where bkCategory_id=?
[DEBUG] 2020-04-04 11:50:53.067 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:53.069 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:53.076 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:50:53.076 [http-nio-8080-exec-1] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:50:53.084 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:50:53.084 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:50:53.084 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:50:53.084 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:50:53.085 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:50:53.085 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:53.085 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.087 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:50:53.088 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.088 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:50:53.088 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.088 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:50:53
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:53.089 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:53.090 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:54.808 [http-nio-8080-exec-2] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:54.813 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:50:54.813 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:50:54.813 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:50:53
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:50:54.814 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#3
[DEBUG] 2020-04-04 11:50:54.816 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:50:57.614 [http-nio-8080-exec-3] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:50:53
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#3
[DEBUG] 2020-04-04 11:50:57.622 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:18.648 [http-nio-8080-exec-6] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:51:18.654 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:51:18.654 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:51:18.654 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:18.654 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = These books chronicle and layout a specific moment in time, with a goal to educate and inform the reader, looking at all parts of the world at any given moment.
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:50:53
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:18.655 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:18.657 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#3
[DEBUG] 2020-04-04 11:51:18.657 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:18.660 [http-nio-8080-exec-6] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-04-04 11:51:18.660 [http-nio-8080-exec-6] TransactionImpl - begin
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] TransactionImpl - committing
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] EntityPrinter - Listing entities:
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] EntityPrinter - com.streammedia.entity.BkCategory{createdAt=2020-04-04T11:48:08, bkCategoryId=3, description=While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader., title=Suspense and Thrillers, updatedAt=2020-04-04T11:50:53}
[DEBUG] 2020-04-04 11:51:18.662 [http-nio-8080-exec-6] SQL - update BKCategory set created_at=?, description=?, title=?, updated_at=? where bkCategory_id=?
[DEBUG] 2020-04-04 11:51:18.768 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:18.771 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:18.786 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:51:18.787 [http-nio-8080-exec-7] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:51:18.788 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:51:18.789 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:18.789 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.791 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:18.792 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:20.472 [http-nio-8080-exec-8] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:51:20.473 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:51:20.473 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#3
[DEBUG] 2020-04-04 11:51:20.474 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:35.169 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:51:35.173 [http-nio-8080-exec-2] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:51:35.175 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:51:35.175 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.176 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:35.177 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:45.191 [http-nio-8080-exec-5] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-04-04 11:51:45.191 [http-nio-8080-exec-5] TransactionImpl - begin
[DEBUG] 2020-04-04 11:51:45.209 [http-nio-8080-exec-5] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-04-04 11:51:45.210 [http-nio-8080-exec-5] SQL - insert into BKCategory (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 11:51:45.216 [http-nio-8080-exec-5] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2020-04-04 11:51:45.216 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] TransactionImpl - committing
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] EntityPrinter - Listing entities:
[DEBUG] 2020-04-04 11:51:45.217 [http-nio-8080-exec-5] EntityPrinter - com.streammedia.entity.BkCategory{createdAt=2020-04-04T11:51:45.210030, bkCategoryId=4, description=Test, title=History, updatedAt=2020-04-04T11:51:45.210057}
[DEBUG] 2020-04-04 11:51:45.221 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:45.221 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:45.231 [http-nio-8080-exec-6] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:51:45.231 [http-nio-8080-exec-6] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result set row: 3
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:45.236 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Test
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:45.237 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:45.239 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:48.367 [http-nio-8080-exec-7] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:51:48.374 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:51:48.374 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Test
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#4
[DEBUG] 2020-04-04 11:51:48.375 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:53.588 [http-nio-8080-exec-8] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:51:53.598 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:51:53.599 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Test
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#4
[DEBUG] 2020-04-04 11:51:53.601 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:53.603 [http-nio-8080-exec-8] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-04-04 11:51:53.603 [http-nio-8080-exec-8] TransactionImpl - begin
[DEBUG] 2020-04-04 11:51:53.604 [http-nio-8080-exec-8] TransactionImpl - committing
[DEBUG] 2020-04-04 11:51:53.604 [http-nio-8080-exec-8] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-04-04 11:51:53.605 [http-nio-8080-exec-8] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-04-04 11:51:53.605 [http-nio-8080-exec-8] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-04-04 11:51:53.605 [http-nio-8080-exec-8] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-04-04 11:51:53.605 [http-nio-8080-exec-8] EntityPrinter - Listing entities:
[DEBUG] 2020-04-04 11:51:53.605 [http-nio-8080-exec-8] EntityPrinter - com.streammedia.entity.BkCategory{createdAt=2020-04-04T11:51:45, bkCategoryId=4, description=Test More test, title=History, updatedAt=2020-04-04T11:51:45}
[DEBUG] 2020-04-04 11:51:53.605 [http-nio-8080-exec-8] SQL - update BKCategory set created_at=?, description=?, title=?, updated_at=? where bkCategory_id=?
[DEBUG] 2020-04-04 11:51:53.610 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:53.612 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:53.623 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:51:53.624 [http-nio-8080-exec-9] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:51:53.729 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:51:53.729 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:53.729 [http-nio-8080-exec-9] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:51:53.729 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] Loader - Result set row: 3
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:53.730 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = Test More test
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:54
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:53.731 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:53.733 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:57.644 [http-nio-8080-exec-1] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Test More test
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:54
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:57.647 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:57.648 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#4
[DEBUG] 2020-04-04 11:51:57.648 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:59.637 [http-nio-8080-exec-2] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:51:45
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Test More test
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = History
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:54
[DEBUG] 2020-04-04 11:51:59.638 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.639 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#4]
[DEBUG] 2020-04-04 11:51:59.639 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 11:51:59.639 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.BkCategory#4
[DEBUG] 2020-04-04 11:51:59.639 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:59.640 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-04-04 11:51:59.640 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] EntityPrinter - Listing entities:
[DEBUG] 2020-04-04 11:51:59.645 [http-nio-8080-exec-2] EntityPrinter - com.streammedia.entity.BkCategory{createdAt=2020-04-04T11:51:45, bkCategoryId=4, description=Test More test, title=History, updatedAt=2020-04-04T11:51:54}
[DEBUG] 2020-04-04 11:51:59.651 [http-nio-8080-exec-2] SQL - delete from BKCategory where bkCategory_id=?
[DEBUG] 2020-04-04 11:51:59.718 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:59.718 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:51:59.718 [http-nio-8080-exec-2] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-04-04 11:51:59.721 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:51:59.721 [http-nio-8080-exec-3] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:51:59.724 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:51:59.724 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:51:59.725 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:51:59.726 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 11:52:02.313 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BKCategory as generatedAlias0
[DEBUG] 2020-04-04 11:52:02.313 [http-nio-8080-exec-4] SQL - select bkcategory0_.bkCategory_id as bkCatego1_0_, bkcategory0_.created_at as created_2_0_, bkcategory0_.description as descript3_0_, bkcategory0_.title as title4_0_, bkcategory0_.updated_at as updated_5_0_ from BKCategory bkcategory0_
[DEBUG] 2020-04-04 11:52:02.316 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-04-04 11:52:02.316 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:52:02.316 [http-nio-8080-exec-4] Loader - Result set row: 1
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] Loader - Result set row: 2
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Though they're often thought of in the same vein as fantasy, what distinguishes science fiction stories is that they lean heavily on themes of technology and future science. You'll find apocalyptic and dystopian novels in the sci-fi genre as well.
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Science Fiction (Sci-Fi)
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:32:22
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#1]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Serving as an official account of the details and events of a person's life span, autobiographies are written by the subject themselves, while biographies are written by an author who is not the focus of the book.
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Biographies and Autobiographies
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:47:26
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#2]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-04-04T11:48:08
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = While they often encompass the same elements as mystery books, the suspense and thriller genre sees the hero attempt to stop and defeat the villain to save their own life rather than uncover a specific crime. Thrillers typically include cliffhangers and deception to encourage suspense, while pulling the wool over the eyes of both the main character and reader.
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Suspense and Thrillers
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-04-04T11:51:19
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 11:52:02.317 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.BkCategory#3]
[DEBUG] 2020-04-04 11:52:02.318 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
