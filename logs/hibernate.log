[DEBUG] 2020-02-28 15:01:00.820 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:01:00.822 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:01:00.827 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:01:00.899 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:01:00.903 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:01:01.025 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:01:01.025 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:01:01.064 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:01:01.792 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:01:01.815 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:01:01.817 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:01:01.851 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:01:01.888 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23de73b2
[DEBUG] 2020-02-28 15:01:01.888 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23de73b2
[DEBUG] 2020-02-28 15:01:01.889 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23de73b2
[DEBUG] 2020-02-28 15:01:01.889 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@9a0ecd7
[DEBUG] 2020-02-28 15:01:01.890 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@25f1e6be
[DEBUG] 2020-02-28 15:01:01.890 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3c2d7583
[DEBUG] 2020-02-28 15:01:01.891 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@507e6e5b
[DEBUG] 2020-02-28 15:01:01.891 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@507e6e5b
[DEBUG] 2020-02-28 15:01:01.891 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@507e6e5b
[DEBUG] 2020-02-28 15:01:01.893 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@8e1a2f0
[DEBUG] 2020-02-28 15:01:01.893 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@8e1a2f0
[DEBUG] 2020-02-28 15:01:01.894 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@8e1a2f0
[DEBUG] 2020-02-28 15:01:01.896 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63f4f4
[DEBUG] 2020-02-28 15:01:01.897 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63f4f4
[DEBUG] 2020-02-28 15:01:01.897 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63f4f4
[DEBUG] 2020-02-28 15:01:01.898 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@e7f8566
[DEBUG] 2020-02-28 15:01:01.898 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@e7f8566
[DEBUG] 2020-02-28 15:01:01.898 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e7f8566
[DEBUG] 2020-02-28 15:01:01.900 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@35e2f17c
[DEBUG] 2020-02-28 15:01:01.900 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@35e2f17c
[DEBUG] 2020-02-28 15:01:01.900 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35e2f17c
[DEBUG] 2020-02-28 15:01:01.902 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55ce529d
[DEBUG] 2020-02-28 15:01:01.903 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55ce529d
[DEBUG] 2020-02-28 15:01:01.903 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55ce529d
[DEBUG] 2020-02-28 15:01:01.904 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@357951ad
[DEBUG] 2020-02-28 15:01:01.905 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@357951ad
[DEBUG] 2020-02-28 15:01:01.905 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@357951ad
[DEBUG] 2020-02-28 15:01:01.906 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66ad69e4
[DEBUG] 2020-02-28 15:01:01.906 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66ad69e4
[DEBUG] 2020-02-28 15:01:01.906 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fcf4fa1
[DEBUG] 2020-02-28 15:01:01.907 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fcf4fa1
[DEBUG] 2020-02-28 15:01:01.907 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@75b476c0
[DEBUG] 2020-02-28 15:01:01.907 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@75b476c0
[DEBUG] 2020-02-28 15:01:01.908 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a8c68fd
[DEBUG] 2020-02-28 15:01:01.908 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4bc1b865
[DEBUG] 2020-02-28 15:01:01.909 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3931ea3f
[DEBUG] 2020-02-28 15:01:01.909 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3931ea3f
[DEBUG] 2020-02-28 15:01:01.910 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@322a674c
[DEBUG] 2020-02-28 15:01:01.910 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@322a674c
[DEBUG] 2020-02-28 15:01:01.913 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4e493b61
[DEBUG] 2020-02-28 15:01:01.913 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e493b61
[DEBUG] 2020-02-28 15:01:01.914 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@350fff07
[DEBUG] 2020-02-28 15:01:01.914 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@350fff07
[DEBUG] 2020-02-28 15:01:01.915 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a302429
[DEBUG] 2020-02-28 15:01:01.915 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a302429
[DEBUG] 2020-02-28 15:01:01.918 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@54a4767e
[DEBUG] 2020-02-28 15:01:01.919 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@54a4767e
[DEBUG] 2020-02-28 15:01:01.920 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@54d7ba98
[DEBUG] 2020-02-28 15:01:01.920 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@54d7ba98
[DEBUG] 2020-02-28 15:01:01.921 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@68c8f4c0
[DEBUG] 2020-02-28 15:01:01.922 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@68c8f4c0
[DEBUG] 2020-02-28 15:01:01.923 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@106808c3
[DEBUG] 2020-02-28 15:01:01.923 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@106808c3
[DEBUG] 2020-02-28 15:01:01.924 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7b2aff45
[DEBUG] 2020-02-28 15:01:01.924 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b2aff45
[DEBUG] 2020-02-28 15:01:01.925 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@40e80c86
[DEBUG] 2020-02-28 15:01:01.925 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@40e80c86
[DEBUG] 2020-02-28 15:01:01.926 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e9589ec
[DEBUG] 2020-02-28 15:01:01.926 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e9589ec
[DEBUG] 2020-02-28 15:01:01.926 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e9589ec
[DEBUG] 2020-02-28 15:01:01.929 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e7be3a7
[DEBUG] 2020-02-28 15:01:01.930 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@66d2042e
[DEBUG] 2020-02-28 15:01:01.931 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66d2042e
[DEBUG] 2020-02-28 15:01:01.931 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66d2042e
[DEBUG] 2020-02-28 15:01:01.933 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b3273e8
[DEBUG] 2020-02-28 15:01:01.935 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@61e23ad0
[DEBUG] 2020-02-28 15:01:01.935 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61e23ad0
[DEBUG] 2020-02-28 15:01:01.936 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@508e5efc
[DEBUG] 2020-02-28 15:01:01.936 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@508e5efc
[DEBUG] 2020-02-28 15:01:01.937 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@48188ce8
[DEBUG] 2020-02-28 15:01:01.937 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48188ce8
[DEBUG] 2020-02-28 15:01:01.937 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@79aeeb0f
[DEBUG] 2020-02-28 15:01:01.937 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@79aeeb0f
[DEBUG] 2020-02-28 15:01:01.939 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@dc08a7b
[DEBUG] 2020-02-28 15:01:01.940 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@dc08a7b
[DEBUG] 2020-02-28 15:01:01.940 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11da3252
[DEBUG] 2020-02-28 15:01:01.941 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2d09c474
[DEBUG] 2020-02-28 15:01:01.941 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d09c474
[DEBUG] 2020-02-28 15:01:01.941 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2d09c474
[DEBUG] 2020-02-28 15:01:01.942 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c705b0c
[DEBUG] 2020-02-28 15:01:01.943 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c705b0c
[DEBUG] 2020-02-28 15:01:01.943 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c705b0c
[DEBUG] 2020-02-28 15:01:01.943 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5442b30a
[DEBUG] 2020-02-28 15:01:01.944 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@363ba5d3
[DEBUG] 2020-02-28 15:01:01.945 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3f47191c
[DEBUG] 2020-02-28 15:01:01.945 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f47191c
[DEBUG] 2020-02-28 15:01:01.945 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3f47191c
[DEBUG] 2020-02-28 15:01:01.946 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bc17fb1
[DEBUG] 2020-02-28 15:01:01.946 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bc17fb1
[DEBUG] 2020-02-28 15:01:01.946 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bc17fb1
[DEBUG] 2020-02-28 15:01:01.946 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@a6f8152
[DEBUG] 2020-02-28 15:01:01.947 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@72990395
[DEBUG] 2020-02-28 15:01:01.948 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7bbd0ed0
[DEBUG] 2020-02-28 15:01:01.948 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7bbd0ed0
[DEBUG] 2020-02-28 15:01:01.949 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@270ecbf8
[DEBUG] 2020-02-28 15:01:01.951 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6193eb98
[DEBUG] 2020-02-28 15:01:01.951 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6193eb98
[DEBUG] 2020-02-28 15:01:01.953 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@533e1555
[DEBUG] 2020-02-28 15:01:01.953 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@533e1555
[DEBUG] 2020-02-28 15:01:01.953 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6edad2d
[DEBUG] 2020-02-28 15:01:01.954 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@576ea8bf
[DEBUG] 2020-02-28 15:01:01.956 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@270c6dd9
[DEBUG] 2020-02-28 15:01:01.958 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@30dead6e
[DEBUG] 2020-02-28 15:01:01.958 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30dead6e
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9a871a5
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@52f1f40a
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51a32584
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5df30bd5
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@179c6c97
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a908bca
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2571819
[DEBUG] 2020-02-28 15:01:01.959 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@47bf0625
[DEBUG] 2020-02-28 15:01:02.005 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:01:02.006 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:01:02.006 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:01:02.008 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:01:02.008 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:01:02.009 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:01:02.009 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:01:02.010 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:01:02.011 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:01:02.011 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:01:02.012 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:01:02.012 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:01:02.012 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:01:02.013 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:01:02.018 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:01:02.019 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:01:02.019 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:01:02.219 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:01:04.341 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:01:04.341 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:01:04.341 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:01:04.362 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:01:04.387 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:01:04.427 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:01:04.482 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:01:04.487 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5176cca5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a15f6e9]
[DEBUG] 2020-02-28 15:01:04.560 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.601 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.611 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:01:04.618 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:01:04.656 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.665 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:01:04.668 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:01:04.671 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:01:04.672 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:01:04.676 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.677 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.678 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:01:04.678 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:01:04.678 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:01:04.678 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:01:04.678 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.679 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:01:04.679 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:01:04.680 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:01:04.680 [http-nio-8080-exec-5] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:01:04.681 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:01:04.682 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.683 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:01:04.683 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.683 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.683 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.684 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:01:04.687 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:01:04.687 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:01:04.687 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:01:04.689 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.690 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.694 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.708 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.708 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.709 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:01:04.712 [http-nio-8080-exec-5] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:01:04.712 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.713 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.714 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.714 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:01:04.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.719 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:01:04.720 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:01:04.721 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:01:04.722 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.723 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:01:04.723 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:01:04.723 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:01:04.723 [http-nio-8080-exec-5] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:01:04.723 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.723 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.724 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.724 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.724 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.724 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.725 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.726 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.726 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.726 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.726 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:01:04.727 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:01:04.728 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:01:04.728 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:01:04.729 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:01:04.729 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:01:04.733 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:01:04.735 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.735 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:01:04.736 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:01:04.741 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.741 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:01:04.741 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:01:04.741 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:01:04.741 [http-nio-8080-exec-5] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:01:04.742 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.742 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.742 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.742 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:01:04.742 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.742 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.754 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.755 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:01:04.755 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.755 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:01:04.755 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.756 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.757 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:01:04.758 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:01:04.758 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.758 [http-nio-8080-exec-5] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:01:04.758 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:01:04.759 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.759 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:01:04.760 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:01:04.761 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:04.763 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.764 [http-nio-8080-exec-5] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:01:04.764 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.768 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:01:04.769 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:01:04.770 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:01:04.773 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:01:04.774 [http-nio-8080-exec-5] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.775 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:01:04.776 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:01:04.777 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:01:04.778 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:01:04.778 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:01:04.778 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:01:04.778 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.778 [http-nio-8080-exec-5] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:01:04.778 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:01:04.779 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.779 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:01:04.779 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:01:04.779 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:01:04.779 [http-nio-8080-exec-5] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:01:04.779 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:01:04.780 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.781 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:01:04.782 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:04.782 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:01:04.782 [http-nio-8080-exec-5] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:01:04.782 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.788 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.789 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:01:04.790 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:01:04.791 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:01:04.792 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:01:04.793 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:01:04.798 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:01:04.799 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:01:04.803 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:01:04.804 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:01:04.805 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:01:04.806 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:01:04.806 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:01:04.806 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.808 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.812 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:01:04.812 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.812 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.812 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:04.813 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:04.813 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:04.813 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:04.813 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.813 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:04.885 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:01:04.886 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:01:04.887 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:01:04.960 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:01:04.992 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:01:04.992 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@e4d25da, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:01:05.021 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:01:05.021 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:05.040 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:01:05.040 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:01:05.041 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:01:05.041 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:01:05.041 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:01:05.041 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:05.042 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:01:05.042 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:01:05.042 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:01:05.042 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:05.044 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:01:05.044 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:05.051 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:01:05.052 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:01:05.052 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5176cca5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1e50d851]
[DEBUG] 2020-02-28 15:01:05.199 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:01:05.200 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:05.229 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:01:05.229 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:05.992 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:01:05.992 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:01:05.993 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:01:05.993 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:01:06.021 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:01:06.021 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:01:06.022 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:01:06.022 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:01:06.035 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:01:06.035 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:06.035 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:01:06.035 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:06.055 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:01:06.055 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:01:06.056 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:01:06.056 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:01:06.081 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:01:06.081 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:06.083 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:01:06.083 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:06.125 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:01:06.125 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:06.125 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:01:06.125 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:06.154 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:01:06.156 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:01:06.156 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:01:06.156 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:01:06.156 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:01:06.157 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:01:06.158 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:01:06.160 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:01:06.163 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:01:06.164 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:01:06.164 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:01:06.164 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.164 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:01:06.164 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:01:06.164 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.232 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c4e16f7]
[DEBUG] 2020-02-28 15:01:06.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.235 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:01:06.239 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bb58be3]
[DEBUG] 2020-02-28 15:01:06.240 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c48366]
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ab860f]
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7f737a]
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.241 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.243 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.243 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af56708]
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34e66d58]
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c53f2]
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.246 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.247 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.247 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.247 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ded1fae]
[DEBUG] 2020-02-28 15:01:06.247 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@489bda22]
[DEBUG] 2020-02-28 15:01:06.249 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:01:06.249 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:01:06.249 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.249 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:01:06.249 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:01:06.251 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.251 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70f67bd2]
[DEBUG] 2020-02-28 15:01:06.251 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48931ba2]
[DEBUG] 2020-02-28 15:01:06.251 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.252 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.252 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.253 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35784ef0]
[DEBUG] 2020-02-28 15:01:06.255 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.255 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.256 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.276 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.282 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e52e29]
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cb14849]
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2531668]
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a6ff46d]
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fabfbb]
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f4c6d]
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.284 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.285 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4deca9fd]
[DEBUG] 2020-02-28 15:01:06.286 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3ad09c]
[DEBUG] 2020-02-28 15:01:06.286 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@642e1b52]
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533cd82f]
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2523c8cf]
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10eb91e4]
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5219238d]
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.290 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.294 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.295 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.297 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:01:06.312 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8b5d01]
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c84d36]
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39986fe6]
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61eac858]
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577d98ae]
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10353bfa]
[DEBUG] 2020-02-28 15:01:06.313 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66b477a0]
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe77a67]
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@716bea77]
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.314 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.317 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.317 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:01:06.317 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@509671ca]
[DEBUG] 2020-02-28 15:01:06.317 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:01:06.317 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.318 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:01:06.318 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.318 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.319 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a507150]
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cd9da0e]
[DEBUG] 2020-02-28 15:01:06.320 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3874919d]
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2137ad32]
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@699dbb75]
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bc0e495]
[DEBUG] 2020-02-28 15:01:06.321 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f82b28b]
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@34e06d8c]
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.322 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.323 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b32290d]
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61555ae]
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f556e50]
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ac5932]
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3438c7ac]
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b3f32ac]
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.324 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fece675]
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f34973]
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1704e7c6]
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.325 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d1b8c54]
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32d6170f]
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.326 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@763951d4]
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13529314]
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@113e901e]
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e721f67]
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72f9408c]
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75b4a7f4]
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.327 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@10ef773c]
[DEBUG] 2020-02-28 15:01:06.328 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.329 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.329 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.331 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.331 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:01:06.334 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:01:06.334 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76fd0f0a]
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d1b5859]
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4570e158]
[DEBUG] 2020-02-28 15:01:06.335 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5beb23a3]
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e788aaa]
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c40ca1c]
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.336 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.337 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.337 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:01:06.337 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:01:06.337 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:01:06.337 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.338 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e34140c]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b18fab8]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fb833a7]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468171d4]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7af08e86]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6adb92]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13d1e493]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9338ec]
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:01:06.339 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@676d665d]
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.340 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.342 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.342 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:01:06.342 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48b76a24]
[DEBUG] 2020-02-28 15:01:06.342 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:01:06.342 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.342 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.343 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ba42ce]
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.344 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38b26c91]
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608f9f96]
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ae90d7b]
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff762ac]
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.345 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@748a4b27]
[DEBUG] 2020-02-28 15:01:06.346 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e5190f]
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@48f60fd7]
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.347 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.348 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.348 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.350 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:01:06.350 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:01:06.350 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:01:06.351 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.352 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a378a2]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23316247]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@712d5ae4]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42784a0b]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@135a1fa5]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b5164d3]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2030e327]
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:01:06.353 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53bbcee9]
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b52662]
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12a244c1]
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.355 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed32e30]
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:01:06.358 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@430c5d52]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43afe880]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@448aec6b]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43687c29]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@622f4fdb]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ef840f6]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55c27da6]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49a17818]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1449f27c]
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.359 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.360 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:01:06.360 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:01:06.360 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:01:06.360 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:01:06.362 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6868621d]
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24e7d899]
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@639bbe2f]
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@484840cb]
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:01:06.363 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@171e07ba]
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29caa9b0]
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:01:06.365 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:01:06.366 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@537eef28]
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7465fd97]
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.371 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:01:06.371 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.371 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a94f04f]
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f58603]
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.373 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15908b75]
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7939d25a]
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.374 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@214bb3a7]
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16570ed6]
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b47f3e6]
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c867e6]
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.375 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a567c9]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a6f5b07]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2efafb]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@333a5998]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47726e8a]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37b5a200]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c876f2f]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1d900fbe]
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.376 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.378 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.379 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:01:06.379 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:01:06.379 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@510bdbd6]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9d57ff]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@792cdfca]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@788f4dbf]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24573242]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e545b30]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb403f0]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@616ceb06]
[DEBUG] 2020-02-28 15:01:06.380 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488e86d7]
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14dfd92d]
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a8e3c5]
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e9a050d]
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.381 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@186223e8]
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17db5dea]
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:01:06.382 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64af326]
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb3ca08]
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:01:06.383 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:01:06.384 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.386 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.387 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.387 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.387 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:01:06.387 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5754c000]
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2a368]
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cc543ef]
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2b5cfc]
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b0db323]
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d26e15]
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:01:06.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:01:06.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:01:06.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:01:06.389 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:01:06.389 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:01:06.389 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:01:06.390 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:01:06.459 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:01:06.459 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:01:06.460 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:01:06.467 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:01:06.467 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:01:06.468 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:01:06.468 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:01:06.471 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d5c7f3c
[DEBUG] 2020-02-28 15:01:06.472 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: bfd4e07c-5f81-42df-8626-3da27c96c89f (<unnamed>)
[DEBUG] 2020-02-28 15:01:06.472 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:01:06.623 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:01:06.658 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:01:06.724 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@783d4909
[DEBUG] 2020-02-28 15:01:06.773 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:01:06.785 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:01:06.790 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:01:06.838 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:01:06.856 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:01:06.857 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:01:06.858 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:01:06.858 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:01:06.868 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:01:06.868 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:01:06.868 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:01:06.868 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:01:06.881 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:01:06.881 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:01:06.881 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:01:06.902 [http-nio-8080-exec-5] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:01:07.023 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:01:07.025 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:01:07.035 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:01:07.036 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:01:07.036 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:01:07.036 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:01:07.037 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.038 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:01:07.039 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.044 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:01:07.058 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:01:07.059 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:01:07.103 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:07.110 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.113 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@157f42d0
[DEBUG] 2020-02-28 15:01:07.114 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.115 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:01:07.115 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:01:07.115 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:01:07.116 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.117 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:01:07.117 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:01:07.121 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:01:07.122 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:01:07.122 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:01:07.123 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:07.123 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-28 15:01:07.123 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:01:07.123 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:07.123 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:01:07.123 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:07.124 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:01:07.126 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:01:21.114 [http-nio-8080-exec-8] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:01:21.121 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:01:21.125 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:01:21.132 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:21.133 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@45a836e
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:01:21.134 [http-nio-8080-exec-8] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:01:21.138 [http-nio-8080-exec-8] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:01:21.138 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:01:21.138 [http-nio-8080-exec-8] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:01:21.138 [http-nio-8080-exec-8] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:21.138 [http-nio-8080-exec-8] Loader - Done entity load
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:01:21.140 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:02:34.973 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:02:34.975 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:02:34.978 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:02:35.125 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:02:35.133 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:02:35.327 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:02:35.328 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:02:35.336 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:02:35.501 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:02:35.521 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:02:35.522 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:02:35.571 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:02:35.640 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@252f82b
[DEBUG] 2020-02-28 15:02:35.640 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@252f82b
[DEBUG] 2020-02-28 15:02:35.640 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@252f82b
[DEBUG] 2020-02-28 15:02:35.640 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3fdc975e
[DEBUG] 2020-02-28 15:02:35.641 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a13687
[DEBUG] 2020-02-28 15:02:35.641 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@67819351
[DEBUG] 2020-02-28 15:02:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@33148421
[DEBUG] 2020-02-28 15:02:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@33148421
[DEBUG] 2020-02-28 15:02:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33148421
[DEBUG] 2020-02-28 15:02:35.643 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@21aba4df
[DEBUG] 2020-02-28 15:02:35.643 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@21aba4df
[DEBUG] 2020-02-28 15:02:35.643 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21aba4df
[DEBUG] 2020-02-28 15:02:35.644 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4ec96fb4
[DEBUG] 2020-02-28 15:02:35.644 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4ec96fb4
[DEBUG] 2020-02-28 15:02:35.644 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ec96fb4
[DEBUG] 2020-02-28 15:02:35.646 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3cda4166
[DEBUG] 2020-02-28 15:02:35.647 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3cda4166
[DEBUG] 2020-02-28 15:02:35.647 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3cda4166
[DEBUG] 2020-02-28 15:02:35.648 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d061b45
[DEBUG] 2020-02-28 15:02:35.648 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d061b45
[DEBUG] 2020-02-28 15:02:35.648 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d061b45
[DEBUG] 2020-02-28 15:02:35.649 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c674d23
[DEBUG] 2020-02-28 15:02:35.649 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c674d23
[DEBUG] 2020-02-28 15:02:35.650 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c674d23
[DEBUG] 2020-02-28 15:02:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@9d32fc3
[DEBUG] 2020-02-28 15:02:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@9d32fc3
[DEBUG] 2020-02-28 15:02:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9d32fc3
[DEBUG] 2020-02-28 15:02:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b45f385
[DEBUG] 2020-02-28 15:02:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b45f385
[DEBUG] 2020-02-28 15:02:35.652 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@301fe11b
[DEBUG] 2020-02-28 15:02:35.652 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@301fe11b
[DEBUG] 2020-02-28 15:02:35.652 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@268c5d0e
[DEBUG] 2020-02-28 15:02:35.652 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@268c5d0e
[DEBUG] 2020-02-28 15:02:35.653 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4aee3f67
[DEBUG] 2020-02-28 15:02:35.653 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2302c842
[DEBUG] 2020-02-28 15:02:35.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4d887bea
[DEBUG] 2020-02-28 15:02:35.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d887bea
[DEBUG] 2020-02-28 15:02:35.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@61ea15ef
[DEBUG] 2020-02-28 15:02:35.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@61ea15ef
[DEBUG] 2020-02-28 15:02:35.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@24428458
[DEBUG] 2020-02-28 15:02:35.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@24428458
[DEBUG] 2020-02-28 15:02:35.656 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@77cc5b17
[DEBUG] 2020-02-28 15:02:35.656 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@77cc5b17
[DEBUG] 2020-02-28 15:02:35.657 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1add48cf
[DEBUG] 2020-02-28 15:02:35.657 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1add48cf
[DEBUG] 2020-02-28 15:02:35.657 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3100a639
[DEBUG] 2020-02-28 15:02:35.657 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3100a639
[DEBUG] 2020-02-28 15:02:35.658 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@623004e7
[DEBUG] 2020-02-28 15:02:35.658 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@623004e7
[DEBUG] 2020-02-28 15:02:35.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@587af717
[DEBUG] 2020-02-28 15:02:35.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@587af717
[DEBUG] 2020-02-28 15:02:35.660 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27d965b9
[DEBUG] 2020-02-28 15:02:35.660 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27d965b9
[DEBUG] 2020-02-28 15:02:35.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6adacc4d
[DEBUG] 2020-02-28 15:02:35.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6adacc4d
[DEBUG] 2020-02-28 15:02:35.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2be74ab2
[DEBUG] 2020-02-28 15:02:35.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2be74ab2
[DEBUG] 2020-02-28 15:02:35.662 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c106c7e
[DEBUG] 2020-02-28 15:02:35.662 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c106c7e
[DEBUG] 2020-02-28 15:02:35.662 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c106c7e
[DEBUG] 2020-02-28 15:02:35.663 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@94f914d
[DEBUG] 2020-02-28 15:02:35.664 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@264e87e5
[DEBUG] 2020-02-28 15:02:35.664 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@264e87e5
[DEBUG] 2020-02-28 15:02:35.664 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@264e87e5
[DEBUG] 2020-02-28 15:02:35.665 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56de391f
[DEBUG] 2020-02-28 15:02:35.665 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@10856e8c
[DEBUG] 2020-02-28 15:02:35.665 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10856e8c
[DEBUG] 2020-02-28 15:02:35.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@699c2055
[DEBUG] 2020-02-28 15:02:35.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@699c2055
[DEBUG] 2020-02-28 15:02:35.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a451245
[DEBUG] 2020-02-28 15:02:35.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a451245
[DEBUG] 2020-02-28 15:02:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7cbae748
[DEBUG] 2020-02-28 15:02:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7cbae748
[DEBUG] 2020-02-28 15:02:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@596e5b35
[DEBUG] 2020-02-28 15:02:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@596e5b35
[DEBUG] 2020-02-28 15:02:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f1838f1
[DEBUG] 2020-02-28 15:02:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@243b6cd8
[DEBUG] 2020-02-28 15:02:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@243b6cd8
[DEBUG] 2020-02-28 15:02:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@243b6cd8
[DEBUG] 2020-02-28 15:02:35.669 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@40a8d71a
[DEBUG] 2020-02-28 15:02:35.671 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@40a8d71a
[DEBUG] 2020-02-28 15:02:35.671 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@40a8d71a
[DEBUG] 2020-02-28 15:02:35.673 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4ce23ee0
[DEBUG] 2020-02-28 15:02:35.673 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7acff65e
[DEBUG] 2020-02-28 15:02:35.674 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@282a632a
[DEBUG] 2020-02-28 15:02:35.674 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@282a632a
[DEBUG] 2020-02-28 15:02:35.674 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@282a632a
[DEBUG] 2020-02-28 15:02:35.675 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49f10dad
[DEBUG] 2020-02-28 15:02:35.675 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49f10dad
[DEBUG] 2020-02-28 15:02:35.675 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49f10dad
[DEBUG] 2020-02-28 15:02:35.675 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6a5caf64
[DEBUG] 2020-02-28 15:02:35.675 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7bb3bca7
[DEBUG] 2020-02-28 15:02:35.676 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@19a37d1f
[DEBUG] 2020-02-28 15:02:35.676 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19a37d1f
[DEBUG] 2020-02-28 15:02:35.677 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@262e01af
[DEBUG] 2020-02-28 15:02:35.677 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4774ae3c
[DEBUG] 2020-02-28 15:02:35.677 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4774ae3c
[DEBUG] 2020-02-28 15:02:35.678 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@54b9f210
[DEBUG] 2020-02-28 15:02:35.678 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54b9f210
[DEBUG] 2020-02-28 15:02:35.679 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25d16d99
[DEBUG] 2020-02-28 15:02:35.679 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@ee1a2c3
[DEBUG] 2020-02-28 15:02:35.680 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65852b81
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@194a217
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@194a217
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66b8328b
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@249a0e8e
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e00d164
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19b970ed
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e32353b
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4aa8b20d
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52bbd1cd
[DEBUG] 2020-02-28 15:02:35.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57fd6f
[DEBUG] 2020-02-28 15:02:35.748 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:02:35.748 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:02:35.753 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:02:35.753 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:02:35.754 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:02:35.754 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:02:35.754 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:02:35.755 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:02:35.756 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:02:35.756 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:02:35.756 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:02:35.756 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:02:35.756 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:02:35.757 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:02:35.777 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:02:35.777 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:02:35.777 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:02:36.000 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:02:36.334 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:02:36.334 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:02:36.336 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:02:36.390 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:02:36.408 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:02:36.437 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:02:36.500 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:02:36.503 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64d16eb8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2cc4ea06]
[DEBUG] 2020-02-28 15:02:36.564 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.582 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.587 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:02:36.589 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:02:36.613 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.616 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:02:36.617 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:02:36.619 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:02:36.622 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:02:36.624 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.626 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.626 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:02:36.626 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:02:36.626 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:02:36.626 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:02:36.626 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.627 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:02:36.627 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:02:36.627 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:02:36.627 [http-nio-8080-exec-5] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:02:36.627 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:02:36.629 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.630 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:02:36.630 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.630 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.631 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.631 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:02:36.631 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:02:36.631 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:02:36.631 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:02:36.633 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.635 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.638 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.645 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.645 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.646 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.646 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.646 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.647 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:02:36.648 [http-nio-8080-exec-5] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.649 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.650 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.651 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.652 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.652 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.652 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.652 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.653 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.653 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:36.653 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:02:36.653 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.654 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:02:36.655 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:02:36.655 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:02:36.655 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:02:36.655 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:02:36.656 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:02:36.658 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:02:36.660 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:02:36.664 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:02:36.666 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.666 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:02:36.666 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:02:36.671 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.671 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.672 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.680 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:02:36.681 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.681 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.682 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:02:36.682 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:02:36.682 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.683 [http-nio-8080-exec-5] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:02:36.683 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:02:36.683 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.687 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:02:36.688 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.689 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:02:36.690 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:02:36.690 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:02:36.690 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:02:36.690 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:02:36.691 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.692 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:02:36.693 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:02:36.694 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:02:36.697 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:02:36.701 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:02:36.702 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:02:36.703 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.704 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:02:36.705 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:02:36.706 [http-nio-8080-exec-5] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:02:36.707 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:02:36.708 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:02:36.709 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:02:36.710 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:02:36.711 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:02:36.712 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:02:36.712 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:02:36.713 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.713 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.713 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.714 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:02:36.715 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:02:36.717 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:02:36.717 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:02:36.720 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:02:36.721 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:02:36.722 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:02:36.726 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:02:36.726 [http-nio-8080-exec-5] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:02:36.726 [http-nio-8080-exec-5] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:02:36.726 [http-nio-8080-exec-5] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:02:36.726 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:02:36.727 [http-nio-8080-exec-5] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:02:36.727 [http-nio-8080-exec-5] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:02:36.727 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:02:36.727 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:02:36.731 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:02:36.732 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:02:36.733 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:02:36.733 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:02:36.734 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:02:36.740 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:02:36.741 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.746 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.746 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:36.746 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.746 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:36.746 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.747 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.747 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.748 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:02:36.748 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.749 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.791 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:02:36.791 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:02:36.792 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:02:36.853 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:02:36.866 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:02:36.867 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d9fe618, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:02:36.885 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:02:36.885 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.886 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:02:36.886 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:02:36.886 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:02:36.886 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:02:36.886 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:02:36.886 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:36.887 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:02:36.887 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:02:36.887 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:02:36.887 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:36.888 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:02:36.888 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:36.890 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:02:36.891 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:02:36.891 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64d16eb8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@51b8342e]
[DEBUG] 2020-02-28 15:02:36.937 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:02:36.937 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:36.944 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:02:36.944 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:37.127 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:02:37.127 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:02:37.128 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:02:37.128 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:02:37.157 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:02:37.157 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:02:37.157 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:02:37.157 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:02:37.177 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:02:37.177 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:37.177 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:02:37.177 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:37.207 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:02:37.207 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:02:37.207 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:02:37.207 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:02:37.256 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:02:37.256 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:37.259 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:02:37.259 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:37.304 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:02:37.304 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:37.308 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:02:37.308 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:37.341 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:02:37.341 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:02:37.341 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:02:37.341 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:02:37.341 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:02:37.342 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:02:37.344 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:02:37.345 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:02:37.351 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.377 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@103ef8e6]
[DEBUG] 2020-02-28 15:02:37.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:02:37.386 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73617c1d]
[DEBUG] 2020-02-28 15:02:37.387 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cce34e0]
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a03e29]
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c9a380]
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.388 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a022de]
[DEBUG] 2020-02-28 15:02:37.390 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.390 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.390 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.390 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.390 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fac19f9]
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d6f3e26]
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.391 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.392 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a71886e]
[DEBUG] 2020-02-28 15:02:37.392 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e0b0708]
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5230a44]
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7902e22e]
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.393 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.394 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.394 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4ac01ffc]
[DEBUG] 2020-02-28 15:02:37.398 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.398 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.398 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.410 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.418 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.421 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:02:37.421 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65857f34]
[DEBUG] 2020-02-28 15:02:37.421 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.421 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.421 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e37e997]
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3abc61e2]
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740ed55e]
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19d4d553]
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83eecaf]
[DEBUG] 2020-02-28 15:02:37.422 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5372a47a]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c339d0a]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13975fb7]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63ca1709]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c35bbec]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f74993c]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@396f062]
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.423 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.425 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.425 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.425 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:02:37.451 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d1230b]
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.452 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b991997]
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.453 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2400dbb3]
[DEBUG] 2020-02-28 15:02:37.454 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ab1dcf6]
[DEBUG] 2020-02-28 15:02:37.454 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.454 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49672196]
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc24a1d]
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5934151a]
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47b3e83]
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@72d0e7c]
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.455 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.457 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.457 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:37.457 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@286009f4]
[DEBUG] 2020-02-28 15:02:37.457 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:02:37.457 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a030b69]
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@492a55c8]
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295219fd]
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.458 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b8817fd]
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24570d73]
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6db02b1e]
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71908f4e]
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@ae220f0]
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:37.459 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@775062d]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6994486f]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24a8c3e8]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fb359c]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4de7c21c]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5976ae13]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b238156]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642b047b]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@17afddc0]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ccbf80f]
[DEBUG] 2020-02-28 15:02:37.460 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d7b733]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e36e45e]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47698606]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b3dff7]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d001823]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34fd03c9]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f2feae6]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@528ed693]
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:02:37.461 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ada491]
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@370b6a67]
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28691472]
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.462 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16dea4c2]
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4122168a]
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21085058]
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.463 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.464 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.464 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.464 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:02:37.464 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:02:37.464 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4293080f]
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e976417]
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3777c1cd]
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d04c935]
[DEBUG] 2020-02-28 15:02:37.465 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5886af5e]
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469e2544]
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f6eedf3]
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468c84a]
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6643a8f1]
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.466 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62eeef3]
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751e0b84]
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7856f938]
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f44154d]
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a83630a]
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ee91f]
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.467 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.468 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.469 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aee5fb9]
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15dfd5d4]
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3e8a9236]
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.471 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.472 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:02:37.472 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:02:37.473 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:02:37.475 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:02:37.475 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:02:37.475 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:02:37.475 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:02:37.475 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a909b7d]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ef8c290]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3374b8]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31f64b50]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6c5fb8]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52a8ee27]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769ad67e]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7870ade1]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f9adb7]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@ed7591]
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.476 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c6087c]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b6d3702]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fdc800]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63bdb14b]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9de6fd]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5daa032b]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@155f7d56]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46a2e7c3]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f9878c]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6bb3795]
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.477 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:02:37.478 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:02:37.478 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:02:37.478 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:02:37.482 [http-nio-8080-exec-5] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d912c5]
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5382e0e]
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa712a2]
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:02:37.483 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12206c09]
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cc7976]
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659c492f]
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:02:37.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:02:37.485 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.485 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.485 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:02:37.485 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:02:37.485 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:02:37.487 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57610f64]
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6730c56c]
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.491 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.492 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.493 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:02:37.493 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.494 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.497 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.497 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25aa2957]
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23f566a0]
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:02:37.498 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bf941e7]
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1f25e]
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:02:37.500 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.501 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.501 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:02:37.501 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:02:37.501 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e102d30]
[DEBUG] 2020-02-28 15:02:37.501 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629f05ae]
[DEBUG] 2020-02-28 15:02:37.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:02:37.504 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@306c44c1]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ac49517]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cb74d37]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15a3decb]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b419d45]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d49a5ef]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546e5a2f]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f3083ef]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@480c96f9]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@486a34ca]
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.505 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.506 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.507 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7343b4a9]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d820cb8]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27b74e26]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3d61a4]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f43347]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fc9b5da]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e58dbc6]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e46b541]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c28add8]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6efdb4e2]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e3d410]
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:02:37.509 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d149b30]
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.510 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:02:37.511 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:02:37.511 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77125df8]
[DEBUG] 2020-02-28 15:02:37.511 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fb9545e]
[DEBUG] 2020-02-28 15:02:37.511 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:02:37.511 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.513 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:02:37.513 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.513 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:02:37.514 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:02:37.514 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:02:37.514 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:02:37.514 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:02:37.514 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.515 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a2ed364]
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe06fdb]
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.516 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5329dc03]
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f7bef0a]
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@127e0ca3]
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52bda259]
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34545fd1]
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b257fd2]
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:02:37.517 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:02:37.518 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:02:37.518 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:02:37.518 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:02:37.518 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:02:37.518 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:02:37.518 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:02:37.571 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:02:37.571 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:02:37.572 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:02:37.577 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:02:37.577 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:02:37.578 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:02:37.578 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:02:37.581 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@13e0a706
[DEBUG] 2020-02-28 15:02:37.583 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 8a51a03f-75fd-4af0-9eca-c718728dc3d1 (<unnamed>)
[DEBUG] 2020-02-28 15:02:37.584 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:02:37.652 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:02:37.675 [http-nio-8080-exec-5] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:37.711 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:02:37.715 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:02:37.732 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:02:37.747 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:02:37.748 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:37.750 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.753 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:02:37.754 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.754 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@511a6fb
[DEBUG] 2020-02-28 15:02:37.754 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.754 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:37.754 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:02:37.755 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:02:37.755 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.758 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:02:37.758 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.758 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:02:37.758 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.758 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:02:37.758 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:37.760 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:02:37.761 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:02:37.764 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:02:37.766 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:37.766 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:02:37.767 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:37.767 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-28 15:02:37.767 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:02:37.767 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:37.768 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:02:37.768 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:37.769 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:02:37.769 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:02:37.769 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:02:43.799 [http-nio-8080-exec-6] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:43.801 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:02:43.801 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:02:43.802 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@46f5ab7f
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:02:43.806 [http-nio-8080-exec-6] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:02:43.808 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:02:43.808 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:43.808 [http-nio-8080-exec-6] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] Loader - Done entity load
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:02:43.809 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:02:48.283 [http-nio-8080-exec-7] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:02:48.285 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:02:48.285 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:48.286 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@17518c93
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:02:48.287 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:02:48.291 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:02:48.292 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:02:48.292 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:02:48.292 [http-nio-8080-exec-7] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:48.292 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-02-28 15:02:48.292 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:02:48.292 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:48.293 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:02:48.293 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:02:48.293 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:02:48.293 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:02:48.293 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:03:03.143 [http-nio-8080-exec-12] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:03:03.146 [http-nio-8080-exec-12] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:03:03.146 [http-nio-8080-exec-12] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:03:03.152 [http-nio-8080-exec-12] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1e50af9f
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:03:03.153 [http-nio-8080-exec-12] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:03:03.154 [http-nio-8080-exec-12] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:03:03.154 [http-nio-8080-exec-12] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:03:03.155 [http-nio-8080-exec-12] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:03:03.156 [http-nio-8080-exec-12] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:03:03.156 [http-nio-8080-exec-12] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:03:03.157 [http-nio-8080-exec-12] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:03:03.157 [http-nio-8080-exec-12] Loader - Done entity load
[DEBUG] 2020-02-28 15:03:03.157 [http-nio-8080-exec-12] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:03:03.158 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:03:03.158 [http-nio-8080-exec-12] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:03:03.158 [http-nio-8080-exec-12] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:03:03.158 [http-nio-8080-exec-12] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:03:03.158 [http-nio-8080-exec-12] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:03:03.158 [http-nio-8080-exec-12] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:05:36.606 [http-nio-8080-exec-13] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:05:36.608 [http-nio-8080-exec-13] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:05:36.612 [http-nio-8080-exec-13] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:05:36.667 [http-nio-8080-exec-13] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:05:36.668 [http-nio-8080-exec-13] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:05:36.760 [http-nio-8080-exec-13] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:05:36.761 [http-nio-8080-exec-13] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:05:36.762 [http-nio-8080-exec-13] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:05:36.907 [http-nio-8080-exec-13] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:05:36.924 [http-nio-8080-exec-13] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:05:36.924 [http-nio-8080-exec-13] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:05:36.958 [http-nio-8080-exec-13] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:05:36.988 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@392cc961
[DEBUG] 2020-02-28 15:05:36.988 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@392cc961
[DEBUG] 2020-02-28 15:05:36.988 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@392cc961
[DEBUG] 2020-02-28 15:05:36.989 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@46792232
[DEBUG] 2020-02-28 15:05:36.989 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7fa46580
[DEBUG] 2020-02-28 15:05:36.989 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@42c1623d
[DEBUG] 2020-02-28 15:05:36.990 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@42ec58ce
[DEBUG] 2020-02-28 15:05:36.990 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@42ec58ce
[DEBUG] 2020-02-28 15:05:36.990 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@42ec58ce
[DEBUG] 2020-02-28 15:05:36.991 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@31a4d07
[DEBUG] 2020-02-28 15:05:36.991 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@31a4d07
[DEBUG] 2020-02-28 15:05:36.991 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31a4d07
[DEBUG] 2020-02-28 15:05:36.992 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@704f507d
[DEBUG] 2020-02-28 15:05:36.992 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@704f507d
[DEBUG] 2020-02-28 15:05:36.992 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@704f507d
[DEBUG] 2020-02-28 15:05:36.993 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1a6d0cb4
[DEBUG] 2020-02-28 15:05:36.993 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1a6d0cb4
[DEBUG] 2020-02-28 15:05:36.993 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a6d0cb4
[DEBUG] 2020-02-28 15:05:36.994 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@506539c8
[DEBUG] 2020-02-28 15:05:36.994 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@506539c8
[DEBUG] 2020-02-28 15:05:36.994 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@506539c8
[DEBUG] 2020-02-28 15:05:36.996 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55d6ac0b
[DEBUG] 2020-02-28 15:05:36.996 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@55d6ac0b
[DEBUG] 2020-02-28 15:05:36.996 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55d6ac0b
[DEBUG] 2020-02-28 15:05:36.996 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@637543f8
[DEBUG] 2020-02-28 15:05:36.996 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@637543f8
[DEBUG] 2020-02-28 15:05:36.996 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@637543f8
[DEBUG] 2020-02-28 15:05:36.997 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74e5e618
[DEBUG] 2020-02-28 15:05:36.997 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74e5e618
[DEBUG] 2020-02-28 15:05:36.997 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67842dd5
[DEBUG] 2020-02-28 15:05:36.997 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67842dd5
[DEBUG] 2020-02-28 15:05:36.998 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@36026bf
[DEBUG] 2020-02-28 15:05:36.998 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@36026bf
[DEBUG] 2020-02-28 15:05:36.998 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d7821de
[DEBUG] 2020-02-28 15:05:36.998 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@875cf1f
[DEBUG] 2020-02-28 15:05:36.999 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@22b8fbe6
[DEBUG] 2020-02-28 15:05:36.999 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22b8fbe6
[DEBUG] 2020-02-28 15:05:36.999 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6a72a1b3
[DEBUG] 2020-02-28 15:05:36.999 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a72a1b3
[DEBUG] 2020-02-28 15:05:37.000 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2b0fd7b8
[DEBUG] 2020-02-28 15:05:37.000 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b0fd7b8
[DEBUG] 2020-02-28 15:05:37.001 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32952482
[DEBUG] 2020-02-28 15:05:37.001 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32952482
[DEBUG] 2020-02-28 15:05:37.001 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@740b8d78
[DEBUG] 2020-02-28 15:05:37.001 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@740b8d78
[DEBUG] 2020-02-28 15:05:37.002 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44d02e11
[DEBUG] 2020-02-28 15:05:37.002 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44d02e11
[DEBUG] 2020-02-28 15:05:37.003 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f18c2bf
[DEBUG] 2020-02-28 15:05:37.003 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f18c2bf
[DEBUG] 2020-02-28 15:05:37.003 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@31137ded
[DEBUG] 2020-02-28 15:05:37.004 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@31137ded
[DEBUG] 2020-02-28 15:05:37.005 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70fd9e55
[DEBUG] 2020-02-28 15:05:37.005 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70fd9e55
[DEBUG] 2020-02-28 15:05:37.006 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6551e2d
[DEBUG] 2020-02-28 15:05:37.007 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6551e2d
[DEBUG] 2020-02-28 15:05:37.007 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4ab5e4fd
[DEBUG] 2020-02-28 15:05:37.007 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ab5e4fd
[DEBUG] 2020-02-28 15:05:37.008 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@420033c1
[DEBUG] 2020-02-28 15:05:37.008 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@420033c1
[DEBUG] 2020-02-28 15:05:37.008 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@420033c1
[DEBUG] 2020-02-28 15:05:37.009 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6162140f
[DEBUG] 2020-02-28 15:05:37.010 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@77202610
[DEBUG] 2020-02-28 15:05:37.010 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77202610
[DEBUG] 2020-02-28 15:05:37.010 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77202610
[DEBUG] 2020-02-28 15:05:37.010 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@173d9aa8
[DEBUG] 2020-02-28 15:05:37.011 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4482a1c3
[DEBUG] 2020-02-28 15:05:37.011 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4482a1c3
[DEBUG] 2020-02-28 15:05:37.011 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3ac8f094
[DEBUG] 2020-02-28 15:05:37.011 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ac8f094
[DEBUG] 2020-02-28 15:05:37.012 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6daea22a
[DEBUG] 2020-02-28 15:05:37.012 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6daea22a
[DEBUG] 2020-02-28 15:05:37.012 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5c2113d4
[DEBUG] 2020-02-28 15:05:37.012 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5c2113d4
[DEBUG] 2020-02-28 15:05:37.013 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ba22f35
[DEBUG] 2020-02-28 15:05:37.013 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ba22f35
[DEBUG] 2020-02-28 15:05:37.013 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e1b2d2c
[DEBUG] 2020-02-28 15:05:37.014 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@39ebce10
[DEBUG] 2020-02-28 15:05:37.014 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@39ebce10
[DEBUG] 2020-02-28 15:05:37.014 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@39ebce10
[DEBUG] 2020-02-28 15:05:37.014 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@676bc095
[DEBUG] 2020-02-28 15:05:37.014 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@676bc095
[DEBUG] 2020-02-28 15:05:37.014 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@676bc095
[DEBUG] 2020-02-28 15:05:37.015 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@390d916
[DEBUG] 2020-02-28 15:05:37.015 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3704f523
[DEBUG] 2020-02-28 15:05:37.015 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@401c4ee1
[DEBUG] 2020-02-28 15:05:37.015 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@401c4ee1
[DEBUG] 2020-02-28 15:05:37.015 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@401c4ee1
[DEBUG] 2020-02-28 15:05:37.016 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4318a1f9
[DEBUG] 2020-02-28 15:05:37.016 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4318a1f9
[DEBUG] 2020-02-28 15:05:37.016 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4318a1f9
[DEBUG] 2020-02-28 15:05:37.016 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2ad8492f
[DEBUG] 2020-02-28 15:05:37.016 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@63f9744f
[DEBUG] 2020-02-28 15:05:37.018 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2efbb12
[DEBUG] 2020-02-28 15:05:37.018 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2efbb12
[DEBUG] 2020-02-28 15:05:37.019 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c6649ec
[DEBUG] 2020-02-28 15:05:37.020 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@51f869d4
[DEBUG] 2020-02-28 15:05:37.021 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51f869d4
[DEBUG] 2020-02-28 15:05:37.021 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67587386
[DEBUG] 2020-02-28 15:05:37.021 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67587386
[DEBUG] 2020-02-28 15:05:37.022 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46bc5990
[DEBUG] 2020-02-28 15:05:37.022 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e7092aa
[DEBUG] 2020-02-28 15:05:37.023 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@546e10e4
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@c1a9628
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c1a9628
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28e0fc26
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c5cea20
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b2dc092
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@47ac6762
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6802a27d
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13f458b7
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5698230b
[DEBUG] 2020-02-28 15:05:37.026 [http-nio-8080-exec-13] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@722bc9cd
[DEBUG] 2020-02-28 15:05:37.047 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:05:37.047 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:05:37.047 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:05:37.047 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:05:37.048 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:05:37.048 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:05:37.048 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:05:37.049 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:05:37.050 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:05:37.050 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:05:37.051 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:05:37.052 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:05:37.052 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:05:37.053 [http-nio-8080-exec-13] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:05:37.060 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:05:37.060 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:05:37.060 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:05:37.150 [http-nio-8080-exec-13] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:05:37.347 [http-nio-8080-exec-13] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:05:37.349 [http-nio-8080-exec-13] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:05:37.349 [http-nio-8080-exec-13] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:05:37.366 [http-nio-8080-exec-13] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:05:37.384 [http-nio-8080-exec-13] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:05:37.403 [http-nio-8080-exec-13] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:05:37.433 [http-nio-8080-exec-13] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:05:37.439 [http-nio-8080-exec-13] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29b53f56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@699a3416]
[DEBUG] 2020-02-28 15:05:37.479 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.510 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.513 [http-nio-8080-exec-13] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:05:37.515 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:05:37.539 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.541 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:05:37.544 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:05:37.545 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:05:37.547 [http-nio-8080-exec-13] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:05:37.549 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.550 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.550 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:05:37.550 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:05:37.552 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:05:37.552 [http-nio-8080-exec-13] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:05:37.553 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.554 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:05:37.554 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:05:37.554 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:05:37.554 [http-nio-8080-exec-13] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:05:37.556 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:05:37.557 [http-nio-8080-exec-13] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:05:37.559 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.560 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.562 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.578 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.579 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.579 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.579 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.579 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.580 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:05:37.582 [http-nio-8080-exec-13] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:05:37.582 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.583 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.583 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.583 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.584 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.585 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:05:37.586 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:05:37.586 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:05:37.586 [http-nio-8080-exec-13] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.587 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:05:37.588 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:05:37.588 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:05:37.588 [http-nio-8080-exec-13] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:05:37.588 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.588 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.588 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.589 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.589 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.589 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.590 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.590 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.590 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:05:37.590 [http-nio-8080-exec-13] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:05:37.590 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.590 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:05:37.591 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:05:37.592 [http-nio-8080-exec-13] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:05:37.592 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:05:37.592 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:05:37.592 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:05:37.593 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:05:37.594 [http-nio-8080-exec-13] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:05:37.599 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:05:37.600 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.600 [http-nio-8080-exec-13] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:05:37.601 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:05:37.605 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.605 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:05:37.605 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:05:37.605 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:05:37.605 [http-nio-8080-exec-13] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:05:37.605 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.606 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.606 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.606 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:05:37.606 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.606 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.614 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.614 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:05:37.614 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:05:37.614 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:05:37.614 [http-nio-8080-exec-13] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:05:37.615 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.615 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.616 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:05:37.616 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.616 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:05:37.616 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.616 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.620 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:05:37.621 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:05:37.623 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.623 [http-nio-8080-exec-13] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:05:37.623 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:05:37.625 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.625 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:05:37.625 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:05:37.626 [http-nio-8080-exec-13] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:05:37.627 [http-nio-8080-exec-13] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.628 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:05:37.629 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.632 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:05:37.633 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:05:37.636 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:05:37.638 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.638 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.639 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:05:37.639 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.639 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:05:37.640 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.640 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.640 [http-nio-8080-exec-13] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:05:37.640 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:05:37.642 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.642 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:05:37.642 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:05:37.642 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:05:37.642 [http-nio-8080-exec-13] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:05:37.642 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.643 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.643 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:05:37.643 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:05:37.643 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:05:37.643 [http-nio-8080-exec-13] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:05:37.643 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.644 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.644 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:05:37.644 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.644 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.644 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:05:37.645 [http-nio-8080-exec-13] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:05:37.646 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.647 [http-nio-8080-exec-13] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:05:37.648 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:05:37.652 [http-nio-8080-exec-13] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:05:37.653 [http-nio-8080-exec-13] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:05:37.654 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:05:37.656 [http-nio-8080-exec-13] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:05:37.659 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:05:37.660 [http-nio-8080-exec-13] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:05:37.661 [http-nio-8080-exec-13] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:05:37.661 [http-nio-8080-exec-13] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:05:37.662 [http-nio-8080-exec-13] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:05:37.667 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:05:37.668 [http-nio-8080-exec-13] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:05:37.669 [http-nio-8080-exec-13] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:05:37.670 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.671 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.671 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:37.672 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.672 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:37.672 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.672 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.672 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.675 [http-nio-8080-exec-13] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.717 [http-nio-8080-exec-13] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:05:37.718 [http-nio-8080-exec-13] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:05:37.766 [http-nio-8080-exec-13] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:05:37.788 [http-nio-8080-exec-13] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:05:37.788 [http-nio-8080-exec-13] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6a5698d6, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:05:37.806 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:05:37.806 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.807 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:05:37.808 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:05:37.808 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:05:37.808 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:05:37.808 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:05:37.809 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:37.809 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:05:37.809 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:05:37.809 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:05:37.809 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:37.811 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:05:37.811 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:37.813 [http-nio-8080-exec-13] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:05:37.815 [http-nio-8080-exec-13] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:05:37.815 [http-nio-8080-exec-13] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29b53f56] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b267913]
[DEBUG] 2020-02-28 15:05:37.848 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:05:37.848 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:37.855 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:05:37.855 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:38.049 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:05:38.049 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:05:38.049 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:05:38.049 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:05:38.061 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:05:38.061 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:05:38.062 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:05:38.062 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:05:38.071 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:05:38.071 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:38.071 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:05:38.071 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:38.080 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:05:38.081 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:05:38.081 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:05:38.081 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:05:38.105 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:05:38.105 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:38.106 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:05:38.106 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:38.145 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:05:38.145 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:38.145 [http-nio-8080-exec-13] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:05:38.145 [http-nio-8080-exec-13] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:38.166 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:05:38.167 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:05:38.172 [http-nio-8080-exec-13] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:05:38.176 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.197 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@465b1eb7]
[DEBUG] 2020-02-28 15:05:38.197 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.197 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.197 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:05:38.202 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e2f794b]
[DEBUG] 2020-02-28 15:05:38.203 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4649b2]
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6483907]
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3881a13f]
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.204 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f63dce6]
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@464669ea]
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a57ba93]
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.207 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aa219b6]
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd6ab53]
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:05:38.208 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fc631b4]
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f281986]
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.209 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5a3e9703]
[DEBUG] 2020-02-28 15:05:38.212 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.212 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.212 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.221 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.228 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57a8cca6]
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@298ef108]
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14e2a172]
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53e92b4]
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bad302f]
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f58ee3]
[DEBUG] 2020-02-28 15:05:38.230 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.231 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.231 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.231 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.231 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.231 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6547cf1b]
[DEBUG] 2020-02-28 15:05:38.231 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4749b7d4]
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e72bb48]
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ad3c]
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3aeb3709]
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37be2525]
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@40357ac1]
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.232 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.234 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.235 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:05:38.249 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:05:38.250 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d529eff]
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c21db45]
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a089d0a]
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ff208e]
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.251 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@666638a7]
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a459d4]
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1388732e]
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c7f272]
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5cf07501]
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.252 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.254 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.254 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:05:38.254 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eaf2701]
[DEBUG] 2020-02-28 15:05:38.254 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:05:38.254 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.255 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:05:38.255 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.255 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.255 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f52556]
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2083974d]
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@176063ad]
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@466e3b82]
[DEBUG] 2020-02-28 15:05:38.256 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@284f95ad]
[DEBUG] 2020-02-28 15:05:38.257 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:05:38.257 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:05:38.257 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.257 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37a6bb84]
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6390b220]
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.258 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@252cb2b2]
[DEBUG] 2020-02-28 15:05:38.259 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.259 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.259 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.259 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.259 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eff88db]
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e1bc05]
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5de8ee7a]
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@440d85dd]
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@519908cd]
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56adade1]
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.260 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cac1270]
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64275555]
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d61f67c]
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0b2bb5]
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.261 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46f884bd]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77f3837c]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16f5178]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@330e084]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75260e34]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ea58b8f]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@653afdb2]
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.262 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@610a0551]
[DEBUG] 2020-02-28 15:05:38.263 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.263 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.263 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.264 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.264 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:05:38.265 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:05:38.265 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d3fe15]
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15a7ff5a]
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76dbd2a4]
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.266 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.267 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.268 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:05:38.268 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:05:38.268 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f71a93c]
[DEBUG] 2020-02-28 15:05:38.268 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4316994d]
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bf02d79]
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.269 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.270 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.270 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:05:38.270 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:05:38.271 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:05:38.271 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ba4172]
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.272 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@826f7ca]
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@292de4ab]
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@389d3d74]
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ba150a]
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f108a7]
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f3fb78e]
[DEBUG] 2020-02-28 15:05:38.273 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e184f80]
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a59dbfe]
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.274 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@571545d1]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f76e2b2]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b833ec7]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ce7b4e]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a2568d7]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22083cd2]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@508f5b52]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31fa4e06]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@495a3bb8]
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.275 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.276 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.276 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.279 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:05:38.279 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:05:38.279 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:05:38.279 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d052998]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b3bb2db]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0b3fc9]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b068e59]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e70ceef]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28bb1090]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e988739]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3913ada5]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30854f1]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1fd08277]
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.280 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.283 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12239787]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@489515da]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35420c8a]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bd33a0a]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7155108]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@674eaff5]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@424dd9ca]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fff17ae]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73501612]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@76fe933b]
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.284 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.285 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:05:38.285 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:05:38.287 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:05:38.287 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:05:38.288 [http-nio-8080-exec-13] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7809457d]
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55620eb3]
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5eafb7]
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.289 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cce3fac]
[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:05:38.290 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ae90afd]
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51c12500]
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:05:38.292 [http-nio-8080-exec-13] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:05:38.295 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c7e7c43]
[DEBUG] 2020-02-28 15:05:38.295 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183fc0ac]
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.296 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a769dba]
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25adf921]
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.298 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f412c3c]
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45efb804]
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.299 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.300 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:05:38.300 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:05:38.300 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3ca02d]
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ab1476]
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44f7b903]
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a011d4f]
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.301 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3361fdc3]
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f7bd781]
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d224644]
[DEBUG] 2020-02-28 15:05:38.302 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@719125c6]
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8f30e9]
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c693b06]
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63265aa9]
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1b61ec1e]
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.303 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.304 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c1f3019]
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f45e047]
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e55beb]
[DEBUG] 2020-02-28 15:05:38.306 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3692c4a8]
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.307 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b78b8f7]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3da8b696]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dbf820f]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@138e2e4f]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76bf3db2]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@edb39f5]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f157ddb]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d8bca20]
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.308 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5595b1b0]
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@112af57c]
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:05:38.309 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9827e90]
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc5ebc9]
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b229df6]
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b59b8f8]
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5742abce]
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111a57a6]
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:05:38.310 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e1f8cf3]
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b50fbd]
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:05:38.313 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:05:38.314 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:05:38.315 [http-nio-8080-exec-13] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:05:38.315 [http-nio-8080-exec-13] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:05:38.315 [http-nio-8080-exec-13] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:05:38.315 [http-nio-8080-exec-13] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:05:38.316 [http-nio-8080-exec-13] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:05:38.316 [http-nio-8080-exec-13] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:05:38.354 [http-nio-8080-exec-13] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:05:38.354 [http-nio-8080-exec-13] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:05:38.354 [http-nio-8080-exec-13] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:05:38.363 [http-nio-8080-exec-13] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:05:38.363 [http-nio-8080-exec-13] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:05:38.364 [http-nio-8080-exec-13] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:05:38.364 [http-nio-8080-exec-13] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:05:38.365 [http-nio-8080-exec-13] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@240261e7
[DEBUG] 2020-02-28 15:05:38.366 [http-nio-8080-exec-13] SessionFactoryRegistry - Registering SessionFactory: 85f77035-4b3e-4bdb-bfbc-6c5617a02ef4 (<unnamed>)
[DEBUG] 2020-02-28 15:05:38.366 [http-nio-8080-exec-13] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:05:38.424 [http-nio-8080-exec-13] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:05:38.449 [http-nio-8080-exec-13] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:05:38.497 [http-nio-8080-exec-13] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2eae1c11
[DEBUG] 2020-02-28 15:05:38.518 [http-nio-8080-exec-13] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:05:38.522 [http-nio-8080-exec-13] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:05:38.527 [http-nio-8080-exec-13] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:05:38.546 [http-nio-8080-exec-13] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:05:38.556 [http-nio-8080-exec-13] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:05:38.556 [http-nio-8080-exec-13] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:05:38.558 [http-nio-8080-exec-13] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:05:38.558 [http-nio-8080-exec-13] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:05:38.564 [http-nio-8080-exec-13] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:05:38.564 [http-nio-8080-exec-13] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:05:38.565 [http-nio-8080-exec-13] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:05:38.565 [http-nio-8080-exec-13] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:05:38.573 [http-nio-8080-exec-13] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:05:38.573 [http-nio-8080-exec-13] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:05:38.573 [http-nio-8080-exec-13] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:05:38.584 [http-nio-8080-exec-13] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:05:38.606 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:05:38.609 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:05:38.615 [http-nio-8080-exec-13] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:05:38.615 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:05:38.616 [http-nio-8080-exec-13] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:05:38.616 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:05:38.616 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:05:38.617 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.619 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:05:38.623 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:05:38.625 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:05:38.628 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:05:38.633 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@594c3e02
[DEBUG] 2020-02-28 15:05:38.634 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:05:38.635 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.636 [http-nio-8080-exec-13] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:05:38.636 [http-nio-8080-exec-13] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:05:38.639 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:05:38.640 [http-nio-8080-exec-13] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:05:38.640 [http-nio-8080-exec-13] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:05:38.640 [http-nio-8080-exec-13] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:05:38.640 [http-nio-8080-exec-13] Loader - Done entity load
[DEBUG] 2020-02-28 15:05:38.640 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:05:38.640 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:05:38.641 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:05:38.641 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:05:38.641 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:05:38.642 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.643 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:05:38.643 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.643 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:05:38.643 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:05:38.643 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:05:38.645 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:11:07.929 [http-nio-8080-exec-24] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:11:07.931 [http-nio-8080-exec-24] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:11:07.935 [http-nio-8080-exec-24] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:11:08.018 [http-nio-8080-exec-24] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:11:08.020 [http-nio-8080-exec-24] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:11:08.131 [http-nio-8080-exec-24] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:11:08.132 [http-nio-8080-exec-24] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:11:08.136 [http-nio-8080-exec-24] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:11:08.325 [http-nio-8080-exec-24] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:11:08.345 [http-nio-8080-exec-24] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:11:08.346 [http-nio-8080-exec-24] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:11:08.367 [http-nio-8080-exec-24] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:11:08.424 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3507a15d
[DEBUG] 2020-02-28 15:11:08.424 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3507a15d
[DEBUG] 2020-02-28 15:11:08.424 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3507a15d
[DEBUG] 2020-02-28 15:11:08.424 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@107b1759
[DEBUG] 2020-02-28 15:11:08.425 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c7430a2
[DEBUG] 2020-02-28 15:11:08.425 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5e74ded7
[DEBUG] 2020-02-28 15:11:08.426 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19c7a7b7
[DEBUG] 2020-02-28 15:11:08.426 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19c7a7b7
[DEBUG] 2020-02-28 15:11:08.426 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19c7a7b7
[DEBUG] 2020-02-28 15:11:08.449 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1b945bd4
[DEBUG] 2020-02-28 15:11:08.450 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1b945bd4
[DEBUG] 2020-02-28 15:11:08.450 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b945bd4
[DEBUG] 2020-02-28 15:11:08.451 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@139eba8f
[DEBUG] 2020-02-28 15:11:08.451 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@139eba8f
[DEBUG] 2020-02-28 15:11:08.451 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@139eba8f
[DEBUG] 2020-02-28 15:11:08.451 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@65b8df0a
[DEBUG] 2020-02-28 15:11:08.451 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@65b8df0a
[DEBUG] 2020-02-28 15:11:08.451 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65b8df0a
[DEBUG] 2020-02-28 15:11:08.456 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7515d84a
[DEBUG] 2020-02-28 15:11:08.456 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7515d84a
[DEBUG] 2020-02-28 15:11:08.456 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7515d84a
[DEBUG] 2020-02-28 15:11:08.458 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@10ec29ed
[DEBUG] 2020-02-28 15:11:08.458 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@10ec29ed
[DEBUG] 2020-02-28 15:11:08.458 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10ec29ed
[DEBUG] 2020-02-28 15:11:08.460 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5a4d0f4e
[DEBUG] 2020-02-28 15:11:08.460 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5a4d0f4e
[DEBUG] 2020-02-28 15:11:08.463 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a4d0f4e
[DEBUG] 2020-02-28 15:11:08.466 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2da02560
[DEBUG] 2020-02-28 15:11:08.466 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2da02560
[DEBUG] 2020-02-28 15:11:08.467 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d47e433
[DEBUG] 2020-02-28 15:11:08.467 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d47e433
[DEBUG] 2020-02-28 15:11:08.468 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@513e54da
[DEBUG] 2020-02-28 15:11:08.468 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@513e54da
[DEBUG] 2020-02-28 15:11:08.469 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22d7c0d8
[DEBUG] 2020-02-28 15:11:08.469 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@761fb2e6
[DEBUG] 2020-02-28 15:11:08.469 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5e7ddfc
[DEBUG] 2020-02-28 15:11:08.469 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e7ddfc
[DEBUG] 2020-02-28 15:11:08.474 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@56bc526b
[DEBUG] 2020-02-28 15:11:08.474 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@56bc526b
[DEBUG] 2020-02-28 15:11:08.475 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3215f429
[DEBUG] 2020-02-28 15:11:08.475 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3215f429
[DEBUG] 2020-02-28 15:11:08.478 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4cebb552
[DEBUG] 2020-02-28 15:11:08.478 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4cebb552
[DEBUG] 2020-02-28 15:11:08.478 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@12f11673
[DEBUG] 2020-02-28 15:11:08.478 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@12f11673
[DEBUG] 2020-02-28 15:11:08.479 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b660161
[DEBUG] 2020-02-28 15:11:08.479 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b660161
[DEBUG] 2020-02-28 15:11:08.480 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e1d1a6d
[DEBUG] 2020-02-28 15:11:08.480 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e1d1a6d
[DEBUG] 2020-02-28 15:11:08.482 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69eecf52
[DEBUG] 2020-02-28 15:11:08.487 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69eecf52
[DEBUG] 2020-02-28 15:11:08.488 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5fda31aa
[DEBUG] 2020-02-28 15:11:08.488 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5fda31aa
[DEBUG] 2020-02-28 15:11:08.489 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@43f7c43d
[DEBUG] 2020-02-28 15:11:08.489 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43f7c43d
[DEBUG] 2020-02-28 15:11:08.491 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723d911d
[DEBUG] 2020-02-28 15:11:08.491 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723d911d
[DEBUG] 2020-02-28 15:11:08.499 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5a5dab86
[DEBUG] 2020-02-28 15:11:08.499 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5a5dab86
[DEBUG] 2020-02-28 15:11:08.499 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5a5dab86
[DEBUG] 2020-02-28 15:11:08.501 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1af5d97
[DEBUG] 2020-02-28 15:11:08.501 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@112d6beb
[DEBUG] 2020-02-28 15:11:08.501 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@112d6beb
[DEBUG] 2020-02-28 15:11:08.502 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@112d6beb
[DEBUG] 2020-02-28 15:11:08.503 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23331e32
[DEBUG] 2020-02-28 15:11:08.504 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@27969c33
[DEBUG] 2020-02-28 15:11:08.504 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27969c33
[DEBUG] 2020-02-28 15:11:08.505 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3adf4928
[DEBUG] 2020-02-28 15:11:08.505 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3adf4928
[DEBUG] 2020-02-28 15:11:08.505 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fe9f5d5
[DEBUG] 2020-02-28 15:11:08.505 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fe9f5d5
[DEBUG] 2020-02-28 15:11:08.506 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3690cbce
[DEBUG] 2020-02-28 15:11:08.506 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3690cbce
[DEBUG] 2020-02-28 15:11:08.506 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26553194
[DEBUG] 2020-02-28 15:11:08.506 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26553194
[DEBUG] 2020-02-28 15:11:08.506 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51881f03
[DEBUG] 2020-02-28 15:11:08.507 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2889ed71
[DEBUG] 2020-02-28 15:11:08.507 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2889ed71
[DEBUG] 2020-02-28 15:11:08.507 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2889ed71
[DEBUG] 2020-02-28 15:11:08.507 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7d8a0069
[DEBUG] 2020-02-28 15:11:08.507 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7d8a0069
[DEBUG] 2020-02-28 15:11:08.507 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7d8a0069
[DEBUG] 2020-02-28 15:11:08.511 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@71d99d71
[DEBUG] 2020-02-28 15:11:08.511 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1e2c6093
[DEBUG] 2020-02-28 15:11:08.512 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6055491
[DEBUG] 2020-02-28 15:11:08.512 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6055491
[DEBUG] 2020-02-28 15:11:08.512 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6055491
[DEBUG] 2020-02-28 15:11:08.513 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15dd18b8
[DEBUG] 2020-02-28 15:11:08.513 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15dd18b8
[DEBUG] 2020-02-28 15:11:08.516 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15dd18b8
[DEBUG] 2020-02-28 15:11:08.516 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1dfbfc39
[DEBUG] 2020-02-28 15:11:08.517 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4c261b48
[DEBUG] 2020-02-28 15:11:08.518 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@50325c0a
[DEBUG] 2020-02-28 15:11:08.518 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50325c0a
[DEBUG] 2020-02-28 15:11:08.518 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7efdd3e7
[DEBUG] 2020-02-28 15:11:08.519 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2ca0b30c
[DEBUG] 2020-02-28 15:11:08.519 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ca0b30c
[DEBUG] 2020-02-28 15:11:08.519 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4c70bf2a
[DEBUG] 2020-02-28 15:11:08.519 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c70bf2a
[DEBUG] 2020-02-28 15:11:08.519 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1993d947
[DEBUG] 2020-02-28 15:11:08.520 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@23d79ab9
[DEBUG] 2020-02-28 15:11:08.521 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@24d86b46
[DEBUG] 2020-02-28 15:11:08.531 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@86ec051
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@86ec051
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@65a8fa74
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f6b0bd7
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4ffb53d2
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@264053a
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@203d3458
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@577fa63b
[DEBUG] 2020-02-28 15:11:08.532 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@428f1ac5
[DEBUG] 2020-02-28 15:11:08.533 [http-nio-8080-exec-24] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@60608a7b
[DEBUG] 2020-02-28 15:11:08.561 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:11:08.561 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:11:08.561 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:11:08.563 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:11:08.564 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:11:08.565 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:11:08.565 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:11:08.566 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:11:08.567 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:11:08.567 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:11:08.568 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:11:08.568 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:11:08.568 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:11:08.569 [http-nio-8080-exec-24] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:11:08.574 [http-nio-8080-exec-24] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:11:08.574 [http-nio-8080-exec-24] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:11:08.574 [http-nio-8080-exec-24] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:11:08.735 [http-nio-8080-exec-24] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:11:08.975 [http-nio-8080-exec-24] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:11:08.977 [http-nio-8080-exec-24] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:11:08.977 [http-nio-8080-exec-24] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:11:09.002 [http-nio-8080-exec-24] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:11:09.020 [http-nio-8080-exec-24] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:11:09.062 [http-nio-8080-exec-24] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:11:09.104 [http-nio-8080-exec-24] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:11:09.109 [http-nio-8080-exec-24] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f12453b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19555758]
[DEBUG] 2020-02-28 15:11:09.214 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.236 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.243 [http-nio-8080-exec-24] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:11:09.254 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:11:09.281 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.285 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:11:09.287 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:11:09.288 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:11:09.290 [http-nio-8080-exec-24] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:11:09.293 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.295 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.296 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:11:09.296 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:11:09.298 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:11:09.298 [http-nio-8080-exec-24] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:11:09.299 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.300 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:11:09.300 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:11:09.300 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:11:09.300 [http-nio-8080-exec-24] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:11:09.302 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:11:09.302 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:11:09.303 [http-nio-8080-exec-24] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:11:09.304 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.308 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.309 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.317 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.317 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.318 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.319 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.319 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.320 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:11:09.323 [http-nio-8080-exec-24] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:11:09.323 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.325 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.325 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.325 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:11:09.326 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.327 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:11:09.327 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:11:09.327 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:11:09.327 [http-nio-8080-exec-24] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.328 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.329 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.330 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.330 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.331 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:09.331 [http-nio-8080-exec-24] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:11:09.331 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.331 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.331 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.331 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:11:09.332 [http-nio-8080-exec-24] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:11:09.334 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:11:09.334 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.334 [http-nio-8080-exec-24] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:11:09.334 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:11:09.336 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.336 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:11:09.336 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:11:09.336 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:11:09.336 [http-nio-8080-exec-24] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:11:09.337 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.337 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.337 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.337 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:11:09.337 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.337 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.342 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.343 [http-nio-8080-exec-24] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:11:09.344 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.344 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.346 [http-nio-8080-exec-24] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:11:09.346 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:11:09.347 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.347 [http-nio-8080-exec-24] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:11:09.347 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:11:09.348 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.348 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:11:09.348 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:11:09.348 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:11:09.349 [http-nio-8080-exec-24] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:11:09.350 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:11:09.351 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:11:09.353 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:11:09.354 [http-nio-8080-exec-24] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:11:09.355 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:11:09.356 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.356 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:11:09.356 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:11:09.357 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:11:09.357 [http-nio-8080-exec-24] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.358 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.359 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.359 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.359 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.359 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:11:09.360 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:11:09.361 [http-nio-8080-exec-24] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:11:09.361 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.361 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:11:09.361 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:11:09.361 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:11:09.361 [http-nio-8080-exec-24] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:11:09.362 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.363 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:11:09.364 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:11:09.365 [http-nio-8080-exec-24] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:11:09.365 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:11:09.365 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.365 [http-nio-8080-exec-24] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:11:09.365 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:11:09.366 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.366 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:11:09.366 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:11:09.366 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:11:09.366 [http-nio-8080-exec-24] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:11:09.366 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:11:09.367 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:11:09.368 [http-nio-8080-exec-24] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:11:09.369 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.370 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.371 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:11:09.372 [http-nio-8080-exec-24] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:11:09.373 [http-nio-8080-exec-24] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:11:09.373 [http-nio-8080-exec-24] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:11:09.373 [http-nio-8080-exec-24] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:11:09.373 [http-nio-8080-exec-24] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:11:09.374 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:11:09.375 [http-nio-8080-exec-24] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:11:09.379 [http-nio-8080-exec-24] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:11:09.380 [http-nio-8080-exec-24] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:11:09.384 [http-nio-8080-exec-24] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:11:09.385 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:11:09.386 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.387 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.387 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:09.387 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.387 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:09.387 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.387 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.388 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.389 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:11:09.389 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.390 [http-nio-8080-exec-24] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.442 [http-nio-8080-exec-24] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:11:09.443 [http-nio-8080-exec-24] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:11:09.444 [http-nio-8080-exec-24] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:11:09.498 [http-nio-8080-exec-24] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:11:09.523 [http-nio-8080-exec-24] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:11:09.523 [http-nio-8080-exec-24] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48b37e7d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:11:09.541 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:11:09.541 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.547 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:11:09.547 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:11:09.548 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:11:09.548 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:11:09.549 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:11:09.549 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:09.549 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:11:09.549 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:11:09.550 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:11:09.550 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.551 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:11:09.551 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:09.556 [http-nio-8080-exec-24] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:11:09.556 [http-nio-8080-exec-24] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:11:09.557 [http-nio-8080-exec-24] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f12453b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e47749f]
[DEBUG] 2020-02-28 15:11:09.596 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:11:09.597 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.607 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:11:09.607 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.809 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:11:09.809 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:11:09.810 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:11:09.810 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:11:09.823 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:11:09.823 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:11:09.823 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:11:09.823 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:11:09.846 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:11:09.846 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:09.846 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:11:09.846 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:09.859 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:11:09.860 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:11:09.860 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:11:09.864 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:11:09.888 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:11:09.888 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.891 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:11:09.891 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:09.921 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:11:09.921 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:09.921 [http-nio-8080-exec-24] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:11:09.922 [http-nio-8080-exec-24] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:09.939 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:11:09.941 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:11:09.942 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:11:09.942 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:11:09.942 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:11:09.942 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:11:09.942 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:11:09.944 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:11:09.944 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:11:09.944 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:11:09.944 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:11:09.944 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:11:09.945 [http-nio-8080-exec-24] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:11:09.949 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:09.967 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619a0038]
[DEBUG] 2020-02-28 15:11:09.968 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:09.968 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:09.968 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:11:09.971 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6db2804a]
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb3deca]
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45748cce]
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f5590a]
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:09.972 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437b847a]
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4838db64]
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f33016d]
[DEBUG] 2020-02-28 15:11:09.973 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:09.974 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:09.975 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53109986]
[DEBUG] 2020-02-28 15:11:09.975 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34cfc2e0]
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:09.977 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b41a99f]
[DEBUG] 2020-02-28 15:11:09.978 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a33e9e]
[DEBUG] 2020-02-28 15:11:09.978 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:09.978 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:09.978 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:09.979 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@83d56f5]
[DEBUG] 2020-02-28 15:11:09.984 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:09.986 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:09.990 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.020 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.049 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.055 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:11:10.055 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@617734ed]
[DEBUG] 2020-02-28 15:11:10.055 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.055 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ecd5c90]
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106b28cc]
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4863b670]
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d99f98]
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c146fcf]
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5075f531]
[DEBUG] 2020-02-28 15:11:10.056 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b485f8]
[DEBUG] 2020-02-28 15:11:10.060 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.066 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:11:10.067 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.067 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.067 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.067 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.067 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.067 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bb1eeb6]
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e5ac052]
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:11:10.068 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65622c91]
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6db2383f]
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7f7d89e]
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.069 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.072 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.072 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:11:10.104 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bdab31b]
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11212c34]
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72b39f4b]
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d4d1f76]
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.105 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1515c267]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64d60518]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@549f6ee0]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@355fae]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67af141]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5218f1f5]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295b0a80]
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.106 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ac6b5c7]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12751d1c]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@630b0ad8]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fb7c05c]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6191c847]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30755109]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@510378df]
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.107 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:11:10.108 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:11:10.108 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:11:10.139 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e089ce9]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee02eea]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fe815b]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fb754df]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@302fbabd]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@772a6f9e]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32adc79]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be616f]
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.140 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b09d957]
[DEBUG] 2020-02-28 15:11:10.141 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.141 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.141 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.141 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.141 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:11:10.141 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a67d9a5]
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae1d95d]
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@794a976f]
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0d2153]
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49e23a9e]
[DEBUG] 2020-02-28 15:11:10.142 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@124120de]
[DEBUG] 2020-02-28 15:11:10.143 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.143 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f9d2c16]
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bfe850f]
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3106224]
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.147 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.149 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.150 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.150 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:11:10.150 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:11:10.150 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e6787db]
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@611feab0]
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e86356e]
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2d203a]
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66dcae1c]
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@495edaec]
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.151 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.153 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c770f0d]
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e255a6]
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@382f197c]
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b0cdd5]
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@449ee3a0]
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6173b7]
[DEBUG] 2020-02-28 15:11:10.154 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bc56b5e]
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48b8dd96]
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1b8b9360]
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b41b126]
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@135b7b17]
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.155 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2db346a3]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1f96ba]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56d4c5ad]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3519876e]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2285930]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e0a589]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@29931fde]
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.156 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.160 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:11:10.160 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@136062cf]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a263fde]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475db979]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57bbcd47]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69fb8980]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24883ae]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f474ef]
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:11:10.161 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52bddba7]
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59e59e13]
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1a205e31]
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.162 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.165 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ce837b]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c678935]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41648543]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7404134f]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342841a8]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24964839]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@413d8f75]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75650fac]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588e6052]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7644ddf7]
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.169 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.173 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.174 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:11:10.174 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:11:10.174 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:11:10.174 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55a5030a]
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62041ea4]
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f2b6ad]
[DEBUG] 2020-02-28 15:11:10.177 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:11:10.184 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38b2404a]
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f193ad9]
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f0eb049]
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:11:10.185 [http-nio-8080-exec-24] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:11:10.186 [http-nio-8080-exec-24] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70da9a18]
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e9c41e6]
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.189 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:11:10.190 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.190 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.191 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.191 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@709ca102]
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a820cc1]
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.192 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.193 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1203f9bc]
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87d0b39]
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2875a18b]
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48b1537f]
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:11:10.200 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eb4ddd1]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5c43d3]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d561a0]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b03540]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82ca69e]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14e80e5a]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b1ddd7e]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cd0f368]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3125a63a]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@656be49a]
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.201 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.202 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.203 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c37be06]
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219f576b]
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31a71c88]
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5821d8]
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.204 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b1ef65]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76383d56]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dc594a8]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17c592b2]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b2d4fb]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e578416]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4639a0]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4ad6cf8]
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.206 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.207 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:11:10.207 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:11:10.208 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19d22bd2]
[DEBUG] 2020-02-28 15:11:10.208 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17578a71]
[DEBUG] 2020-02-28 15:11:10.208 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:11:10.208 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:11:10.210 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@205d1d9c]
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b720fe4]
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:11:10.211 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:11:10.212 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:11:10.213 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.213 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4da7352b]
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b11e54]
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:11:10.214 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78ff725f]
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@266280aa]
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b17cbe4]
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f329b57]
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:11:10.215 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:11:10.216 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:11:10.216 [http-nio-8080-exec-24] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:11:10.216 [http-nio-8080-exec-24] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:11:10.216 [http-nio-8080-exec-24] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:11:10.216 [http-nio-8080-exec-24] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:11:10.217 [http-nio-8080-exec-24] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:11:10.217 [http-nio-8080-exec-24] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:11:10.247 [http-nio-8080-exec-24] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:11:10.247 [http-nio-8080-exec-24] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:11:10.247 [http-nio-8080-exec-24] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:11:10.253 [http-nio-8080-exec-24] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:11:10.253 [http-nio-8080-exec-24] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:11:10.253 [http-nio-8080-exec-24] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:11:10.253 [http-nio-8080-exec-24] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:11:10.254 [http-nio-8080-exec-24] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@40e79443
[DEBUG] 2020-02-28 15:11:10.255 [http-nio-8080-exec-24] SessionFactoryRegistry - Registering SessionFactory: 90507198-bbb9-4f85-814e-53aacc419028 (<unnamed>)
[DEBUG] 2020-02-28 15:11:10.255 [http-nio-8080-exec-24] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:11:10.311 [http-nio-8080-exec-24] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:11:10.330 [http-nio-8080-exec-24] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:11:10.343 [http-nio-8080-exec-24] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@48c7851
[DEBUG] 2020-02-28 15:11:10.360 [http-nio-8080-exec-24] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:11:10.366 [http-nio-8080-exec-24] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:11:10.369 [http-nio-8080-exec-24] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:11:10.386 [http-nio-8080-exec-24] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:11:10.399 [http-nio-8080-exec-24] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:11:10.400 [http-nio-8080-exec-24] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:11:10.400 [http-nio-8080-exec-24] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:11:10.401 [http-nio-8080-exec-24] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:11:10.406 [http-nio-8080-exec-24] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:11:10.406 [http-nio-8080-exec-24] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:11:10.406 [http-nio-8080-exec-24] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:11:10.406 [http-nio-8080-exec-24] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:11:10.411 [http-nio-8080-exec-24] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:11:10.411 [http-nio-8080-exec-24] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:11:10.411 [http-nio-8080-exec-24] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:11:10.421 [http-nio-8080-exec-24] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:11:10.443 [http-nio-8080-exec-24] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:11:10.445 [http-nio-8080-exec-24] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:11:10.451 [http-nio-8080-exec-24] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:11:10.451 [http-nio-8080-exec-24] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:11:10.451 [http-nio-8080-exec-24] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:11:10.452 [http-nio-8080-exec-24] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:11:10.452 [http-nio-8080-exec-24] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:11:10.453 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.455 [http-nio-8080-exec-24] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:11:10.459 [http-nio-8080-exec-24] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:11:10.460 [http-nio-8080-exec-24] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:11:10.464 [http-nio-8080-exec-24] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:11:10.470 [http-nio-8080-exec-24] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:10.471 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.476 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:10.476 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5e89b42e
[DEBUG] 2020-02-28 15:11:10.477 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:11:10.478 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.480 [http-nio-8080-exec-24] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:11:10.480 [http-nio-8080-exec-24] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:11:10.483 [http-nio-8080-exec-24] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:11:10.483 [http-nio-8080-exec-24] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:11:10.483 [http-nio-8080-exec-24] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:11:10.484 [http-nio-8080-exec-24] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:10.484 [http-nio-8080-exec-24] Loader - Done entity load
[DEBUG] 2020-02-28 15:11:10.486 [http-nio-8080-exec-24] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:11:10.486 [http-nio-8080-exec-24] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:10.486 [http-nio-8080-exec-24] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:11:10.486 [http-nio-8080-exec-24] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:10.486 [http-nio-8080-exec-24] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:10.487 [http-nio-8080-exec-24] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:11:10.488 [http-nio-8080-exec-24] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:11:12.503 [http-nio-8080-exec-37] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:11:12.503 [http-nio-8080-exec-37] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:11:12.505 [http-nio-8080-exec-37] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:11:12.505 [http-nio-8080-exec-37] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:11:12.505 [http-nio-8080-exec-37] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:11:12.505 [http-nio-8080-exec-37] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:11:12.505 [http-nio-8080-exec-37] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.506 [http-nio-8080-exec-37] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:11:12.507 [http-nio-8080-exec-37] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:11:12.507 [http-nio-8080-exec-37] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:11:12.509 [http-nio-8080-exec-37] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1aefe87
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:11:12.510 [http-nio-8080-exec-37] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:11:12.512 [http-nio-8080-exec-37] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] Loader - Done entity load
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.513 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:11:12.514 [http-nio-8080-exec-37] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:18:54.849 [http-nio-8080-exec-42] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:18:54.850 [http-nio-8080-exec-42] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:18:54.852 [http-nio-8080-exec-42] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:18:54.917 [http-nio-8080-exec-42] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:18:54.918 [http-nio-8080-exec-42] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:18:55.025 [http-nio-8080-exec-42] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:18:55.026 [http-nio-8080-exec-42] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:18:55.030 [http-nio-8080-exec-42] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:18:55.220 [http-nio-8080-exec-42] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:18:55.237 [http-nio-8080-exec-42] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:18:55.238 [http-nio-8080-exec-42] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:18:55.252 [http-nio-8080-exec-42] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:18:55.279 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7d91fb81
[DEBUG] 2020-02-28 15:18:55.279 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7d91fb81
[DEBUG] 2020-02-28 15:18:55.280 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d91fb81
[DEBUG] 2020-02-28 15:18:55.280 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@453dc5cf
[DEBUG] 2020-02-28 15:18:55.280 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1f750376
[DEBUG] 2020-02-28 15:18:55.281 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@10354cb7
[DEBUG] 2020-02-28 15:18:55.282 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4ab3a4f1
[DEBUG] 2020-02-28 15:18:55.282 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4ab3a4f1
[DEBUG] 2020-02-28 15:18:55.282 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ab3a4f1
[DEBUG] 2020-02-28 15:18:55.283 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@37210bae
[DEBUG] 2020-02-28 15:18:55.283 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@37210bae
[DEBUG] 2020-02-28 15:18:55.283 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37210bae
[DEBUG] 2020-02-28 15:18:55.284 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6788b569
[DEBUG] 2020-02-28 15:18:55.284 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6788b569
[DEBUG] 2020-02-28 15:18:55.284 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6788b569
[DEBUG] 2020-02-28 15:18:55.284 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2d207643
[DEBUG] 2020-02-28 15:18:55.284 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2d207643
[DEBUG] 2020-02-28 15:18:55.284 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d207643
[DEBUG] 2020-02-28 15:18:55.285 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7ffc0245
[DEBUG] 2020-02-28 15:18:55.285 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7ffc0245
[DEBUG] 2020-02-28 15:18:55.285 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ffc0245
[DEBUG] 2020-02-28 15:18:55.286 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3becd3cf
[DEBUG] 2020-02-28 15:18:55.286 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3becd3cf
[DEBUG] 2020-02-28 15:18:55.286 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3becd3cf
[DEBUG] 2020-02-28 15:18:55.286 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@19e80564
[DEBUG] 2020-02-28 15:18:55.286 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@19e80564
[DEBUG] 2020-02-28 15:18:55.286 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19e80564
[DEBUG] 2020-02-28 15:18:55.287 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a9bcebf
[DEBUG] 2020-02-28 15:18:55.287 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a9bcebf
[DEBUG] 2020-02-28 15:18:55.287 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@59994f9a
[DEBUG] 2020-02-28 15:18:55.287 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@59994f9a
[DEBUG] 2020-02-28 15:18:55.288 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2426ac5f
[DEBUG] 2020-02-28 15:18:55.288 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2426ac5f
[DEBUG] 2020-02-28 15:18:55.288 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ae96598
[DEBUG] 2020-02-28 15:18:55.288 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@78ad3d90
[DEBUG] 2020-02-28 15:18:55.289 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4893c8e7
[DEBUG] 2020-02-28 15:18:55.289 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4893c8e7
[DEBUG] 2020-02-28 15:18:55.289 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d8bc33b
[DEBUG] 2020-02-28 15:18:55.289 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d8bc33b
[DEBUG] 2020-02-28 15:18:55.291 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@49ed39e7
[DEBUG] 2020-02-28 15:18:55.291 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@49ed39e7
[DEBUG] 2020-02-28 15:18:55.293 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@247046a4
[DEBUG] 2020-02-28 15:18:55.293 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@247046a4
[DEBUG] 2020-02-28 15:18:55.294 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46aa1c75
[DEBUG] 2020-02-28 15:18:55.294 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46aa1c75
[DEBUG] 2020-02-28 15:18:55.295 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6cf83450
[DEBUG] 2020-02-28 15:18:55.295 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6cf83450
[DEBUG] 2020-02-28 15:18:55.296 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46a7d4e4
[DEBUG] 2020-02-28 15:18:55.296 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46a7d4e4
[DEBUG] 2020-02-28 15:18:55.296 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@66e04b74
[DEBUG] 2020-02-28 15:18:55.297 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@66e04b74
[DEBUG] 2020-02-28 15:18:55.298 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f86d2c2
[DEBUG] 2020-02-28 15:18:55.298 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f86d2c2
[DEBUG] 2020-02-28 15:18:55.299 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3bbfda41
[DEBUG] 2020-02-28 15:18:55.299 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3bbfda41
[DEBUG] 2020-02-28 15:18:55.300 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2571c6a8
[DEBUG] 2020-02-28 15:18:55.300 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2571c6a8
[DEBUG] 2020-02-28 15:18:55.300 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45d77623
[DEBUG] 2020-02-28 15:18:55.300 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45d77623
[DEBUG] 2020-02-28 15:18:55.300 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45d77623
[DEBUG] 2020-02-28 15:18:55.301 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@11840169
[DEBUG] 2020-02-28 15:18:55.302 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3b88f6e0
[DEBUG] 2020-02-28 15:18:55.302 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b88f6e0
[DEBUG] 2020-02-28 15:18:55.302 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b88f6e0
[DEBUG] 2020-02-28 15:18:55.302 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1635b9ff
[DEBUG] 2020-02-28 15:18:55.303 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2637683
[DEBUG] 2020-02-28 15:18:55.303 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2637683
[DEBUG] 2020-02-28 15:18:55.303 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@441399c2
[DEBUG] 2020-02-28 15:18:55.303 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@441399c2
[DEBUG] 2020-02-28 15:18:55.303 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@25666d3c
[DEBUG] 2020-02-28 15:18:55.304 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25666d3c
[DEBUG] 2020-02-28 15:18:55.304 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@788dafe8
[DEBUG] 2020-02-28 15:18:55.304 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@788dafe8
[DEBUG] 2020-02-28 15:18:55.304 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19867679
[DEBUG] 2020-02-28 15:18:55.304 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19867679
[DEBUG] 2020-02-28 15:18:55.305 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@332f32e3
[DEBUG] 2020-02-28 15:18:55.306 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7fdb1
[DEBUG] 2020-02-28 15:18:55.306 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7fdb1
[DEBUG] 2020-02-28 15:18:55.306 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7fdb1
[DEBUG] 2020-02-28 15:18:55.306 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14e1480
[DEBUG] 2020-02-28 15:18:55.306 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14e1480
[DEBUG] 2020-02-28 15:18:55.306 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14e1480
[DEBUG] 2020-02-28 15:18:55.307 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@22c1de15
[DEBUG] 2020-02-28 15:18:55.307 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3fa1ae02
[DEBUG] 2020-02-28 15:18:55.308 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@529a70f5
[DEBUG] 2020-02-28 15:18:55.308 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@529a70f5
[DEBUG] 2020-02-28 15:18:55.308 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@529a70f5
[DEBUG] 2020-02-28 15:18:55.308 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@669d397b
[DEBUG] 2020-02-28 15:18:55.308 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@669d397b
[DEBUG] 2020-02-28 15:18:55.308 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@669d397b
[DEBUG] 2020-02-28 15:18:55.309 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@12fba58d
[DEBUG] 2020-02-28 15:18:55.309 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1ce2a4ac
[DEBUG] 2020-02-28 15:18:55.310 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@545f4797
[DEBUG] 2020-02-28 15:18:55.310 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@545f4797
[DEBUG] 2020-02-28 15:18:55.310 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@124b0552
[DEBUG] 2020-02-28 15:18:55.311 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7b82d3d
[DEBUG] 2020-02-28 15:18:55.311 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b82d3d
[DEBUG] 2020-02-28 15:18:55.312 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1058b4ba
[DEBUG] 2020-02-28 15:18:55.312 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1058b4ba
[DEBUG] 2020-02-28 15:18:55.312 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2565f39f
[DEBUG] 2020-02-28 15:18:55.312 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@639f85f
[DEBUG] 2020-02-28 15:18:55.313 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6700943f
[DEBUG] 2020-02-28 15:18:55.316 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@43d22e99
[DEBUG] 2020-02-28 15:18:55.316 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43d22e99
[DEBUG] 2020-02-28 15:18:55.316 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c9006e6
[DEBUG] 2020-02-28 15:18:55.316 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@467d45fa
[DEBUG] 2020-02-28 15:18:55.316 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48cd26b
[DEBUG] 2020-02-28 15:18:55.317 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@78fe294a
[DEBUG] 2020-02-28 15:18:55.317 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@74d5a785
[DEBUG] 2020-02-28 15:18:55.317 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58ab6e70
[DEBUG] 2020-02-28 15:18:55.317 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a56f084
[DEBUG] 2020-02-28 15:18:55.317 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@33eb2afd
[DEBUG] 2020-02-28 15:18:55.342 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:18:55.342 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:18:55.343 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:18:55.343 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:18:55.344 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:18:55.344 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:18:55.345 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:18:55.345 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:18:55.346 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:18:55.347 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:18:55.347 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:18:55.348 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:18:55.348 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:18:55.349 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:18:55.358 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:18:55.358 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:18:55.359 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:18:55.457 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:18:55.727 [http-nio-8080-exec-42] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:18:55.727 [http-nio-8080-exec-42] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:18:55.727 [http-nio-8080-exec-42] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:18:55.755 [http-nio-8080-exec-42] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:18:55.777 [http-nio-8080-exec-42] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:18:55.799 [http-nio-8080-exec-42] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:18:55.830 [http-nio-8080-exec-42] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:18:55.835 [http-nio-8080-exec-42] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a1d6abe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@229a689f]
[DEBUG] 2020-02-28 15:18:55.884 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:55.900 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:55.904 [http-nio-8080-exec-42] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:18:55.907 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:18:55.926 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.928 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:18:55.930 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:18:55.931 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:18:55.935 [http-nio-8080-exec-42] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:18:55.937 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.938 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:18:55.939 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:55.940 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:55.940 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.941 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:18:55.941 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:18:55.941 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:18:55.941 [http-nio-8080-exec-42] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:18:55.942 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.944 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.946 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.954 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.955 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.955 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:55.955 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.955 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.956 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:18:55.958 [http-nio-8080-exec-42] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:18:55.958 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.959 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:18:55.960 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.961 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.962 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:18:55.963 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:18:55.967 [http-nio-8080-exec-42] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:18:55.969 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:18:55.971 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:55.971 [http-nio-8080-exec-42] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:18:55.971 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:18:55.980 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.981 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:18:55.981 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:18:55.981 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:18:55.981 [http-nio-8080-exec-42] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:18:55.981 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:55.981 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.982 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:55.982 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:18:55.982 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:55.982 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.994 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:18:55.996 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:18:55.996 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:55.996 [http-nio-8080-exec-42] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:18:55.997 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:18:55.997 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:55.999 [http-nio-8080-exec-42] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:18:56.000 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:18:56.001 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:56.001 [http-nio-8080-exec-42] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:18:56.002 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:18:56.003 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.003 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:18:56.003 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:18:56.003 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:18:56.003 [http-nio-8080-exec-42] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:18:56.003 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:18:56.004 [http-nio-8080-exec-42] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:18:56.005 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.006 [http-nio-8080-exec-42] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:18:56.007 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:18:56.008 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:18:56.009 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.009 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:18:56.009 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:18:56.010 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:18:56.011 [http-nio-8080-exec-42] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:18:56.011 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.012 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:18:56.013 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:18:56.013 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:18:56.013 [http-nio-8080-exec-42] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:18:56.013 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.013 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.015 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:18:56.016 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.020 [http-nio-8080-exec-42] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:18:56.021 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.021 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:56.021 [http-nio-8080-exec-42] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:18:56.021 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:18:56.022 [http-nio-8080-exec-42] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:18:56.026 [http-nio-8080-exec-42] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:18:56.027 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:18:56.028 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:18:56.029 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.029 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:18:56.029 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:18:56.029 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.030 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:18:56.031 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:18:56.032 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:18:56.033 [http-nio-8080-exec-42] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:18:56.034 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:18:56.035 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:18:56.044 [http-nio-8080-exec-42] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:18:56.048 [http-nio-8080-exec-42] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:18:56.048 [http-nio-8080-exec-42] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:18:56.048 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:18:56.048 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:18:56.048 [http-nio-8080-exec-42] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:18:56.049 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:18:56.050 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:18:56.052 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:18:56.053 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.054 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.058 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:18:56.058 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.058 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.058 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.058 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.059 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.059 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.059 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.059 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.108 [http-nio-8080-exec-42] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:18:56.109 [http-nio-8080-exec-42] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:18:56.194 [http-nio-8080-exec-42] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:18:56.215 [http-nio-8080-exec-42] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:18:56.215 [http-nio-8080-exec-42] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13c9ead5, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:18:56.233 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:18:56.234 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.234 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:18:56.234 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:18:56.234 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:18:56.234 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:18:56.237 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:18:56.237 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.238 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:18:56.238 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:18:56.238 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:18:56.238 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.240 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:18:56.241 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.244 [http-nio-8080-exec-42] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:18:56.246 [http-nio-8080-exec-42] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:18:56.247 [http-nio-8080-exec-42] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a1d6abe] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5f27206e]
[DEBUG] 2020-02-28 15:18:56.283 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:18:56.283 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.294 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:18:56.294 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.544 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:18:56.544 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:18:56.544 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:18:56.544 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:18:56.575 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:18:56.575 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:18:56.575 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:18:56.575 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:18:56.589 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:18:56.589 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.589 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:18:56.589 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.604 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:18:56.604 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:18:56.605 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:18:56.605 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:18:56.636 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:18:56.636 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.637 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:18:56.637 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.680 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:18:56.680 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.680 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:18:56.680 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.706 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:18:56.706 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:18:56.706 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:18:56.706 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:18:56.706 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:18:56.707 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:18:56.709 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:18:56.709 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:18:56.709 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:18:56.709 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:18:56.709 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:18:56.710 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:18:56.713 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.735 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c2c4cd]
[DEBUG] 2020-02-28 15:18:56.736 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.737 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.737 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:18:56.739 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28b56aa0]
[DEBUG] 2020-02-28 15:18:56.740 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7599669e]
[DEBUG] 2020-02-28 15:18:56.740 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:18:56.740 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.740 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71f6e46f]
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b069a]
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.741 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66937fa2]
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ca4836a]
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f34e1e]
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.742 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@118293d]
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de714be]
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.743 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bc3e944]
[DEBUG] 2020-02-28 15:18:56.744 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef4c7e1]
[DEBUG] 2020-02-28 15:18:56.744 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.744 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.744 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.744 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@79e276]
[DEBUG] 2020-02-28 15:18:56.746 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.746 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.746 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.756 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.764 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.765 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:18:56.765 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcce562]
[DEBUG] 2020-02-28 15:18:56.765 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.765 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3eb3ff9c]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7493bc5e]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cdca05b]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c81a49]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53265493]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@359d291]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31f18ae1]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5012c280]
[DEBUG] 2020-02-28 15:18:56.766 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19fa222c]
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fa1415a]
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6782edc0]
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66cf4b9e]
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.767 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:18:56.780 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:18:56.781 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c47ef9]
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d6f6c1]
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@409adb23]
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c80152]
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72aa8174]
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a685356]
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:18:56.782 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a480363]
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4252079f]
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@100a1b30]
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.783 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a997d88]
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b6be14]
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@380c8cfd]
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fb36662]
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6258379e]
[DEBUG] 2020-02-28 15:18:56.784 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d84fb09]
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@762030e7]
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c06c199]
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12d265c6]
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.785 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.786 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c0619a]
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:18:56.792 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@330ddccf]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41af5ba6]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f6c872]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d408907]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@265db540]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d14a846]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b6746ce]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7246e414]
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.793 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.795 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.795 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:18:56.795 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1947158]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@258728c6]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6be8d5fc]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb85e85]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37e5822c]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d42d2f4]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7028ab95]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198d9f63]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e29a9c]
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.796 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3d43ff]
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f9ee04d]
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37a068f5]
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2114f745]
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35cee3c4]
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11dd248]
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.797 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5b3f1]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ff222c6]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a12232a]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67d09dd]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5847efc6]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6953670a]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72c30279]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c9ede1d]
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:18:56.798 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6363735a]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7381a935]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@495d8cad]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7044346]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@508cb461]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75117239]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e4d1fa]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ddfbfd3]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8452bb5]
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:18:56.799 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@88f6bfb]
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a22e34]
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.800 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ff47064]
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51524047]
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@471707d7]
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43e14937]
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f7a667f]
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c695baf]
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:18:56.801 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@266b5751]
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79c410]
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6da969d5]
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fab2026]
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:18:56.803 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577d12a4]
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@253fcef5]
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43737064]
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538b929f]
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c5c5278]
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cf6160]
[DEBUG] 2020-02-28 15:18:56.804 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:18:56.806 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:18:56.806 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:18:56.806 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:18:56.809 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e36fe40]
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22be4687]
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@73b5a7d2]
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.810 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.812 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.813 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:18:56.813 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:18:56.814 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:18:56.814 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a083da6]
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f4b2ea7]
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f083bf]
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.816 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297e734a]
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d7a63d5]
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd1f6be]
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:18:56.817 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:18:56.818 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:18:56.818 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f927704]
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d492b3]
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.828 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:18:56.829 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.829 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.834 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.839 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@758db172]
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602d494]
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:18:56.840 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.841 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.841 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@792c4136]
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@691a8cf3]
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@211096d]
[DEBUG] 2020-02-28 15:18:56.845 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd160c8]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@538f9730]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676c7aa9]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434023fb]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@481a6e4c]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c27ecd4]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e3a5150]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d8d487]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@682bbcbe]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b99ac23]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4775ced1]
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.849 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@681d2e96]
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11f4f126]
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:18:56.850 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bf05868]
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3be1f1]
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.851 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7164117e]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37585c7b]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752e0708]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24100732]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29790b9f]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c37314f]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59247b86]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d29de07]
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.854 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7935e055]
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3375cbe]
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@129b3609]
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b705a48]
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.855 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2def980d]
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46435e2]
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44e39816]
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@618d6e4d]
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@524714a9]
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d8f3cac]
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:18:56.856 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:18:56.857 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:18:56.857 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:18:56.857 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:18:56.857 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:18:56.857 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:18:56.887 [http-nio-8080-exec-42] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:18:56.888 [http-nio-8080-exec-42] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:18:56.888 [http-nio-8080-exec-42] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:18:56.897 [http-nio-8080-exec-42] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:18:56.897 [http-nio-8080-exec-42] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:18:56.898 [http-nio-8080-exec-42] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:18:56.898 [http-nio-8080-exec-42] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:18:56.899 [http-nio-8080-exec-42] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@25a0dd1b
[DEBUG] 2020-02-28 15:18:56.900 [http-nio-8080-exec-42] SessionFactoryRegistry - Registering SessionFactory: 46797f97-9bba-42ab-88d3-3deb84362eb9 (<unnamed>)
[DEBUG] 2020-02-28 15:18:56.900 [http-nio-8080-exec-42] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:18:56.978 [http-nio-8080-exec-42] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:18:57.001 [http-nio-8080-exec-42] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:18:57.022 [http-nio-8080-exec-42] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5fe79e67
[DEBUG] 2020-02-28 15:18:57.049 [http-nio-8080-exec-42] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:18:57.054 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:18:57.058 [http-nio-8080-exec-42] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:18:57.074 [http-nio-8080-exec-42] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:18:57.082 [http-nio-8080-exec-42] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:18:57.083 [http-nio-8080-exec-42] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:18:57.084 [http-nio-8080-exec-42] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:18:57.084 [http-nio-8080-exec-42] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:18:57.089 [http-nio-8080-exec-42] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:18:57.090 [http-nio-8080-exec-42] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:18:57.092 [http-nio-8080-exec-42] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:18:57.092 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:18:57.097 [http-nio-8080-exec-42] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:18:57.097 [http-nio-8080-exec-42] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:18:57.097 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:18:57.117 [http-nio-8080-exec-42] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:18:57.137 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:18:57.139 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:18:57.151 [http-nio-8080-exec-42] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:18:57.151 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:18:57.151 [http-nio-8080-exec-42] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:18:57.151 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:18:57.153 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:18:57.153 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:18:57.153 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:18:57.154 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.156 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:18:57.163 [http-nio-8080-exec-42] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:18:57.165 [http-nio-8080-exec-42] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:18:57.168 [http-nio-8080-exec-42] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:18:57.176 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.179 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:18:57.180 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.180 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:18:57.180 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.180 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3dd5c13e
[DEBUG] 2020-02-28 15:18:57.180 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.180 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.181 [http-nio-8080-exec-42] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:18:57.182 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:18:57.183 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:18:57.184 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:18:57.184 [http-nio-8080-exec-42] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:18:57.184 [http-nio-8080-exec-42] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:18:57.185 [http-nio-8080-exec-42] Loader - Done entity load
[DEBUG] 2020-02-28 15:18:57.185 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:18:57.185 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:18:57.185 [http-nio-8080-exec-42] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:18:57.185 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:18:57.186 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:18:57.188 [http-nio-8080-exec-42] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:20:14.485 [http-nio-8080-exec-57] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:20:14.488 [http-nio-8080-exec-57] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:20:14.492 [http-nio-8080-exec-57] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:20:14.556 [http-nio-8080-exec-57] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:20:14.558 [http-nio-8080-exec-57] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:20:14.645 [http-nio-8080-exec-57] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:20:14.646 [http-nio-8080-exec-57] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:20:14.647 [http-nio-8080-exec-57] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:20:14.827 [http-nio-8080-exec-57] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:20:14.841 [http-nio-8080-exec-57] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:20:14.842 [http-nio-8080-exec-57] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:20:14.858 [http-nio-8080-exec-57] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:20:14.886 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@66c473a0
[DEBUG] 2020-02-28 15:20:14.886 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@66c473a0
[DEBUG] 2020-02-28 15:20:14.886 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66c473a0
[DEBUG] 2020-02-28 15:20:14.886 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1984724c
[DEBUG] 2020-02-28 15:20:14.886 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b43375c
[DEBUG] 2020-02-28 15:20:14.886 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f0b4a86
[DEBUG] 2020-02-28 15:20:14.887 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@672bfa53
[DEBUG] 2020-02-28 15:20:14.887 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@672bfa53
[DEBUG] 2020-02-28 15:20:14.887 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@672bfa53
[DEBUG] 2020-02-28 15:20:14.888 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@795ad9e7
[DEBUG] 2020-02-28 15:20:14.888 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@795ad9e7
[DEBUG] 2020-02-28 15:20:14.888 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@795ad9e7
[DEBUG] 2020-02-28 15:20:14.888 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69938cbf
[DEBUG] 2020-02-28 15:20:14.888 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69938cbf
[DEBUG] 2020-02-28 15:20:14.888 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@69938cbf
[DEBUG] 2020-02-28 15:20:14.889 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@35e60f21
[DEBUG] 2020-02-28 15:20:14.889 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@35e60f21
[DEBUG] 2020-02-28 15:20:14.889 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35e60f21
[DEBUG] 2020-02-28 15:20:14.889 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4f0120bf
[DEBUG] 2020-02-28 15:20:14.889 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4f0120bf
[DEBUG] 2020-02-28 15:20:14.889 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f0120bf
[DEBUG] 2020-02-28 15:20:14.890 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36b930c0
[DEBUG] 2020-02-28 15:20:14.890 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36b930c0
[DEBUG] 2020-02-28 15:20:14.890 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36b930c0
[DEBUG] 2020-02-28 15:20:14.890 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@60a5df02
[DEBUG] 2020-02-28 15:20:14.890 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@60a5df02
[DEBUG] 2020-02-28 15:20:14.890 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60a5df02
[DEBUG] 2020-02-28 15:20:14.891 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@75f722a6
[DEBUG] 2020-02-28 15:20:14.891 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@75f722a6
[DEBUG] 2020-02-28 15:20:14.892 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5dd11d19
[DEBUG] 2020-02-28 15:20:14.892 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5dd11d19
[DEBUG] 2020-02-28 15:20:14.892 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@139ca443
[DEBUG] 2020-02-28 15:20:14.892 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@139ca443
[DEBUG] 2020-02-28 15:20:14.893 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1eb48ef0
[DEBUG] 2020-02-28 15:20:14.893 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7056a98f
[DEBUG] 2020-02-28 15:20:14.894 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6579e129
[DEBUG] 2020-02-28 15:20:14.894 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6579e129
[DEBUG] 2020-02-28 15:20:14.895 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3298e5fb
[DEBUG] 2020-02-28 15:20:14.895 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3298e5fb
[DEBUG] 2020-02-28 15:20:14.896 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2112fa51
[DEBUG] 2020-02-28 15:20:14.896 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2112fa51
[DEBUG] 2020-02-28 15:20:14.897 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7590f23a
[DEBUG] 2020-02-28 15:20:14.897 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7590f23a
[DEBUG] 2020-02-28 15:20:14.898 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@26b7f19d
[DEBUG] 2020-02-28 15:20:14.898 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@26b7f19d
[DEBUG] 2020-02-28 15:20:14.899 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c8604a9
[DEBUG] 2020-02-28 15:20:14.899 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c8604a9
[DEBUG] 2020-02-28 15:20:14.901 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10248708
[DEBUG] 2020-02-28 15:20:14.901 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10248708
[DEBUG] 2020-02-28 15:20:14.902 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3bbfc7a0
[DEBUG] 2020-02-28 15:20:14.902 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3bbfc7a0
[DEBUG] 2020-02-28 15:20:14.903 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@558c9658
[DEBUG] 2020-02-28 15:20:14.903 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@558c9658
[DEBUG] 2020-02-28 15:20:14.904 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@39baddd8
[DEBUG] 2020-02-28 15:20:14.904 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@39baddd8
[DEBUG] 2020-02-28 15:20:14.904 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5b7781a3
[DEBUG] 2020-02-28 15:20:14.904 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5b7781a3
[DEBUG] 2020-02-28 15:20:14.905 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e7af093
[DEBUG] 2020-02-28 15:20:14.905 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e7af093
[DEBUG] 2020-02-28 15:20:14.905 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e7af093
[DEBUG] 2020-02-28 15:20:14.906 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a977392
[DEBUG] 2020-02-28 15:20:14.906 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@122c4cf
[DEBUG] 2020-02-28 15:20:14.906 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@122c4cf
[DEBUG] 2020-02-28 15:20:14.906 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@122c4cf
[DEBUG] 2020-02-28 15:20:14.907 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@502c99f2
[DEBUG] 2020-02-28 15:20:14.907 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@8bb9045
[DEBUG] 2020-02-28 15:20:14.907 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@8bb9045
[DEBUG] 2020-02-28 15:20:14.908 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4b1a7251
[DEBUG] 2020-02-28 15:20:14.908 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b1a7251
[DEBUG] 2020-02-28 15:20:14.908 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8d2a5e1
[DEBUG] 2020-02-28 15:20:14.908 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8d2a5e1
[DEBUG] 2020-02-28 15:20:14.909 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@721aeda0
[DEBUG] 2020-02-28 15:20:14.909 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@721aeda0
[DEBUG] 2020-02-28 15:20:14.909 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ef67ad8
[DEBUG] 2020-02-28 15:20:14.909 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ef67ad8
[DEBUG] 2020-02-28 15:20:14.910 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42eba211
[DEBUG] 2020-02-28 15:20:14.910 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2932fab9
[DEBUG] 2020-02-28 15:20:14.910 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2932fab9
[DEBUG] 2020-02-28 15:20:14.910 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2932fab9
[DEBUG] 2020-02-28 15:20:14.911 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4683c7a0
[DEBUG] 2020-02-28 15:20:14.911 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4683c7a0
[DEBUG] 2020-02-28 15:20:14.911 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4683c7a0
[DEBUG] 2020-02-28 15:20:14.911 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@31e3424e
[DEBUG] 2020-02-28 15:20:14.911 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@471a690c
[DEBUG] 2020-02-28 15:20:14.912 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1762464a
[DEBUG] 2020-02-28 15:20:14.912 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1762464a
[DEBUG] 2020-02-28 15:20:14.912 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1762464a
[DEBUG] 2020-02-28 15:20:14.912 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5bc6011
[DEBUG] 2020-02-28 15:20:14.912 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5bc6011
[DEBUG] 2020-02-28 15:20:14.913 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5bc6011
[DEBUG] 2020-02-28 15:20:14.913 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@231b8e5f
[DEBUG] 2020-02-28 15:20:14.913 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4ba4726
[DEBUG] 2020-02-28 15:20:14.914 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@72417bca
[DEBUG] 2020-02-28 15:20:14.914 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72417bca
[DEBUG] 2020-02-28 15:20:14.914 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a336d6f
[DEBUG] 2020-02-28 15:20:14.915 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1d0591f2
[DEBUG] 2020-02-28 15:20:14.915 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d0591f2
[DEBUG] 2020-02-28 15:20:14.916 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@639ad9bc
[DEBUG] 2020-02-28 15:20:14.916 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@639ad9bc
[DEBUG] 2020-02-28 15:20:14.917 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1385311f
[DEBUG] 2020-02-28 15:20:14.917 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c906105
[DEBUG] 2020-02-28 15:20:14.918 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@37ea6a5c
[DEBUG] 2020-02-28 15:20:14.920 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6137e7fb
[DEBUG] 2020-02-28 15:20:14.920 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6137e7fb
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6abf9ab9
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ec7bf55
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13252bf5
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a6a244a
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c1601ec
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fe8342c
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@528caa7
[DEBUG] 2020-02-28 15:20:14.921 [http-nio-8080-exec-57] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3edbe63c
[DEBUG] 2020-02-28 15:20:14.943 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:20:14.944 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:20:14.944 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:20:14.945 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:20:14.945 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:20:14.946 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:20:14.946 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:20:14.947 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:20:14.947 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:20:14.948 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:20:14.948 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:20:14.948 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:20:14.948 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:20:14.949 [http-nio-8080-exec-57] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:20:14.954 [http-nio-8080-exec-57] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:20:14.954 [http-nio-8080-exec-57] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:20:14.954 [http-nio-8080-exec-57] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:20:15.100 [http-nio-8080-exec-57] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:20:15.306 [http-nio-8080-exec-57] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:20:15.306 [http-nio-8080-exec-57] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:20:15.306 [http-nio-8080-exec-57] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:20:15.339 [http-nio-8080-exec-57] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:20:15.355 [http-nio-8080-exec-57] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:20:15.391 [http-nio-8080-exec-57] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:20:15.425 [http-nio-8080-exec-57] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:20:15.427 [http-nio-8080-exec-57] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73682667] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@600be298]
[DEBUG] 2020-02-28 15:20:15.471 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.491 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.495 [http-nio-8080-exec-57] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:20:15.497 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:20:15.512 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.514 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:20:15.515 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:20:15.516 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:20:15.517 [http-nio-8080-exec-57] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:20:15.520 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.521 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:20:15.522 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:20:15.523 [http-nio-8080-exec-57] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:20:15.524 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.525 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.526 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.533 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.534 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.534 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.535 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.535 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.535 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.537 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:20:15.538 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.539 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:20:15.540 [http-nio-8080-exec-57] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:20:15.541 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:20:15.541 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.541 [http-nio-8080-exec-57] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:20:15.541 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.543 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.550 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.551 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:20:15.551 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.551 [http-nio-8080-exec-57] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:20:15.552 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.552 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.556 [http-nio-8080-exec-57] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:20:15.556 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:20:15.557 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.557 [http-nio-8080-exec-57] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:20:15.557 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.558 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.559 [http-nio-8080-exec-57] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:20:15.560 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:20:15.561 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:20:15.562 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:20:15.563 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.563 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:20:15.563 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:20:15.563 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:20:15.563 [http-nio-8080-exec-57] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:20:15.563 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.564 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:20:15.565 [http-nio-8080-exec-57] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:20:15.566 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:20:15.567 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:20:15.568 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:20:15.569 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:20:15.570 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:20:15.571 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:20:15.572 [http-nio-8080-exec-57] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:20:15.573 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:20:15.573 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:20:15.573 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:20:15.573 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:20:15.574 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:20:15.575 [http-nio-8080-exec-57] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:20:15.582 [http-nio-8080-exec-57] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:20:15.585 [http-nio-8080-exec-57] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:20:15.586 [http-nio-8080-exec-57] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:20:15.587 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:20:15.587 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:20:15.587 [http-nio-8080-exec-57] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:20:15.587 [http-nio-8080-exec-57] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:20:15.588 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.596 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.596 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:15.596 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.596 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:15.596 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.596 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.597 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.599 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:20:15.599 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.599 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.599 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:15.599 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.600 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:15.600 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.600 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.600 [http-nio-8080-exec-57] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.634 [http-nio-8080-exec-57] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:20:15.635 [http-nio-8080-exec-57] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:20:15.636 [http-nio-8080-exec-57] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:20:15.636 [http-nio-8080-exec-57] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:20:15.689 [http-nio-8080-exec-57] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:20:15.717 [http-nio-8080-exec-57] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:20:15.717 [http-nio-8080-exec-57] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25287571, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:20:15.733 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:20:15.733 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.734 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:20:15.734 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:20:15.735 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:20:15.735 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:20:15.736 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:20:15.736 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:15.736 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:20:15.736 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:20:15.737 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:20:15.737 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:15.737 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:20:15.737 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:15.739 [http-nio-8080-exec-57] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:20:15.740 [http-nio-8080-exec-57] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:20:15.740 [http-nio-8080-exec-57] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73682667] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@179d73af]
[DEBUG] 2020-02-28 15:20:15.786 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:20:15.786 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.793 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:20:15.793 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:15.972 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:20:15.972 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:20:15.972 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:20:15.972 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:20:15.984 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:20:15.984 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:20:15.984 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:20:15.984 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:20:15.994 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:20:15.994 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:15.994 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:20:15.994 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:16.005 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:20:16.005 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:20:16.006 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:20:16.006 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:20:16.033 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:20:16.033 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:16.035 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:20:16.035 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:16.085 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:20:16.085 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:16.085 [http-nio-8080-exec-57] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:20:16.085 [http-nio-8080-exec-57] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:20:16.123 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:20:16.125 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:20:16.126 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:20:16.127 [http-nio-8080-exec-57] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:20:16.130 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.153 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d56479]
[DEBUG] 2020-02-28 15:20:16.153 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.153 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.153 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:20:16.156 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6656e01b]
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@530820d2]
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b3b3dae]
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36084149]
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.157 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.158 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e6658d]
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bada765]
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@179de2b9]
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.161 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.162 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c826ad8]
[DEBUG] 2020-02-28 15:20:16.162 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3472c1db]
[DEBUG] 2020-02-28 15:20:16.163 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:20:16.163 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:20:16.163 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.163 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:20:16.163 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:20:16.164 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.164 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ea4942f]
[DEBUG] 2020-02-28 15:20:16.164 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f0936f7]
[DEBUG] 2020-02-28 15:20:16.164 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.164 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.164 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.165 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7adae431]
[DEBUG] 2020-02-28 15:20:16.166 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.167 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.167 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.176 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.180 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2594f9f2]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@686cc046]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@410ae6c1]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43d3cc7b]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42bb8493]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c5b0272]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79c66e7]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191de59b]
[DEBUG] 2020-02-28 15:20:16.182 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.184 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dc13c58]
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59aa7b5f]
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f855809]
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457fa225]
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5425fc54]
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.185 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.186 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.186 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:20:16.201 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a0a0c8]
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42878a3a]
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f46667f]
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6896ad8f]
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.202 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16be3cfd]
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@717456e0]
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37e40ae8]
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647489a2]
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@470aad8]
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.203 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.204 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.205 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17e4aafb]
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.206 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563a4e7d]
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66e30eb5]
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@598036bd]
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dcdc256]
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc0d31a]
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:20:16.207 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aa9adab]
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1368e7e7]
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35613203]
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.208 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.209 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@638b4668]
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.210 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.215 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc51ff9]
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55367385]
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24de2ac8]
[DEBUG] 2020-02-28 15:20:16.216 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@747c37d]
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55214fc0]
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@336db4ba]
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66304075]
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5fd53be5]
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.217 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec38c54]
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6852a5]
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27f33bd2]
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f1f0fe9]
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@316c9fd5]
[DEBUG] 2020-02-28 15:20:16.218 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514c331a]
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f5fbf4a]
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2878950f]
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7dbf35e2]
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.220 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6c4ea2]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37c45b00]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22671639]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc35589]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3aef116b]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20230ed1]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c96841]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a8a0db0]
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.221 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c8222db]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75cba843]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f86ccc7]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2390ccf0]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e39b6a3]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36989c97]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@299c037c]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82311df]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223cadf5]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bad2bb4]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6020231]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41965401]
[DEBUG] 2020-02-28 15:20:16.222 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f9b931]
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b1bd731]
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d1e59e9]
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5fc8d6f3]
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:20:16.223 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ae873]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5de6f4ab]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7f5b78]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dc64fd4]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe84987]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1541b97d]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2728436]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28ceda3a]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8ba821]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1df73b68]
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.225 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.226 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13823fac]
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54a31e5b]
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad4d68]
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d06d8e]
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@286bc336]
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64f641a6]
[DEBUG] 2020-02-28 15:20:16.229 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5a865d]
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fceb347]
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757ca08d]
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@439df729]
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.230 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.231 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:20:16.231 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:20:16.231 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:20:16.232 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:20:16.237 [http-nio-8080-exec-57] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:20:16.237 [http-nio-8080-exec-57] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2d572c]
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fc3bd04]
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db1043c]
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3911a691]
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73569b8a]
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7643f138]
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:20:16.238 [http-nio-8080-exec-57] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:20:16.239 [http-nio-8080-exec-57] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3143624a]
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749a6683]
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:20:16.241 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.242 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d491b67]
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c40805]
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.243 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@232533ee]
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646693af]
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.249 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54c00e6a]
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb14b6]
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:20:16.250 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48465a68]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14d4b972]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fbcde8]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e02b384]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2c8a1f]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4739a9f]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6910e01e]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e5f02b]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29b2ee1a]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@310d3ed1]
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.251 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.252 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.252 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:20:16.252 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:20:16.252 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5217b7a5]
[DEBUG] 2020-02-28 15:20:16.252 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f48c13]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5af798d6]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b0038f]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f27351f]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49b82b59]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@409df59a]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7624af5b]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20270322]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@284d169c]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753072a]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@54de2eec]
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.253 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cc11fa3]
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13342346]
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ebe67ce]
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca25d4c]
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.254 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39c4d4fe]
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2792b6b7]
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e56e7e5]
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c43df96]
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@166c8b77]
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5292c142]
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:20:16.255 [http-nio-8080-exec-57] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:20:16.294 [http-nio-8080-exec-57] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:20:16.294 [http-nio-8080-exec-57] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:20:16.294 [http-nio-8080-exec-57] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:20:16.300 [http-nio-8080-exec-57] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:20:16.300 [http-nio-8080-exec-57] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:20:16.301 [http-nio-8080-exec-57] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:20:16.301 [http-nio-8080-exec-57] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:20:16.302 [http-nio-8080-exec-57] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74cf31ff
[DEBUG] 2020-02-28 15:20:16.303 [http-nio-8080-exec-57] SessionFactoryRegistry - Registering SessionFactory: 8c95c950-1bb3-4954-8f87-033e4800f588 (<unnamed>)
[DEBUG] 2020-02-28 15:20:16.303 [http-nio-8080-exec-57] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:20:16.413 [http-nio-8080-exec-57] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:20:16.435 [http-nio-8080-exec-57] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:20:16.454 [http-nio-8080-exec-57] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@666c3862
[DEBUG] 2020-02-28 15:20:16.470 [http-nio-8080-exec-57] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:20:16.472 [http-nio-8080-exec-57] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:20:16.478 [http-nio-8080-exec-57] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:20:16.499 [http-nio-8080-exec-57] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:20:16.512 [http-nio-8080-exec-57] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:20:16.513 [http-nio-8080-exec-57] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:20:16.516 [http-nio-8080-exec-57] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:20:16.516 [http-nio-8080-exec-57] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:20:16.523 [http-nio-8080-exec-57] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:20:16.523 [http-nio-8080-exec-57] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:20:16.523 [http-nio-8080-exec-57] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:20:16.523 [http-nio-8080-exec-57] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:20:16.529 [http-nio-8080-exec-57] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:20:16.529 [http-nio-8080-exec-57] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:20:16.529 [http-nio-8080-exec-57] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:20:16.542 [http-nio-8080-exec-57] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:20:16.560 [http-nio-8080-exec-57] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:20:16.561 [http-nio-8080-exec-57] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:20:16.566 [http-nio-8080-exec-57] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:20:16.566 [http-nio-8080-exec-57] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:20:16.566 [http-nio-8080-exec-57] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:20:16.566 [http-nio-8080-exec-57] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:20:16.566 [http-nio-8080-exec-57] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:20:16.567 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.569 [http-nio-8080-exec-57] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:20:16.573 [http-nio-8080-exec-57] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:20:16.573 [http-nio-8080-exec-57] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:20:16.575 [http-nio-8080-exec-57] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:16.587 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:16.588 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@532a5ff3
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:20:16.589 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.590 [http-nio-8080-exec-57] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:20:16.590 [http-nio-8080-exec-57] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:20:16.591 [http-nio-8080-exec-57] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:20:16.591 [http-nio-8080-exec-57] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:20:16.592 [http-nio-8080-exec-57] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:20:16.592 [http-nio-8080-exec-57] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:16.592 [http-nio-8080-exec-57] Loader - Done entity load
[DEBUG] 2020-02-28 15:20:16.592 [http-nio-8080-exec-57] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:20:16.592 [http-nio-8080-exec-57] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:16.593 [http-nio-8080-exec-57] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:20:16.593 [http-nio-8080-exec-57] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:16.593 [http-nio-8080-exec-57] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:16.594 [http-nio-8080-exec-57] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:20:16.596 [http-nio-8080-exec-57] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:20:19.496 [http-nio-8080-exec-48] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:20:19.501 [http-nio-8080-exec-48] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:20:19.501 [http-nio-8080-exec-48] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:20:19.502 [http-nio-8080-exec-48] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:19.503 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.504 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5667bc9d
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:20:19.506 [http-nio-8080-exec-48] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:20:19.509 [http-nio-8080-exec-48] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] Loader - Done entity load
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:20:19.510 [http-nio-8080-exec-48] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:22:48.385 [http-nio-8080-exec-60] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:22:48.386 [http-nio-8080-exec-60] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:22:48.390 [http-nio-8080-exec-60] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:22:48.512 [http-nio-8080-exec-60] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:22:48.515 [http-nio-8080-exec-60] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:22:48.684 [http-nio-8080-exec-60] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:22:48.685 [http-nio-8080-exec-60] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:22:48.686 [http-nio-8080-exec-60] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:22:48.855 [http-nio-8080-exec-60] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:22:48.878 [http-nio-8080-exec-60] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:22:48.879 [http-nio-8080-exec-60] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:22:48.899 [http-nio-8080-exec-60] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:22:48.932 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1b520640
[DEBUG] 2020-02-28 15:22:48.932 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1b520640
[DEBUG] 2020-02-28 15:22:48.932 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b520640
[DEBUG] 2020-02-28 15:22:48.932 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1283b178
[DEBUG] 2020-02-28 15:22:48.933 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a6b145f
[DEBUG] 2020-02-28 15:22:48.933 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e908366
[DEBUG] 2020-02-28 15:22:48.933 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@221b83e8
[DEBUG] 2020-02-28 15:22:48.934 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@221b83e8
[DEBUG] 2020-02-28 15:22:48.934 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@221b83e8
[DEBUG] 2020-02-28 15:22:48.934 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5aa699a2
[DEBUG] 2020-02-28 15:22:48.934 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5aa699a2
[DEBUG] 2020-02-28 15:22:48.934 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa699a2
[DEBUG] 2020-02-28 15:22:48.935 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@36b25cb8
[DEBUG] 2020-02-28 15:22:48.935 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@36b25cb8
[DEBUG] 2020-02-28 15:22:48.935 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@36b25cb8
[DEBUG] 2020-02-28 15:22:48.936 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@321bc80
[DEBUG] 2020-02-28 15:22:48.936 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@321bc80
[DEBUG] 2020-02-28 15:22:48.936 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@321bc80
[DEBUG] 2020-02-28 15:22:48.936 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3327b9e0
[DEBUG] 2020-02-28 15:22:48.936 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3327b9e0
[DEBUG] 2020-02-28 15:22:48.936 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3327b9e0
[DEBUG] 2020-02-28 15:22:48.937 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@726463d4
[DEBUG] 2020-02-28 15:22:48.937 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@726463d4
[DEBUG] 2020-02-28 15:22:48.937 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@726463d4
[DEBUG] 2020-02-28 15:22:48.937 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5489b2ea
[DEBUG] 2020-02-28 15:22:48.937 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5489b2ea
[DEBUG] 2020-02-28 15:22:48.937 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5489b2ea
[DEBUG] 2020-02-28 15:22:48.938 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a84c11
[DEBUG] 2020-02-28 15:22:48.938 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a84c11
[DEBUG] 2020-02-28 15:22:48.938 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@621e4c28
[DEBUG] 2020-02-28 15:22:48.938 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@621e4c28
[DEBUG] 2020-02-28 15:22:48.939 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@730ca32d
[DEBUG] 2020-02-28 15:22:48.939 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@730ca32d
[DEBUG] 2020-02-28 15:22:48.939 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@70052bdb
[DEBUG] 2020-02-28 15:22:48.940 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@72268154
[DEBUG] 2020-02-28 15:22:48.942 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@50b527f5
[DEBUG] 2020-02-28 15:22:48.942 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@50b527f5
[DEBUG] 2020-02-28 15:22:48.943 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@44c9dcdd
[DEBUG] 2020-02-28 15:22:48.943 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@44c9dcdd
[DEBUG] 2020-02-28 15:22:48.944 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2fd3d480
[DEBUG] 2020-02-28 15:22:48.944 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2fd3d480
[DEBUG] 2020-02-28 15:22:48.945 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d5d3dd2
[DEBUG] 2020-02-28 15:22:48.945 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d5d3dd2
[DEBUG] 2020-02-28 15:22:48.946 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bfa618c
[DEBUG] 2020-02-28 15:22:48.946 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bfa618c
[DEBUG] 2020-02-28 15:22:48.947 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6762035e
[DEBUG] 2020-02-28 15:22:48.947 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6762035e
[DEBUG] 2020-02-28 15:22:48.948 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@dfa9400
[DEBUG] 2020-02-28 15:22:48.948 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@dfa9400
[DEBUG] 2020-02-28 15:22:48.949 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6bd9b4e8
[DEBUG] 2020-02-28 15:22:48.949 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6bd9b4e8
[DEBUG] 2020-02-28 15:22:48.949 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52b7a63f
[DEBUG] 2020-02-28 15:22:48.950 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52b7a63f
[DEBUG] 2020-02-28 15:22:48.950 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@56a5a10
[DEBUG] 2020-02-28 15:22:48.950 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56a5a10
[DEBUG] 2020-02-28 15:22:48.951 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@701eecc2
[DEBUG] 2020-02-28 15:22:48.951 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@701eecc2
[DEBUG] 2020-02-28 15:22:48.951 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b2c8b33
[DEBUG] 2020-02-28 15:22:48.952 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b2c8b33
[DEBUG] 2020-02-28 15:22:48.952 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b2c8b33
[DEBUG] 2020-02-28 15:22:48.952 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b89d4ca
[DEBUG] 2020-02-28 15:22:48.953 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@58843933
[DEBUG] 2020-02-28 15:22:48.953 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58843933
[DEBUG] 2020-02-28 15:22:48.953 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58843933
[DEBUG] 2020-02-28 15:22:48.953 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50bb5655
[DEBUG] 2020-02-28 15:22:48.954 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7041019c
[DEBUG] 2020-02-28 15:22:48.954 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7041019c
[DEBUG] 2020-02-28 15:22:48.955 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@165aee04
[DEBUG] 2020-02-28 15:22:48.955 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@165aee04
[DEBUG] 2020-02-28 15:22:48.955 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@696ac1d
[DEBUG] 2020-02-28 15:22:48.955 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@696ac1d
[DEBUG] 2020-02-28 15:22:48.956 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@16e30d3a
[DEBUG] 2020-02-28 15:22:48.956 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@16e30d3a
[DEBUG] 2020-02-28 15:22:48.956 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2fa1730a
[DEBUG] 2020-02-28 15:22:48.956 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2fa1730a
[DEBUG] 2020-02-28 15:22:48.957 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@27b045f6
[DEBUG] 2020-02-28 15:22:48.957 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1811129c
[DEBUG] 2020-02-28 15:22:48.957 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1811129c
[DEBUG] 2020-02-28 15:22:48.957 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1811129c
[DEBUG] 2020-02-28 15:22:48.958 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a5acdba
[DEBUG] 2020-02-28 15:22:48.958 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a5acdba
[DEBUG] 2020-02-28 15:22:48.958 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a5acdba
[DEBUG] 2020-02-28 15:22:48.958 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fa39632
[DEBUG] 2020-02-28 15:22:48.959 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@33ae112e
[DEBUG] 2020-02-28 15:22:48.959 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@29b2e9de
[DEBUG] 2020-02-28 15:22:48.960 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@29b2e9de
[DEBUG] 2020-02-28 15:22:48.960 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@29b2e9de
[DEBUG] 2020-02-28 15:22:48.960 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6bea1dcd
[DEBUG] 2020-02-28 15:22:48.960 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6bea1dcd
[DEBUG] 2020-02-28 15:22:48.960 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6bea1dcd
[DEBUG] 2020-02-28 15:22:48.960 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3392be2a
[DEBUG] 2020-02-28 15:22:48.961 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5e7a8d51
[DEBUG] 2020-02-28 15:22:48.961 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@47c2c973
[DEBUG] 2020-02-28 15:22:48.961 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47c2c973
[DEBUG] 2020-02-28 15:22:48.962 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35b1b3
[DEBUG] 2020-02-28 15:22:48.962 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7ddf2cd1
[DEBUG] 2020-02-28 15:22:48.962 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7ddf2cd1
[DEBUG] 2020-02-28 15:22:48.963 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5ff3d65a
[DEBUG] 2020-02-28 15:22:48.963 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ff3d65a
[DEBUG] 2020-02-28 15:22:48.963 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41e4c2e8
[DEBUG] 2020-02-28 15:22:48.966 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1b86eead
[DEBUG] 2020-02-28 15:22:48.967 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@523cfa92
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2efffbc7
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2efffbc7
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c95b38c
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4b06da4f
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a69c8a4
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3daaffa9
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c722243
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@115b4920
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65838f47
[DEBUG] 2020-02-28 15:22:48.971 [http-nio-8080-exec-60] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fbe73e9
[DEBUG] 2020-02-28 15:22:48.997 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:22:48.998 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:22:48.998 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:22:48.998 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:22:48.999 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:22:48.999 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:22:48.999 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:22:49.000 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:22:49.001 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:22:49.001 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:22:49.001 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:22:49.001 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:22:49.001 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:22:49.002 [http-nio-8080-exec-60] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:22:49.006 [http-nio-8080-exec-60] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:22:49.006 [http-nio-8080-exec-60] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:22:49.006 [http-nio-8080-exec-60] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:22:49.149 [http-nio-8080-exec-60] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:22:49.386 [http-nio-8080-exec-60] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:22:49.386 [http-nio-8080-exec-60] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:22:49.386 [http-nio-8080-exec-60] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:22:49.402 [http-nio-8080-exec-60] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:22:49.420 [http-nio-8080-exec-60] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:22:49.456 [http-nio-8080-exec-60] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:22:49.504 [http-nio-8080-exec-60] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:22:49.506 [http-nio-8080-exec-60] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@513e7e64] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3879f7f]
[DEBUG] 2020-02-28 15:22:49.556 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.569 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.572 [http-nio-8080-exec-60] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:22:49.574 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:22:49.601 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.605 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:22:49.607 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:22:49.609 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:22:49.611 [http-nio-8080-exec-60] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:22:49.613 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.614 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.614 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:22:49.614 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:22:49.614 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:22:49.615 [http-nio-8080-exec-60] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:22:49.616 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.618 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:22:49.619 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:22:49.619 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:22:49.619 [http-nio-8080-exec-60] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:22:49.620 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:22:49.621 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.621 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:22:49.621 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.621 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.621 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.621 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:22:49.622 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:22:49.622 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:22:49.622 [http-nio-8080-exec-60] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:22:49.623 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.624 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.625 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.635 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.636 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.636 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.637 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.637 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.638 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:22:49.641 [http-nio-8080-exec-60] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:22:49.641 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.642 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:22:49.643 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.644 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.645 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.646 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.646 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.646 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.646 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.646 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:22:49.647 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:22:49.647 [http-nio-8080-exec-60] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:22:49.647 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.647 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.647 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:22:49.648 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:22:49.648 [http-nio-8080-exec-60] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:22:49.648 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:22:49.648 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:22:49.648 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:22:49.648 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:22:49.651 [http-nio-8080-exec-60] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:22:49.656 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:22:49.656 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.656 [http-nio-8080-exec-60] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:22:49.656 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:22:49.661 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.661 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:22:49.661 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:22:49.661 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:22:49.661 [http-nio-8080-exec-60] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:22:49.661 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.662 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.662 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.662 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:22:49.662 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.662 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.670 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.670 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:22:49.670 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:22:49.670 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:22:49.670 [http-nio-8080-exec-60] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:22:49.671 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.671 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.672 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:22:49.672 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.672 [http-nio-8080-exec-60] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:22:49.673 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.673 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.675 [http-nio-8080-exec-60] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:22:49.675 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:22:49.676 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.676 [http-nio-8080-exec-60] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:22:49.676 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:22:49.710 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:22:49.711 [http-nio-8080-exec-60] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:22:49.712 [http-nio-8080-exec-60] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:49.713 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.714 [http-nio-8080-exec-60] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:22:49.714 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:22:49.715 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:22:49.716 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.717 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.717 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.717 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:22:49.717 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:22:49.717 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:22:49.717 [http-nio-8080-exec-60] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.718 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:22:49.719 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.719 [http-nio-8080-exec-60] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:22:49.719 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.719 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.719 [http-nio-8080-exec-60] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:22:49.719 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.720 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:22:49.721 [http-nio-8080-exec-60] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.722 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.724 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.724 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.724 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.724 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:22:49.724 [http-nio-8080-exec-60] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:22:49.724 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.725 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.726 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:22:49.727 [http-nio-8080-exec-60] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:22:49.728 [http-nio-8080-exec-60] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:22:49.731 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.736 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:22:49.736 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:22:49.736 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:22:49.736 [http-nio-8080-exec-60] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:22:49.737 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:22:49.738 [http-nio-8080-exec-60] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:22:49.742 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:22:49.742 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:22:49.742 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:22:49.742 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.742 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:22:49.743 [http-nio-8080-exec-60] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:22:49.750 [http-nio-8080-exec-60] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:22:49.751 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:22:49.751 [http-nio-8080-exec-60] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:22:49.753 [http-nio-8080-exec-60] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:22:49.754 [http-nio-8080-exec-60] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:22:49.754 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:22:49.758 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:22:49.759 [http-nio-8080-exec-60] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:22:49.765 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:22:49.766 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.768 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.768 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:49.768 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.768 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:49.768 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.769 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.769 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.772 [http-nio-8080-exec-60] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.809 [http-nio-8080-exec-60] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:22:49.810 [http-nio-8080-exec-60] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:22:49.811 [http-nio-8080-exec-60] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:22:49.811 [http-nio-8080-exec-60] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:22:49.811 [http-nio-8080-exec-60] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:22:49.866 [http-nio-8080-exec-60] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:22:49.881 [http-nio-8080-exec-60] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:22:49.881 [http-nio-8080-exec-60] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@54b0cb69, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:22:49.898 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:22:49.898 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:22:49.899 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:22:49.900 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:22:49.900 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:49.900 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:22:49.900 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:49.902 [http-nio-8080-exec-60] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:22:49.903 [http-nio-8080-exec-60] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:22:49.903 [http-nio-8080-exec-60] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@513e7e64] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4a7d442f]
[DEBUG] 2020-02-28 15:22:49.936 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:22:49.936 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:49.947 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:22:49.947 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:50.229 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:22:50.229 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:22:50.229 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:22:50.229 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:22:50.247 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:22:50.247 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:22:50.247 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:22:50.247 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:22:50.254 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:22:50.254 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:50.254 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:22:50.254 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:50.266 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:22:50.266 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:22:50.266 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:22:50.266 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:22:50.281 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:22:50.281 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:50.284 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:22:50.284 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:50.311 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:22:50.312 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:50.312 [http-nio-8080-exec-60] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:22:50.312 [http-nio-8080-exec-60] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:22:50.340 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:22:50.341 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:22:50.341 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:22:50.341 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:22:50.341 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:22:50.341 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:22:50.341 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:22:50.342 [http-nio-8080-exec-60] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:22:50.344 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.367 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22115cb7]
[DEBUG] 2020-02-28 15:22:50.368 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.368 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.368 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:22:50.375 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@eed5507]
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44559f78]
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52a26003]
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ff38ef]
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.377 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28c4dcad]
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3090ff]
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328b471b]
[DEBUG] 2020-02-28 15:22:50.378 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6666f641]
[DEBUG] 2020-02-28 15:22:50.379 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ebdc609]
[DEBUG] 2020-02-28 15:22:50.380 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a9060f]
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2206bdf4]
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.381 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.382 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6166cea2]
[DEBUG] 2020-02-28 15:22:50.383 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.383 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.384 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.399 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.404 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4379d2dd]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ea31608]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd06f11]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30b2ad4c]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242284b3]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297c569]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@197c98cc]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294b804c]
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.406 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15cbb481]
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ac9307]
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65f0b1b0]
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@240522a2]
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22c40451]
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.407 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.408 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.408 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:22:50.427 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbc0de1]
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22966cbe]
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a79cae8]
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59eed38a]
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@488cb795]
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31b54c80]
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:22:50.428 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@771f35bc]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c55b693]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@66765c83]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22891ae5]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376f1bbb]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5aa93ab0]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77250965]
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.429 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38d866f9]
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629c9ff6]
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5556404a]
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b30639]
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3806efcd]
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:22:50.430 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616f64a5]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2551de61]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@583b995b]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a5dbff]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@682cb73c]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e681b9]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72133f7f]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f8468e1]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@129cb97a]
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.431 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b363c67]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70e9b67a]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2355211]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4973d75f]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7494e26d]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2831ff6a]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c95a7]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@572273d0]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4f664d3]
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.432 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476e39e1]
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34f14262]
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f1d9225]
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798a1b16]
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77814c15]
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542e647a]
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.433 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dd58742]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269a66e2]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@500eb30c]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a31c1e]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d7bd09e]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9395fd]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fa0d970]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f436b76]
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.434 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@63c7d454]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ece6ed]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e8d400c]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@701f5c1a]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69895ad4]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d80eac9]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d6f957]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e23825b]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddf2eb1]
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.435 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@26ef6f0b]
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:22:50.436 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9476a5]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6692de49]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f44c235]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5369b626]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0135cc]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b11c673]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223df24e]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b812a4c]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e31ef0]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67bc4065]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9da3a6f]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@126a64cd]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7c7ba]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cb69c0b]
[DEBUG] 2020-02-28 15:22:50.437 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7d2fd6]
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ff076d8]
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3590ba8b]
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76405635]
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4634fe94]
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ac1212a]
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:22:50.438 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:22:50.440 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42bff53]
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22f07104]
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75870a0b]
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e0db28f]
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13f7d6b0]
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e6d5197]
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.441 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.442 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:22:50.442 [http-nio-8080-exec-60] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:22:50.442 [http-nio-8080-exec-60] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:22:50.442 [http-nio-8080-exec-60] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48a6158d]
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ab522bf]
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.448 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.449 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a7bd979]
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cc32728]
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:22:50.450 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.451 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b6a58a9]
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e05d48b]
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.454 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@411045aa]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7181708f]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4285e27f]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@387ae7a8]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45fc9b99]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@777492df]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185c6c3e]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39dd0cff]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bdfbe7a]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@86e2db4]
[DEBUG] 2020-02-28 15:22:50.455 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73289d1b]
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2243cd75]
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.456 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e880609]
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b72538c]
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b1c82f6]
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@723b482a]
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.457 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb2b1b9]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@154a0c9e]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d986c05]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@746e3d76]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2b3916]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a40f291]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74c65f98]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@714649fb]
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.458 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a6a9f41]
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c96270b]
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.459 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f5526f0]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3266e26e]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@762898d2]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@735861eb]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5144a482]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6123d078]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18419e8]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204cf675]
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:22:50.460 [http-nio-8080-exec-60] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:22:50.493 [http-nio-8080-exec-60] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:22:50.493 [http-nio-8080-exec-60] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:22:50.497 [http-nio-8080-exec-60] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:22:50.502 [http-nio-8080-exec-60] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:22:50.502 [http-nio-8080-exec-60] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:22:50.503 [http-nio-8080-exec-60] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:22:50.503 [http-nio-8080-exec-60] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:22:50.504 [http-nio-8080-exec-60] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6afd7d8b
[DEBUG] 2020-02-28 15:22:50.506 [http-nio-8080-exec-60] SessionFactoryRegistry - Registering SessionFactory: 03afa836-521f-42ef-8d0e-503a60cc1ff9 (<unnamed>)
[DEBUG] 2020-02-28 15:22:50.506 [http-nio-8080-exec-60] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:22:50.574 [http-nio-8080-exec-60] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:22:50.603 [http-nio-8080-exec-60] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:22:50.624 [http-nio-8080-exec-60] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@78beabfc
[DEBUG] 2020-02-28 15:22:50.643 [http-nio-8080-exec-60] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:22:50.665 [http-nio-8080-exec-60] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:22:50.670 [http-nio-8080-exec-60] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:22:50.696 [http-nio-8080-exec-60] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:22:50.705 [http-nio-8080-exec-60] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:22:50.706 [http-nio-8080-exec-60] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:22:50.707 [http-nio-8080-exec-60] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:22:50.707 [http-nio-8080-exec-60] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:22:50.716 [http-nio-8080-exec-60] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:22:50.716 [http-nio-8080-exec-60] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:22:50.716 [http-nio-8080-exec-60] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:22:50.716 [http-nio-8080-exec-60] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:22:50.720 [http-nio-8080-exec-60] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:22:50.720 [http-nio-8080-exec-60] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:22:50.720 [http-nio-8080-exec-60] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:22:50.729 [http-nio-8080-exec-60] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:22:50.751 [http-nio-8080-exec-60] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:22:50.754 [http-nio-8080-exec-60] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:22:50.762 [http-nio-8080-exec-60] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:22:50.762 [http-nio-8080-exec-60] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:22:50.763 [http-nio-8080-exec-60] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:22:50.763 [http-nio-8080-exec-60] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:22:50.764 [http-nio-8080-exec-60] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:22:50.765 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.768 [http-nio-8080-exec-60] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:22:50.771 [http-nio-8080-exec-60] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:22:50.771 [http-nio-8080-exec-60] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:22:50.773 [http-nio-8080-exec-60] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:50.778 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@583a5a4
[DEBUG] 2020-02-28 15:22:50.779 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:22:50.780 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.781 [http-nio-8080-exec-60] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:22:50.781 [http-nio-8080-exec-60] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:22:50.782 [http-nio-8080-exec-60] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:22:50.782 [http-nio-8080-exec-60] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] Loader - Done entity load
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:50.783 [http-nio-8080-exec-60] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:50.784 [http-nio-8080-exec-60] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:22:50.785 [http-nio-8080-exec-60] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:22:52.281 [http-nio-8080-exec-66] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:22:52.288 [http-nio-8080-exec-66] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:22:52.288 [http-nio-8080-exec-66] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:22:52.289 [http-nio-8080-exec-66] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:22:52.289 [http-nio-8080-exec-66] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:52.290 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@313990ef
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:22:52.291 [http-nio-8080-exec-66] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] Loader - Done entity load
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:22:52.294 [http-nio-8080-exec-66] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:24:34.564 [http-nio-8080-exec-75] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:24:34.568 [http-nio-8080-exec-75] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:24:34.575 [http-nio-8080-exec-75] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:24:34.665 [http-nio-8080-exec-75] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:24:34.666 [http-nio-8080-exec-75] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:24:34.759 [http-nio-8080-exec-75] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:24:34.762 [http-nio-8080-exec-75] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:24:34.764 [http-nio-8080-exec-75] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:24:34.929 [http-nio-8080-exec-75] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:24:34.948 [http-nio-8080-exec-75] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:24:34.948 [http-nio-8080-exec-75] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:24:34.964 [http-nio-8080-exec-75] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:24:34.989 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12263d5
[DEBUG] 2020-02-28 15:24:34.989 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12263d5
[DEBUG] 2020-02-28 15:24:34.989 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12263d5
[DEBUG] 2020-02-28 15:24:34.989 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17e84341
[DEBUG] 2020-02-28 15:24:34.990 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@562f8d80
[DEBUG] 2020-02-28 15:24:34.990 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@54ad2ac1
[DEBUG] 2020-02-28 15:24:34.990 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c36eec3
[DEBUG] 2020-02-28 15:24:34.990 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c36eec3
[DEBUG] 2020-02-28 15:24:34.990 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c36eec3
[DEBUG] 2020-02-28 15:24:34.992 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2c07bb9c
[DEBUG] 2020-02-28 15:24:34.992 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2c07bb9c
[DEBUG] 2020-02-28 15:24:34.992 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c07bb9c
[DEBUG] 2020-02-28 15:24:34.994 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@56830096
[DEBUG] 2020-02-28 15:24:34.994 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@56830096
[DEBUG] 2020-02-28 15:24:34.994 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56830096
[DEBUG] 2020-02-28 15:24:34.994 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@62f13eb5
[DEBUG] 2020-02-28 15:24:34.994 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@62f13eb5
[DEBUG] 2020-02-28 15:24:34.994 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62f13eb5
[DEBUG] 2020-02-28 15:24:34.995 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@527803fb
[DEBUG] 2020-02-28 15:24:34.995 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@527803fb
[DEBUG] 2020-02-28 15:24:34.995 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@527803fb
[DEBUG] 2020-02-28 15:24:34.995 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6aa702ae
[DEBUG] 2020-02-28 15:24:34.995 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6aa702ae
[DEBUG] 2020-02-28 15:24:34.995 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6aa702ae
[DEBUG] 2020-02-28 15:24:34.996 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4735b56a
[DEBUG] 2020-02-28 15:24:34.996 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4735b56a
[DEBUG] 2020-02-28 15:24:34.996 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4735b56a
[DEBUG] 2020-02-28 15:24:34.996 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d35b54f
[DEBUG] 2020-02-28 15:24:34.996 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d35b54f
[DEBUG] 2020-02-28 15:24:34.997 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@40ebe0e3
[DEBUG] 2020-02-28 15:24:34.997 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@40ebe0e3
[DEBUG] 2020-02-28 15:24:34.997 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@78fab34f
[DEBUG] 2020-02-28 15:24:34.997 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@78fab34f
[DEBUG] 2020-02-28 15:24:34.998 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f5470e2
[DEBUG] 2020-02-28 15:24:34.998 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5c1a7b9
[DEBUG] 2020-02-28 15:24:34.998 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@222bd731
[DEBUG] 2020-02-28 15:24:34.998 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@222bd731
[DEBUG] 2020-02-28 15:24:34.999 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@313a9412
[DEBUG] 2020-02-28 15:24:34.999 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@313a9412
[DEBUG] 2020-02-28 15:24:35.000 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@60aac5d3
[DEBUG] 2020-02-28 15:24:35.000 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@60aac5d3
[DEBUG] 2020-02-28 15:24:35.001 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@199e95b0
[DEBUG] 2020-02-28 15:24:35.001 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@199e95b0
[DEBUG] 2020-02-28 15:24:35.001 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61c08822
[DEBUG] 2020-02-28 15:24:35.001 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61c08822
[DEBUG] 2020-02-28 15:24:35.002 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@e684d8b
[DEBUG] 2020-02-28 15:24:35.002 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@e684d8b
[DEBUG] 2020-02-28 15:24:35.003 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@311da4e6
[DEBUG] 2020-02-28 15:24:35.003 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@311da4e6
[DEBUG] 2020-02-28 15:24:35.004 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@25780aae
[DEBUG] 2020-02-28 15:24:35.004 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@25780aae
[DEBUG] 2020-02-28 15:24:35.006 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19a9ebf
[DEBUG] 2020-02-28 15:24:35.006 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19a9ebf
[DEBUG] 2020-02-28 15:24:35.007 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2360904c
[DEBUG] 2020-02-28 15:24:35.007 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2360904c
[DEBUG] 2020-02-28 15:24:35.008 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@27292390
[DEBUG] 2020-02-28 15:24:35.008 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27292390
[DEBUG] 2020-02-28 15:24:35.009 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@39ef1247
[DEBUG] 2020-02-28 15:24:35.010 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@39ef1247
[DEBUG] 2020-02-28 15:24:35.010 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@39ef1247
[DEBUG] 2020-02-28 15:24:35.011 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@24e59cbb
[DEBUG] 2020-02-28 15:24:35.012 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2d061652
[DEBUG] 2020-02-28 15:24:35.012 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d061652
[DEBUG] 2020-02-28 15:24:35.012 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d061652
[DEBUG] 2020-02-28 15:24:35.013 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64de652f
[DEBUG] 2020-02-28 15:24:35.014 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@68a8d8ec
[DEBUG] 2020-02-28 15:24:35.014 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@68a8d8ec
[DEBUG] 2020-02-28 15:24:35.015 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@634874ed
[DEBUG] 2020-02-28 15:24:35.015 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@634874ed
[DEBUG] 2020-02-28 15:24:35.015 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@36d5dd36
[DEBUG] 2020-02-28 15:24:35.015 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@36d5dd36
[DEBUG] 2020-02-28 15:24:35.016 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1bba4b59
[DEBUG] 2020-02-28 15:24:35.016 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bba4b59
[DEBUG] 2020-02-28 15:24:35.016 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6513da9a
[DEBUG] 2020-02-28 15:24:35.016 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6513da9a
[DEBUG] 2020-02-28 15:24:35.017 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f580dfc
[DEBUG] 2020-02-28 15:24:35.017 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7a01131c
[DEBUG] 2020-02-28 15:24:35.017 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7a01131c
[DEBUG] 2020-02-28 15:24:35.017 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7a01131c
[DEBUG] 2020-02-28 15:24:35.018 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e026611
[DEBUG] 2020-02-28 15:24:35.018 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e026611
[DEBUG] 2020-02-28 15:24:35.018 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e026611
[DEBUG] 2020-02-28 15:24:35.018 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@e613438
[DEBUG] 2020-02-28 15:24:35.018 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@546338c8
[DEBUG] 2020-02-28 15:24:35.019 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2b34abd9
[DEBUG] 2020-02-28 15:24:35.019 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2b34abd9
[DEBUG] 2020-02-28 15:24:35.019 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2b34abd9
[DEBUG] 2020-02-28 15:24:35.019 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@936b5cc
[DEBUG] 2020-02-28 15:24:35.019 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@936b5cc
[DEBUG] 2020-02-28 15:24:35.019 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@936b5cc
[DEBUG] 2020-02-28 15:24:35.020 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@43acc80
[DEBUG] 2020-02-28 15:24:35.020 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@476d165b
[DEBUG] 2020-02-28 15:24:35.021 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4635130
[DEBUG] 2020-02-28 15:24:35.021 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4635130
[DEBUG] 2020-02-28 15:24:35.022 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d77551c
[DEBUG] 2020-02-28 15:24:35.023 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6080d5f5
[DEBUG] 2020-02-28 15:24:35.023 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6080d5f5
[DEBUG] 2020-02-28 15:24:35.025 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@45379993
[DEBUG] 2020-02-28 15:24:35.025 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45379993
[DEBUG] 2020-02-28 15:24:35.025 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@667c9770
[DEBUG] 2020-02-28 15:24:35.026 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2aed385a
[DEBUG] 2020-02-28 15:24:35.028 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@52dea91b
[DEBUG] 2020-02-28 15:24:35.030 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@30aacae8
[DEBUG] 2020-02-28 15:24:35.030 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30aacae8
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@def903c
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3662982b
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b04e47c
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@176da0d6
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@66f2ac77
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4473c342
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3828e8b4
[DEBUG] 2020-02-28 15:24:35.031 [http-nio-8080-exec-75] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42b99477
[DEBUG] 2020-02-28 15:24:35.065 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:24:35.066 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:24:35.066 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:24:35.068 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:24:35.074 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:24:35.075 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:24:35.075 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:24:35.076 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:24:35.080 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:24:35.083 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:24:35.084 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:24:35.084 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:24:35.084 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:24:35.086 [http-nio-8080-exec-75] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:24:35.097 [http-nio-8080-exec-75] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:24:35.097 [http-nio-8080-exec-75] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:24:35.098 [http-nio-8080-exec-75] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:24:35.247 [http-nio-8080-exec-75] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:24:35.458 [http-nio-8080-exec-75] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:24:35.464 [http-nio-8080-exec-75] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:24:35.464 [http-nio-8080-exec-75] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:24:35.488 [http-nio-8080-exec-75] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:24:35.512 [http-nio-8080-exec-75] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:24:35.533 [http-nio-8080-exec-75] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:24:35.558 [http-nio-8080-exec-75] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:24:35.561 [http-nio-8080-exec-75] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1dcc59f3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45be7cb6]
[DEBUG] 2020-02-28 15:24:35.604 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.619 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.624 [http-nio-8080-exec-75] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:24:35.627 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:24:35.645 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.647 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:24:35.648 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:24:35.650 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:24:35.651 [http-nio-8080-exec-75] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:24:35.664 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.665 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.665 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:24:35.665 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:24:35.665 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:24:35.665 [http-nio-8080-exec-75] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:24:35.665 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:24:35.666 [http-nio-8080-exec-75] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:24:35.667 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.668 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.669 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.675 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.676 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.676 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.676 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.676 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.677 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:24:35.680 [http-nio-8080-exec-75] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:24:35.680 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.680 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:24:35.681 [http-nio-8080-exec-75] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.682 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:24:35.683 [http-nio-8080-exec-75] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:24:35.684 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:24:35.684 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:24:35.684 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:24:35.684 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:24:35.684 [http-nio-8080-exec-75] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:24:35.697 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:24:35.697 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.697 [http-nio-8080-exec-75] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:24:35.697 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.699 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.700 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:24:35.700 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.700 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.704 [http-nio-8080-exec-75] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:24:35.705 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.705 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.706 [http-nio-8080-exec-75] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:24:35.709 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:24:35.715 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.716 [http-nio-8080-exec-75] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:24:35.716 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:24:35.719 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.719 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:24:35.720 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:24:35.721 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:24:35.722 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.723 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.724 [http-nio-8080-exec-75] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:24:35.724 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.724 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:24:35.724 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:24:35.724 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:24:35.724 [http-nio-8080-exec-75] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:24:35.725 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:35.725 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.725 [http-nio-8080-exec-75] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:24:35.725 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:24:35.729 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.729 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:24:35.729 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:24:35.729 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:24:35.729 [http-nio-8080-exec-75] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:24:35.729 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:24:35.730 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:24:35.731 [http-nio-8080-exec-75] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:24:35.732 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.732 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.732 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:24:35.736 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.740 [http-nio-8080-exec-75] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:24:35.741 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.741 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.741 [http-nio-8080-exec-75] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:24:35.741 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.746 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:24:35.747 [http-nio-8080-exec-75] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:24:35.748 [http-nio-8080-exec-75] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:24:35.749 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:24:35.750 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:24:35.752 [http-nio-8080-exec-75] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:24:35.752 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.752 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.752 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:24:35.752 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.753 [http-nio-8080-exec-75] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:24:35.753 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:24:35.753 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.753 [http-nio-8080-exec-75] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:24:35.753 [http-nio-8080-exec-75] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:35.754 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:24:35.754 [http-nio-8080-exec-75] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:24:35.754 [http-nio-8080-exec-75] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:24:35.756 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.756 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:24:35.756 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:24:35.756 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:24:35.758 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:24:35.759 [http-nio-8080-exec-75] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:24:35.764 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:24:35.765 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:24:35.766 [http-nio-8080-exec-75] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:24:35.770 [http-nio-8080-exec-75] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:24:35.771 [http-nio-8080-exec-75] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:24:35.773 [http-nio-8080-exec-75] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:24:35.773 [http-nio-8080-exec-75] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:24:35.773 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:24:35.773 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:24:35.774 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:24:35.779 [http-nio-8080-exec-75] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:24:35.780 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.781 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.783 [http-nio-8080-exec-75] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.881 [http-nio-8080-exec-75] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:24:35.882 [http-nio-8080-exec-75] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:24:35.934 [http-nio-8080-exec-75] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:24:35.963 [http-nio-8080-exec-75] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:24:35.964 [http-nio-8080-exec-75] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f566ef9, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:24:35.985 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:24:35.985 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:35.987 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:24:35.987 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:24:35.988 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:24:35.988 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:24:35.989 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:24:35.989 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:35.989 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:24:35.989 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:24:35.990 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:24:35.990 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:35.991 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:24:35.991 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:35.995 [http-nio-8080-exec-75] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:24:35.996 [http-nio-8080-exec-75] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:24:35.996 [http-nio-8080-exec-75] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1dcc59f3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@b0ee314]
[DEBUG] 2020-02-28 15:24:36.027 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:24:36.027 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:36.034 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:24:36.034 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:36.206 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:24:36.207 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:24:36.207 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:24:36.207 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:24:36.220 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:24:36.220 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:24:36.220 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:24:36.220 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:24:36.230 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:24:36.230 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:36.230 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:24:36.230 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:36.242 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:24:36.242 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:24:36.242 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:24:36.242 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:24:36.263 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:24:36.263 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:36.267 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:24:36.267 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:36.316 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:24:36.316 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:36.316 [http-nio-8080-exec-75] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:24:36.316 [http-nio-8080-exec-75] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:36.334 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:24:36.335 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:24:36.339 [http-nio-8080-exec-75] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:24:36.343 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:24:36.343 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:24:36.343 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:24:36.344 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.344 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:24:36.344 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:24:36.344 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.365 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54b51d7b]
[DEBUG] 2020-02-28 15:24:36.366 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.366 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.366 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:24:36.368 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7790285d]
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@391d255b]
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2582f248]
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cceef31]
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.371 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.372 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da2165a]
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@347ed1e0]
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1cb757]
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.373 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7aef150]
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@199648fd]
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:24:36.374 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:24:36.375 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.375 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4239c5de]
[DEBUG] 2020-02-28 15:24:36.375 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fb2e9ed]
[DEBUG] 2020-02-28 15:24:36.375 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.375 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.375 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.376 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@636c2cc6]
[DEBUG] 2020-02-28 15:24:36.379 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.379 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.379 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.389 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.395 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0f3d2e]
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c9b0a56]
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d7f0b2]
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@406259ab]
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76caf38a]
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b79ebf]
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.396 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cb41758]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d43f5e7]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63ffd296]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4034daae]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43be23a4]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b960d7]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@49aa3874]
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.397 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.398 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.398 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:24:36.413 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed8de79]
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4ce7e4]
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@303af60f]
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3bad81]
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.414 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56631605]
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60affa3e]
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69a8e9ab]
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@764980aa]
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@668eeb7b]
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.415 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.416 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@477ca840]
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cced53c]
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18b8f474]
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34781f32]
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.418 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e855bb4]
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3716f189]
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@187b1b27]
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18612b18]
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@650cd8bf]
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.419 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.423 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.423 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437fea7]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d5c7ee]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42af8de9]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3ac0c2]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16e8885c]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b46ffa5]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6538e1e1]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7c0154]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4f04c0cf]
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.424 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c66f3f]
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a61d0c]
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19ec866c]
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f7a79b]
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d1c85f4]
[DEBUG] 2020-02-28 15:24:36.425 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b865784]
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76a46f7e]
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435ac54e]
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.431 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.432 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@aa0cbf4]
[DEBUG] 2020-02-28 15:24:36.432 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.432 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.433 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.434 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.434 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:24:36.434 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:24:36.436 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:24:36.437 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.438 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66a9c1c6]
[DEBUG] 2020-02-28 15:24:36.438 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.438 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:24:36.438 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.439 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f3f920e]
[DEBUG] 2020-02-28 15:24:36.439 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50890ba5]
[DEBUG] 2020-02-28 15:24:36.439 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.439 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.439 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.439 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78864783]
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68b24bac]
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70fea13c]
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.446 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.447 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.447 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.447 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:24:36.447 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:24:36.448 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a0e4aff]
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.449 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b474923]
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@162404bd]
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@230ff19e]
[DEBUG] 2020-02-28 15:24:36.450 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4260aa8d]
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338572b3]
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5329992]
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ed0bab]
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:24:36.451 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1779e81a]
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.452 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fb99b35]
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.453 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.454 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.454 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.462 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2102e708]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44b769b8]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fa93f1]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14f60a01]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72d6cc49]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dd39102]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b40fe52]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@a78a7f9]
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.463 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.464 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:24:36.464 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:24:36.464 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:24:36.464 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b9002f8]
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c5267e5]
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f530cf]
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24972cb]
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@633ae983]
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c38d74e]
[DEBUG] 2020-02-28 15:24:36.466 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cdbfd4e]
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bc7af27]
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6835169c]
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@551cb405]
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.468 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e915800]
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:24:36.469 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:24:36.473 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2edc07eb]
[DEBUG] 2020-02-28 15:24:36.473 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2da3be57]
[DEBUG] 2020-02-28 15:24:36.473 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79a6a2bb]
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664cbcc3]
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28e11cbe]
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18005ef3]
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77f26262]
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d1f4da9]
[DEBUG] 2020-02-28 15:24:36.474 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45e98a3c]
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:24:36.475 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:24:36.476 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:24:36.476 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f18494b]
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f232da5]
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1737243d]
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.488 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a686581]
[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.489 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b1e6f01]
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75a6ae93]
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:24:36.490 [http-nio-8080-exec-75] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:24:36.496 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3de48d4c]
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134aed95]
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.497 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:24:36.498 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.498 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.499 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@691aaa98]
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6931410c]
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.500 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.501 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:24:36.501 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:24:36.501 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38f37717]
[DEBUG] 2020-02-28 15:24:36.501 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba96824]
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.503 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.507 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:24:36.507 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51029338]
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41fa3974]
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d697f07]
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc8c247]
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.508 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608c39eb]
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@534a7b1d]
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28eb51c9]
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2929765e]
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7193eaea]
[DEBUG] 2020-02-28 15:24:36.509 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7101f556]
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31697a6]
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@616f9a1c]
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.510 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.511 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b08b5ea]
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad55156]
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:24:36.512 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f88bde9]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ff704af]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@227b4a45]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5687791e]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f2cd1d]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9a38804]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72b691d7]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f145916]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7869f5cc]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d9fb16d]
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.513 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16808db3]
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2170cd3a]
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:24:36.514 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5255d5e]
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@221b59dd]
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e9bbfb1]
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b6c00e]
[DEBUG] 2020-02-28 15:24:36.515 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61ed0913]
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71cb0390]
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c82955]
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c663fc]
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:24:36.516 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:24:36.518 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:24:36.519 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:24:36.519 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:24:36.519 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:24:36.519 [http-nio-8080-exec-75] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:24:36.519 [http-nio-8080-exec-75] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:24:36.519 [http-nio-8080-exec-75] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:24:36.520 [http-nio-8080-exec-75] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:24:36.520 [http-nio-8080-exec-75] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:24:36.520 [http-nio-8080-exec-75] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:24:36.601 [http-nio-8080-exec-75] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:24:36.601 [http-nio-8080-exec-75] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:24:36.601 [http-nio-8080-exec-75] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:24:36.606 [http-nio-8080-exec-75] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:24:36.607 [http-nio-8080-exec-75] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:24:36.609 [http-nio-8080-exec-75] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:24:36.609 [http-nio-8080-exec-75] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:24:36.611 [http-nio-8080-exec-75] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@40e92c57
[DEBUG] 2020-02-28 15:24:36.613 [http-nio-8080-exec-75] SessionFactoryRegistry - Registering SessionFactory: f6cc8ad1-dd23-4773-9cc9-01982c45c387 (<unnamed>)
[DEBUG] 2020-02-28 15:24:36.613 [http-nio-8080-exec-75] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:24:36.802 [http-nio-8080-exec-75] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:24:36.824 [http-nio-8080-exec-75] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:24:36.837 [http-nio-8080-exec-75] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1b8273e9
[DEBUG] 2020-02-28 15:24:36.854 [http-nio-8080-exec-75] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:24:36.857 [http-nio-8080-exec-75] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:24:36.861 [http-nio-8080-exec-75] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:24:36.876 [http-nio-8080-exec-75] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:24:36.888 [http-nio-8080-exec-75] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:24:36.888 [http-nio-8080-exec-75] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:24:36.890 [http-nio-8080-exec-75] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:24:36.890 [http-nio-8080-exec-75] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:24:36.898 [http-nio-8080-exec-75] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:24:36.898 [http-nio-8080-exec-75] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:24:36.898 [http-nio-8080-exec-75] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:24:36.898 [http-nio-8080-exec-75] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:24:36.909 [http-nio-8080-exec-75] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:24:36.909 [http-nio-8080-exec-75] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:24:36.909 [http-nio-8080-exec-75] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:24:36.921 [http-nio-8080-exec-75] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:24:36.942 [http-nio-8080-exec-75] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:24:36.946 [http-nio-8080-exec-75] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:24:36.953 [http-nio-8080-exec-75] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:24:36.953 [http-nio-8080-exec-75] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:24:36.954 [http-nio-8080-exec-75] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:24:36.954 [http-nio-8080-exec-75] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:24:36.955 [http-nio-8080-exec-75] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:24:36.956 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.961 [http-nio-8080-exec-75] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:24:36.965 [http-nio-8080-exec-75] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:24:36.966 [http-nio-8080-exec-75] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:24:36.973 [http-nio-8080-exec-75] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:24:36.981 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:24:36.982 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.984 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:24:36.984 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.985 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:24:36.985 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.985 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:24:36.985 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.985 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2e0bae3c
[DEBUG] 2020-02-28 15:24:36.986 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.987 [http-nio-8080-exec-75] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:24:36.987 [http-nio-8080-exec-75] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:24:36.987 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:24:36.988 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.989 [http-nio-8080-exec-75] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:24:36.989 [http-nio-8080-exec-75] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:24:36.992 [http-nio-8080-exec-75] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:24:36.993 [http-nio-8080-exec-75] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:24:36.993 [http-nio-8080-exec-75] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:24:36.993 [http-nio-8080-exec-75] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:24:36.993 [http-nio-8080-exec-75] Loader - Done entity load
[DEBUG] 2020-02-28 15:24:36.994 [http-nio-8080-exec-75] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:24:36.994 [http-nio-8080-exec-75] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:24:36.994 [http-nio-8080-exec-75] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:24:36.994 [http-nio-8080-exec-75] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:24:36.995 [http-nio-8080-exec-75] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:24:36.996 [http-nio-8080-exec-75] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:26:06.254 [http-nio-8080-exec-82] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:26:06.259 [http-nio-8080-exec-82] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:26:06.263 [http-nio-8080-exec-82] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:26:06.359 [http-nio-8080-exec-82] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:26:06.361 [http-nio-8080-exec-82] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:26:06.503 [http-nio-8080-exec-82] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:26:06.504 [http-nio-8080-exec-82] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:26:06.505 [http-nio-8080-exec-82] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:26:06.717 [http-nio-8080-exec-82] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:26:06.737 [http-nio-8080-exec-82] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:26:06.737 [http-nio-8080-exec-82] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:26:06.755 [http-nio-8080-exec-82] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:26:06.780 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4ea4fb5c
[DEBUG] 2020-02-28 15:26:06.780 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4ea4fb5c
[DEBUG] 2020-02-28 15:26:06.780 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ea4fb5c
[DEBUG] 2020-02-28 15:26:06.781 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@450985ab
[DEBUG] 2020-02-28 15:26:06.781 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@9b5ef92
[DEBUG] 2020-02-28 15:26:06.781 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@374bc9f
[DEBUG] 2020-02-28 15:26:06.782 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@385e69eb
[DEBUG] 2020-02-28 15:26:06.782 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@385e69eb
[DEBUG] 2020-02-28 15:26:06.782 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@385e69eb
[DEBUG] 2020-02-28 15:26:06.783 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@78d2247d
[DEBUG] 2020-02-28 15:26:06.783 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@78d2247d
[DEBUG] 2020-02-28 15:26:06.783 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@78d2247d
[DEBUG] 2020-02-28 15:26:06.784 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7a334de3
[DEBUG] 2020-02-28 15:26:06.784 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7a334de3
[DEBUG] 2020-02-28 15:26:06.784 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7a334de3
[DEBUG] 2020-02-28 15:26:06.784 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4fec2cdd
[DEBUG] 2020-02-28 15:26:06.784 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4fec2cdd
[DEBUG] 2020-02-28 15:26:06.784 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fec2cdd
[DEBUG] 2020-02-28 15:26:06.785 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@73db821a
[DEBUG] 2020-02-28 15:26:06.785 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@73db821a
[DEBUG] 2020-02-28 15:26:06.785 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@73db821a
[DEBUG] 2020-02-28 15:26:06.786 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@13fdf573
[DEBUG] 2020-02-28 15:26:06.787 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@13fdf573
[DEBUG] 2020-02-28 15:26:06.787 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@13fdf573
[DEBUG] 2020-02-28 15:26:06.789 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fa3f3c
[DEBUG] 2020-02-28 15:26:06.789 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fa3f3c
[DEBUG] 2020-02-28 15:26:06.789 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fa3f3c
[DEBUG] 2020-02-28 15:26:06.790 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b3c8
[DEBUG] 2020-02-28 15:26:06.790 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b3c8
[DEBUG] 2020-02-28 15:26:06.791 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2495b5ca
[DEBUG] 2020-02-28 15:26:06.791 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2495b5ca
[DEBUG] 2020-02-28 15:26:06.793 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4e3334cd
[DEBUG] 2020-02-28 15:26:06.793 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4e3334cd
[DEBUG] 2020-02-28 15:26:06.795 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53599f2a
[DEBUG] 2020-02-28 15:26:06.795 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10c4acdb
[DEBUG] 2020-02-28 15:26:06.797 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@34a029a1
[DEBUG] 2020-02-28 15:26:06.797 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a029a1
[DEBUG] 2020-02-28 15:26:06.798 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7fba425e
[DEBUG] 2020-02-28 15:26:06.798 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7fba425e
[DEBUG] 2020-02-28 15:26:06.799 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2e969881
[DEBUG] 2020-02-28 15:26:06.799 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2e969881
[DEBUG] 2020-02-28 15:26:06.800 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@32239def
[DEBUG] 2020-02-28 15:26:06.800 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@32239def
[DEBUG] 2020-02-28 15:26:06.801 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6a851da
[DEBUG] 2020-02-28 15:26:06.801 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6a851da
[DEBUG] 2020-02-28 15:26:06.801 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3a481987
[DEBUG] 2020-02-28 15:26:06.801 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3a481987
[DEBUG] 2020-02-28 15:26:06.802 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6a3198d8
[DEBUG] 2020-02-28 15:26:06.802 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6a3198d8
[DEBUG] 2020-02-28 15:26:06.802 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@605b535d
[DEBUG] 2020-02-28 15:26:06.802 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@605b535d
[DEBUG] 2020-02-28 15:26:06.803 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@657ae455
[DEBUG] 2020-02-28 15:26:06.803 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@657ae455
[DEBUG] 2020-02-28 15:26:06.804 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6d619c0a
[DEBUG] 2020-02-28 15:26:06.804 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6d619c0a
[DEBUG] 2020-02-28 15:26:06.804 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1c6e75b7
[DEBUG] 2020-02-28 15:26:06.805 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c6e75b7
[DEBUG] 2020-02-28 15:26:06.809 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@61cbb406
[DEBUG] 2020-02-28 15:26:06.809 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61cbb406
[DEBUG] 2020-02-28 15:26:06.809 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61cbb406
[DEBUG] 2020-02-28 15:26:06.810 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65a3111a
[DEBUG] 2020-02-28 15:26:06.817 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3efded9f
[DEBUG] 2020-02-28 15:26:06.817 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3efded9f
[DEBUG] 2020-02-28 15:26:06.817 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3efded9f
[DEBUG] 2020-02-28 15:26:06.818 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2091468b
[DEBUG] 2020-02-28 15:26:06.819 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4043b8ea
[DEBUG] 2020-02-28 15:26:06.819 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4043b8ea
[DEBUG] 2020-02-28 15:26:06.819 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6b44864c
[DEBUG] 2020-02-28 15:26:06.819 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b44864c
[DEBUG] 2020-02-28 15:26:06.820 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@632b4e3b
[DEBUG] 2020-02-28 15:26:06.820 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@632b4e3b
[DEBUG] 2020-02-28 15:26:06.821 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@62d8185e
[DEBUG] 2020-02-28 15:26:06.821 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62d8185e
[DEBUG] 2020-02-28 15:26:06.822 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1cc26db1
[DEBUG] 2020-02-28 15:26:06.822 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1cc26db1
[DEBUG] 2020-02-28 15:26:06.822 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@72d2e2c8
[DEBUG] 2020-02-28 15:26:06.823 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@390e5b56
[DEBUG] 2020-02-28 15:26:06.823 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@390e5b56
[DEBUG] 2020-02-28 15:26:06.823 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@390e5b56
[DEBUG] 2020-02-28 15:26:06.823 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ae0d247
[DEBUG] 2020-02-28 15:26:06.823 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ae0d247
[DEBUG] 2020-02-28 15:26:06.823 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ae0d247
[DEBUG] 2020-02-28 15:26:06.824 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ab65442
[DEBUG] 2020-02-28 15:26:06.824 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6d9b527c
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1ccb25ea
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ccb25ea
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1ccb25ea
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e2bdc50
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e2bdc50
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e2bdc50
[DEBUG] 2020-02-28 15:26:06.826 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@554d8ea8
[DEBUG] 2020-02-28 15:26:06.827 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@134207cd
[DEBUG] 2020-02-28 15:26:06.828 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@475e692
[DEBUG] 2020-02-28 15:26:06.828 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@475e692
[DEBUG] 2020-02-28 15:26:06.828 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ff329d2
[DEBUG] 2020-02-28 15:26:06.829 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@16586016
[DEBUG] 2020-02-28 15:26:06.829 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16586016
[DEBUG] 2020-02-28 15:26:06.829 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@704f028d
[DEBUG] 2020-02-28 15:26:06.829 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@704f028d
[DEBUG] 2020-02-28 15:26:06.829 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1eec7356
[DEBUG] 2020-02-28 15:26:06.830 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b0a2fa4
[DEBUG] 2020-02-28 15:26:06.831 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@366b9172
[DEBUG] 2020-02-28 15:26:06.835 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1b399664
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b399664
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10882d4
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bebbdd2
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a3557f
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@792b62a3
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c705170
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6aa37e01
[DEBUG] 2020-02-28 15:26:06.836 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7233c687
[DEBUG] 2020-02-28 15:26:06.837 [http-nio-8080-exec-82] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@502f8c18
[DEBUG] 2020-02-28 15:26:06.859 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:26:06.860 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:26:06.860 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:26:06.862 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:26:06.863 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:26:06.863 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:26:06.864 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:26:06.865 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:26:06.865 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:26:06.866 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:26:06.866 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:26:06.866 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:26:06.866 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:26:06.867 [http-nio-8080-exec-82] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:26:06.871 [http-nio-8080-exec-82] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:26:06.871 [http-nio-8080-exec-82] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:26:06.871 [http-nio-8080-exec-82] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:26:06.980 [http-nio-8080-exec-82] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:26:07.386 [http-nio-8080-exec-82] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:26:07.387 [http-nio-8080-exec-82] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:26:07.387 [http-nio-8080-exec-82] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:26:07.444 [http-nio-8080-exec-82] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:26:07.535 [http-nio-8080-exec-82] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:26:07.577 [http-nio-8080-exec-82] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:26:07.629 [http-nio-8080-exec-82] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:26:07.632 [http-nio-8080-exec-82] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e287b60] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@53223f2]
[DEBUG] 2020-02-28 15:26:07.675 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.696 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.699 [http-nio-8080-exec-82] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:26:07.702 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:26:07.718 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.720 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:26:07.722 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:26:07.723 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:26:07.724 [http-nio-8080-exec-82] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:26:07.727 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.728 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.728 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:26:07.728 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:26:07.728 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:26:07.728 [http-nio-8080-exec-82] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:26:07.729 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.729 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:26:07.729 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:26:07.729 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:26:07.729 [http-nio-8080-exec-82] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:26:07.730 [http-nio-8080-exec-82] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:26:07.731 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.732 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.733 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.740 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.741 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.741 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.741 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.741 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.742 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:26:07.743 [http-nio-8080-exec-82] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:26:07.743 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.743 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.743 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.743 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.743 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:26:07.744 [http-nio-8080-exec-82] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:26:07.745 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:26:07.746 [http-nio-8080-exec-82] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:26:07.747 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:26:07.748 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.748 [http-nio-8080-exec-82] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:26:07.748 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:26:07.750 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.750 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:26:07.750 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.751 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.755 [http-nio-8080-exec-82] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:26:07.756 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.756 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.757 [http-nio-8080-exec-82] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:26:07.757 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:26:07.758 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:26:07.759 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.760 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:26:07.761 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:26:07.762 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:26:07.763 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:26:07.764 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:26:07.765 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:26:07.766 [http-nio-8080-exec-82] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:26:07.767 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:26:07.768 [http-nio-8080-exec-82] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:26:07.769 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.770 [http-nio-8080-exec-82] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:26:07.770 [http-nio-8080-exec-82] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:07.770 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:26:07.770 [http-nio-8080-exec-82] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:26:07.770 [http-nio-8080-exec-82] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:26:07.771 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:26:07.772 [http-nio-8080-exec-82] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:26:07.773 [http-nio-8080-exec-82] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:26:07.774 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:26:07.775 [http-nio-8080-exec-82] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:26:07.779 [http-nio-8080-exec-82] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:26:07.783 [http-nio-8080-exec-82] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:26:07.783 [http-nio-8080-exec-82] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:26:07.784 [http-nio-8080-exec-82] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:26:07.785 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.786 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.786 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:07.786 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.787 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:07.787 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.787 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.787 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:07.788 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.789 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.789 [http-nio-8080-exec-82] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.834 [http-nio-8080-exec-82] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:26:07.835 [http-nio-8080-exec-82] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:26:07.879 [http-nio-8080-exec-82] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:26:07.898 [http-nio-8080-exec-82] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:26:07.898 [http-nio-8080-exec-82] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7336d125, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:26:07.910 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:26:07.910 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.910 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:26:07.911 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:26:07.911 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:26:07.911 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:26:07.911 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:26:07.911 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:07.912 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:26:07.912 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:26:07.913 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:26:07.913 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:07.914 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:26:07.914 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:07.918 [http-nio-8080-exec-82] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:26:07.918 [http-nio-8080-exec-82] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:26:07.918 [http-nio-8080-exec-82] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e287b60] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ea264be]
[DEBUG] 2020-02-28 15:26:07.953 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:26:07.953 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:07.959 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:26:07.959 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:08.171 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:26:08.171 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:26:08.171 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:26:08.171 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:26:08.187 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:26:08.187 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:26:08.187 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:26:08.187 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:26:08.194 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:26:08.194 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:08.194 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:26:08.194 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:08.203 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:26:08.203 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:26:08.204 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:26:08.204 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:26:08.217 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:26:08.217 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:08.219 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:26:08.219 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:08.236 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:26:08.236 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:08.236 [http-nio-8080-exec-82] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:26:08.236 [http-nio-8080-exec-82] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:08.250 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:26:08.250 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:26:08.250 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:26:08.250 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:26:08.250 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:26:08.251 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:26:08.252 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:26:08.253 [http-nio-8080-exec-82] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:26:08.255 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.270 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@684bf794]
[DEBUG] 2020-02-28 15:26:08.271 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.271 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.271 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:26:08.274 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ab4e74a]
[DEBUG] 2020-02-28 15:26:08.274 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c366742]
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60e37c3a]
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37123815]
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.275 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.276 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.276 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d8c5ab]
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ca43d77]
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363178b1]
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.277 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b3067ed]
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367972ca]
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.278 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11acf5b9]
[DEBUG] 2020-02-28 15:26:08.279 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a7fb46]
[DEBUG] 2020-02-28 15:26:08.279 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.279 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.279 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.279 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2fb89daf]
[DEBUG] 2020-02-28 15:26:08.280 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.280 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.281 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.290 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.322 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bd8123c]
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a55767d]
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a851905]
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6167ab9b]
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7f2a02]
[DEBUG] 2020-02-28 15:26:08.326 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e585d0e]
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@906597]
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63970bd]
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.327 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7af5fd59]
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f509c48]
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d4e91f]
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f7d8711]
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.328 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7c0632b8]
[DEBUG] 2020-02-28 15:26:08.329 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.329 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.329 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.329 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.335 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.335 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5edb8ddf]
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.347 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dbd4f7]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@209bc997]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce9c5f4]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@124bccf2]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ced48e]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60c3ab06]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460f7934]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@53be3564]
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.348 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb8dfa7]
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4c784]
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eba6af4]
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71d815d5]
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5435348d]
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e7b9061]
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:26:08.349 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fa0ba11]
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6add1c]
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@231ba90b]
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:26:08.350 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3840e834]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d34fe94]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75857f55]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c354050]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@664fd51c]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751cd6e4]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b3d60c5]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dfc8232]
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.351 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45835ba4]
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1640774c]
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7095ba99]
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b3fb332]
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6075c54b]
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d69eaae]
[DEBUG] 2020-02-28 15:26:08.352 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4148f9f9]
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.353 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577864c1]
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1969acf8]
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.357 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ba709e1]
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796c9d44]
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e0d1cbb]
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26e1ed6d]
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.358 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfad248]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@372fc487]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e8cdd8a]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73893481]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14521d17]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@565dfebe]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c19ebaa]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@827f59b]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33c29827]
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.359 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ad338ef]
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4954d6a4]
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4a4b8af4]
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185998c6]
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.360 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@310b8bc4]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cab2394]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46cf9902]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b777fb4]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13b0b69f]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26b290fe]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0f1aa3]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@288041c4]
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.365 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aef66bf]
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6256f594]
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a33008f]
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b785fe8]
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134bc643]
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:26:08.366 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46646beb]
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4113cd0]
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25f51246]
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280f4d94]
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@58457eac]
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.367 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d884d8d]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cfa7710]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4f27d2]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33a4f1f3]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629e6e20]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5de3c794]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18571a4d]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e0a605f]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2f9ca1]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@30d7060a]
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.368 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.369 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:26:08.369 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:26:08.371 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:26:08.371 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:26:08.373 [http-nio-8080-exec-82] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289b0e2]
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73942420]
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7124025c]
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:26:08.374 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e65b23a]
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a5a22e9]
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bbdfb1c]
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:26:08.375 [http-nio-8080-exec-82] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55d72048]
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78847989]
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.378 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.379 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4323417a]
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a10ae3]
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a174fbd]
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@449fbc0e]
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51b99362]
[DEBUG] 2020-02-28 15:26:08.380 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ff2a97]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3982bc95]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28b882a0]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ee181ab]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e9519cf]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7254253f]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a0e07]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4934ecce]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f59df46]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c77704f]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7c1d79f0]
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.381 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bf69d]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5262ca]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d79bf35]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eaec262]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7309aa06]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7682b870]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e87c910]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7060035c]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@719b0f3]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64bbc958]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14045396]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@648ed8a9]
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:26:08.382 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14118f69]
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223fe69e]
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.383 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55a42c61]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8723b5d]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@405f3b7]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db488b9]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ad4db59]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139c7ffa]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6173f7f1]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58690806]
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:26:08.384 [http-nio-8080-exec-82] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:26:08.385 [http-nio-8080-exec-82] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:26:08.385 [http-nio-8080-exec-82] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:26:08.385 [http-nio-8080-exec-82] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:26:08.405 [http-nio-8080-exec-82] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:26:08.405 [http-nio-8080-exec-82] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:26:08.405 [http-nio-8080-exec-82] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:26:08.410 [http-nio-8080-exec-82] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:26:08.410 [http-nio-8080-exec-82] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:26:08.410 [http-nio-8080-exec-82] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:26:08.410 [http-nio-8080-exec-82] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:26:08.411 [http-nio-8080-exec-82] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8438965
[DEBUG] 2020-02-28 15:26:08.412 [http-nio-8080-exec-82] SessionFactoryRegistry - Registering SessionFactory: fb8a32f4-aa86-4e09-b81d-2e168d19a957 (<unnamed>)
[DEBUG] 2020-02-28 15:26:08.412 [http-nio-8080-exec-82] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:26:08.457 [http-nio-8080-exec-82] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:26:08.471 [http-nio-8080-exec-82] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:26:08.484 [http-nio-8080-exec-82] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@23277aa8
[DEBUG] 2020-02-28 15:26:08.505 [http-nio-8080-exec-82] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:26:08.507 [http-nio-8080-exec-82] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:26:08.511 [http-nio-8080-exec-82] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:26:08.530 [http-nio-8080-exec-82] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:26:08.539 [http-nio-8080-exec-82] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:26:08.539 [http-nio-8080-exec-82] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:26:08.540 [http-nio-8080-exec-82] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:26:08.540 [http-nio-8080-exec-82] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:26:08.545 [http-nio-8080-exec-82] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:26:08.545 [http-nio-8080-exec-82] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:26:08.546 [http-nio-8080-exec-82] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:26:08.546 [http-nio-8080-exec-82] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:26:08.549 [http-nio-8080-exec-82] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:26:08.549 [http-nio-8080-exec-82] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:26:08.549 [http-nio-8080-exec-82] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:26:08.558 [http-nio-8080-exec-82] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:26:08.573 [http-nio-8080-exec-82] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:26:08.575 [http-nio-8080-exec-82] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:26:08.580 [http-nio-8080-exec-82] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:26:08.580 [http-nio-8080-exec-82] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:26:08.580 [http-nio-8080-exec-82] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:26:08.580 [http-nio-8080-exec-82] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:26:08.581 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.584 [http-nio-8080-exec-82] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:26:08.587 [http-nio-8080-exec-82] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:26:08.588 [http-nio-8080-exec-82] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:26:08.590 [http-nio-8080-exec-82] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:26:08.595 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.596 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1685f060
[DEBUG] 2020-02-28 15:26:08.597 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.597 [http-nio-8080-exec-82] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:26:08.597 [http-nio-8080-exec-82] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:26:08.597 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:26:08.598 [http-nio-8080-exec-82] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:26:08.617 [http-nio-8080-exec-82] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] Loader - Done entity load
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:26:08.618 [http-nio-8080-exec-82] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:26:08.619 [http-nio-8080-exec-82] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:26:08.620 [http-nio-8080-exec-82] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:27:44.233 [http-nio-8080-exec-80] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:27:44.236 [http-nio-8080-exec-80] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:27:44.240 [http-nio-8080-exec-80] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:27:44.322 [http-nio-8080-exec-80] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:27:44.323 [http-nio-8080-exec-80] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:27:44.436 [http-nio-8080-exec-80] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:27:44.436 [http-nio-8080-exec-80] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:27:44.438 [http-nio-8080-exec-80] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:27:44.668 [http-nio-8080-exec-80] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:27:44.689 [http-nio-8080-exec-80] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:27:44.690 [http-nio-8080-exec-80] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:27:44.711 [http-nio-8080-exec-80] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:27:44.740 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@41deb2c3
[DEBUG] 2020-02-28 15:27:44.740 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@41deb2c3
[DEBUG] 2020-02-28 15:27:44.740 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41deb2c3
[DEBUG] 2020-02-28 15:27:44.740 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f8df4ae
[DEBUG] 2020-02-28 15:27:44.740 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e123180
[DEBUG] 2020-02-28 15:27:44.741 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@36cfcd7e
[DEBUG] 2020-02-28 15:27:44.741 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ffed1ac
[DEBUG] 2020-02-28 15:27:44.741 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ffed1ac
[DEBUG] 2020-02-28 15:27:44.741 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ffed1ac
[DEBUG] 2020-02-28 15:27:44.742 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@541cc3ed
[DEBUG] 2020-02-28 15:27:44.742 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@541cc3ed
[DEBUG] 2020-02-28 15:27:44.742 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@541cc3ed
[DEBUG] 2020-02-28 15:27:44.744 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7e0834dd
[DEBUG] 2020-02-28 15:27:44.744 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7e0834dd
[DEBUG] 2020-02-28 15:27:44.744 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7e0834dd
[DEBUG] 2020-02-28 15:27:44.745 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7297c101
[DEBUG] 2020-02-28 15:27:44.745 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7297c101
[DEBUG] 2020-02-28 15:27:44.745 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7297c101
[DEBUG] 2020-02-28 15:27:44.747 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@241ce64b
[DEBUG] 2020-02-28 15:27:44.747 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@241ce64b
[DEBUG] 2020-02-28 15:27:44.748 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@241ce64b
[DEBUG] 2020-02-28 15:27:44.752 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c7b9bd8
[DEBUG] 2020-02-28 15:27:44.752 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4c7b9bd8
[DEBUG] 2020-02-28 15:27:44.752 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c7b9bd8
[DEBUG] 2020-02-28 15:27:44.754 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4aa7f71e
[DEBUG] 2020-02-28 15:27:44.754 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4aa7f71e
[DEBUG] 2020-02-28 15:27:44.754 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4aa7f71e
[DEBUG] 2020-02-28 15:27:44.754 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@627d2333
[DEBUG] 2020-02-28 15:27:44.754 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@627d2333
[DEBUG] 2020-02-28 15:27:44.761 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@217e424f
[DEBUG] 2020-02-28 15:27:44.761 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@217e424f
[DEBUG] 2020-02-28 15:27:44.762 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4c0e23c0
[DEBUG] 2020-02-28 15:27:44.762 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c0e23c0
[DEBUG] 2020-02-28 15:27:44.762 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@215496d1
[DEBUG] 2020-02-28 15:27:44.763 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@55483c16
[DEBUG] 2020-02-28 15:27:44.764 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7376089
[DEBUG] 2020-02-28 15:27:44.764 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7376089
[DEBUG] 2020-02-28 15:27:44.765 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3c2dffe7
[DEBUG] 2020-02-28 15:27:44.765 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3c2dffe7
[DEBUG] 2020-02-28 15:27:44.767 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5355bf8f
[DEBUG] 2020-02-28 15:27:44.767 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5355bf8f
[DEBUG] 2020-02-28 15:27:44.769 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3fa83e48
[DEBUG] 2020-02-28 15:27:44.769 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3fa83e48
[DEBUG] 2020-02-28 15:27:44.770 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1f7c564
[DEBUG] 2020-02-28 15:27:44.770 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1f7c564
[DEBUG] 2020-02-28 15:27:44.770 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1be1bf2b
[DEBUG] 2020-02-28 15:27:44.770 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1be1bf2b
[DEBUG] 2020-02-28 15:27:44.771 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@e054a19
[DEBUG] 2020-02-28 15:27:44.771 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@e054a19
[DEBUG] 2020-02-28 15:27:44.772 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@13851a68
[DEBUG] 2020-02-28 15:27:44.772 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@13851a68
[DEBUG] 2020-02-28 15:27:44.772 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d4c93f9
[DEBUG] 2020-02-28 15:27:44.772 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d4c93f9
[DEBUG] 2020-02-28 15:27:44.773 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5c27c23e
[DEBUG] 2020-02-28 15:27:44.773 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5c27c23e
[DEBUG] 2020-02-28 15:27:44.774 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@75eef6b3
[DEBUG] 2020-02-28 15:27:44.774 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@75eef6b3
[DEBUG] 2020-02-28 15:27:44.775 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@12242876
[DEBUG] 2020-02-28 15:27:44.775 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12242876
[DEBUG] 2020-02-28 15:27:44.775 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12242876
[DEBUG] 2020-02-28 15:27:44.775 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e175b6e
[DEBUG] 2020-02-28 15:27:44.776 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@62ed2da6
[DEBUG] 2020-02-28 15:27:44.776 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ed2da6
[DEBUG] 2020-02-28 15:27:44.776 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ed2da6
[DEBUG] 2020-02-28 15:27:44.776 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10e9ecb2
[DEBUG] 2020-02-28 15:27:44.777 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d8be941
[DEBUG] 2020-02-28 15:27:44.777 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d8be941
[DEBUG] 2020-02-28 15:27:44.777 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@60b76f31
[DEBUG] 2020-02-28 15:27:44.777 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60b76f31
[DEBUG] 2020-02-28 15:27:44.778 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4bb0bf7c
[DEBUG] 2020-02-28 15:27:44.778 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4bb0bf7c
[DEBUG] 2020-02-28 15:27:44.778 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@40a27c87
[DEBUG] 2020-02-28 15:27:44.778 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40a27c87
[DEBUG] 2020-02-28 15:27:44.779 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6af3e226
[DEBUG] 2020-02-28 15:27:44.779 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6af3e226
[DEBUG] 2020-02-28 15:27:44.779 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@242a9717
[DEBUG] 2020-02-28 15:27:44.780 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@68f96851
[DEBUG] 2020-02-28 15:27:44.780 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@68f96851
[DEBUG] 2020-02-28 15:27:44.780 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@68f96851
[DEBUG] 2020-02-28 15:27:44.781 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1acf4670
[DEBUG] 2020-02-28 15:27:44.781 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1acf4670
[DEBUG] 2020-02-28 15:27:44.781 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1acf4670
[DEBUG] 2020-02-28 15:27:44.781 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4e2d1d18
[DEBUG] 2020-02-28 15:27:44.782 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5f784024
[DEBUG] 2020-02-28 15:27:44.783 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6420aad4
[DEBUG] 2020-02-28 15:27:44.783 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6420aad4
[DEBUG] 2020-02-28 15:27:44.783 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6420aad4
[DEBUG] 2020-02-28 15:27:44.785 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d58eab8
[DEBUG] 2020-02-28 15:27:44.785 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d58eab8
[DEBUG] 2020-02-28 15:27:44.785 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d58eab8
[DEBUG] 2020-02-28 15:27:44.785 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6b548ab6
[DEBUG] 2020-02-28 15:27:44.785 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6dc72963
[DEBUG] 2020-02-28 15:27:44.786 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@73853ac7
[DEBUG] 2020-02-28 15:27:44.786 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@73853ac7
[DEBUG] 2020-02-28 15:27:44.787 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b9e7708
[DEBUG] 2020-02-28 15:27:44.789 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6b829d85
[DEBUG] 2020-02-28 15:27:44.789 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b829d85
[DEBUG] 2020-02-28 15:27:44.790 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1d1479ed
[DEBUG] 2020-02-28 15:27:44.790 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d1479ed
[DEBUG] 2020-02-28 15:27:44.790 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@781f22b7
[DEBUG] 2020-02-28 15:27:44.791 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63e0d8b9
[DEBUG] 2020-02-28 15:27:44.791 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5acf8c0a
[DEBUG] 2020-02-28 15:27:44.793 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e973339
[DEBUG] 2020-02-28 15:27:44.793 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e973339
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33a1f75b
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73f7577
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1853919a
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c2fee78
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5008c789
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ce08432
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28bb0f75
[DEBUG] 2020-02-28 15:27:44.794 [http-nio-8080-exec-80] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b747834
[DEBUG] 2020-02-28 15:27:44.818 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:27:44.819 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:27:44.819 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:27:44.820 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:27:44.821 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:27:44.821 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:27:44.822 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:27:44.822 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:27:44.823 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:27:44.824 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:27:44.824 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:27:44.824 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:27:44.824 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:27:44.825 [http-nio-8080-exec-80] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:27:44.832 [http-nio-8080-exec-80] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:27:44.832 [http-nio-8080-exec-80] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:27:44.832 [http-nio-8080-exec-80] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:27:44.941 [http-nio-8080-exec-80] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:27:45.192 [http-nio-8080-exec-80] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:27:45.192 [http-nio-8080-exec-80] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:27:45.192 [http-nio-8080-exec-80] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:27:45.224 [http-nio-8080-exec-80] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:27:45.250 [http-nio-8080-exec-80] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:27:45.280 [http-nio-8080-exec-80] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:27:45.316 [http-nio-8080-exec-80] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:27:45.319 [http-nio-8080-exec-80] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a4b8b28] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79741abb]
[DEBUG] 2020-02-28 15:27:45.358 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.381 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.386 [http-nio-8080-exec-80] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:27:45.388 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:27:45.410 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.413 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:27:45.415 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:27:45.418 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:27:45.419 [http-nio-8080-exec-80] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:27:45.421 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.422 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.422 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:27:45.422 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:27:45.422 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:27:45.422 [http-nio-8080-exec-80] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:27:45.423 [http-nio-8080-exec-80] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:27:45.424 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.426 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.428 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.438 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.439 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.441 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.442 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.442 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.442 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:27:45.444 [http-nio-8080-exec-80] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:27:45.444 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.445 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.445 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.445 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.445 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.446 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:27:45.447 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:27:45.447 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:27:45.447 [http-nio-8080-exec-80] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:27:45.447 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.448 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.449 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.449 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.449 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.449 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.450 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:27:45.451 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:27:45.452 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:27:45.454 [http-nio-8080-exec-80] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:27:45.457 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:27:45.457 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.457 [http-nio-8080-exec-80] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:27:45.457 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:27:45.467 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.468 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:27:45.468 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:27:45.468 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:27:45.468 [http-nio-8080-exec-80] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:27:45.468 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.469 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.469 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.469 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:27:45.469 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.469 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.474 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.474 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:27:45.474 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:27:45.474 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:27:45.474 [http-nio-8080-exec-80] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:27:45.475 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.475 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.477 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:27:45.477 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.477 [http-nio-8080-exec-80] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:27:45.478 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.479 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.488 [http-nio-8080-exec-80] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:27:45.488 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:27:45.489 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.489 [http-nio-8080-exec-80] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:27:45.489 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:27:45.490 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:27:45.491 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:27:45.492 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:27:45.493 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:27:45.494 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:27:45.495 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.496 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:27:45.497 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:27:45.498 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:27:45.500 [http-nio-8080-exec-80] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:27:45.500 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.500 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:27:45.500 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:27:45.500 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:27:45.500 [http-nio-8080-exec-80] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.501 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:27:45.502 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:27:45.503 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:27:45.504 [http-nio-8080-exec-80] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:27:45.505 [http-nio-8080-exec-80] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:27:45.506 [http-nio-8080-exec-80] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:27:45.511 [http-nio-8080-exec-80] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:27:45.513 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:27:45.514 [http-nio-8080-exec-80] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:27:45.518 [http-nio-8080-exec-80] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:27:45.518 [http-nio-8080-exec-80] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:27:45.519 [http-nio-8080-exec-80] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:27:45.520 [http-nio-8080-exec-80] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:27:45.520 [http-nio-8080-exec-80] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:27:45.520 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:27:45.520 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:27:45.520 [http-nio-8080-exec-80] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:27:45.521 [http-nio-8080-exec-80] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:27:45.522 [http-nio-8080-exec-80] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:27:45.522 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.523 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:45.524 [http-nio-8080-exec-80] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:27:45.524 [http-nio-8080-exec-80] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:27:45.524 [http-nio-8080-exec-80] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:27:45.524 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:27:45.525 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:27:45.525 [http-nio-8080-exec-80] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:27:45.526 [http-nio-8080-exec-80] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:27:45.527 [http-nio-8080-exec-80] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:27:45.527 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:27:45.528 [http-nio-8080-exec-80] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:27:45.529 [http-nio-8080-exec-80] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:27:45.529 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:27:45.530 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.533 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.535 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:27:45.535 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.535 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.535 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:45.535 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.536 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:45.536 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.536 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.536 [http-nio-8080-exec-80] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.580 [http-nio-8080-exec-80] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:27:45.581 [http-nio-8080-exec-80] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:27:45.631 [http-nio-8080-exec-80] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:27:45.656 [http-nio-8080-exec-80] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:27:45.656 [http-nio-8080-exec-80] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7017739f, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:27:45.673 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:27:45.674 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.675 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:27:45.675 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:27:45.676 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:27:45.676 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:27:45.676 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:27:45.676 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:45.677 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:27:45.677 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:27:45.677 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:27:45.677 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:45.678 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:27:45.678 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:45.680 [http-nio-8080-exec-80] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:27:45.681 [http-nio-8080-exec-80] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:27:45.681 [http-nio-8080-exec-80] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a4b8b28] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4d9b8f5c]
[DEBUG] 2020-02-28 15:27:45.718 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:27:45.718 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.728 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:27:45.728 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:45.979 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:27:45.980 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:27:45.980 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:27:45.980 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:27:46.002 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:27:46.002 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:27:46.002 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:27:46.002 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:27:46.019 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:27:46.019 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:46.019 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:27:46.019 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:46.034 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:27:46.035 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:27:46.036 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:27:46.036 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:27:46.061 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:27:46.061 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:46.063 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:27:46.063 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:46.102 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:27:46.102 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:46.103 [http-nio-8080-exec-80] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:27:46.103 [http-nio-8080-exec-80] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:46.142 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:27:46.143 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:27:46.145 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:27:46.146 [http-nio-8080-exec-80] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:27:46.146 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:27:46.146 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:27:46.146 [http-nio-8080-exec-80] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:27:46.146 [http-nio-8080-exec-80] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:27:46.150 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:27:46.151 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:27:46.151 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:27:46.151 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.151 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:27:46.151 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:27:46.151 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.170 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2687c94d]
[DEBUG] 2020-02-28 15:27:46.172 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.172 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.172 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:27:46.175 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4272a379]
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511ad3bc]
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47f1841e]
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc2e2ea]
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.176 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3622e8c6]
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e16f6ab]
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73b85360]
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.177 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e4c4627]
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5e31dd]
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:27:46.178 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.179 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e980d62]
[DEBUG] 2020-02-28 15:27:46.179 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e311b71]
[DEBUG] 2020-02-28 15:27:46.179 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.179 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.179 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.179 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d4fee59]
[DEBUG] 2020-02-28 15:27:46.180 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.180 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.181 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.190 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.195 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.197 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:27:46.197 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1606d97c]
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b1d0839]
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d22565]
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bfd59a]
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528c9a0b]
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11931ca3]
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.198 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb6e8dd]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@685c7dc2]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6123126e]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33f83581]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2811cff7]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab7a349]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@e9b9be7]
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.199 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.200 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.200 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.200 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.200 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e2be91]
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@122292fa]
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:27:46.210 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41b361ed]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c16838]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e729498]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69abf7b9]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a82ff4e]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c22d398]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@454d696b]
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.211 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b89e7a2]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f956c35]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d2afad5]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a6e1af]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3236cb8a]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e954c65]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71c72e3e]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4505a207]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e64a1e6]
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.212 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d046aee]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e79021b]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50e44fd]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ffb51e5]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69e4e1db]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a57da10]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d89520b]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58384c26]
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.213 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@169c94c3]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15014002]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0ac04f]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a3988d9]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4658c9c1]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d7b71fd]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16aeebc4]
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.214 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c7c688]
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510190]
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@36136cfe]
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.215 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.216 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.217 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:27:46.218 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@694f3edd]
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cc31bb4]
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@98dc0c6]
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19a4aefc]
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b3daf1b]
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd1db4a]
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:27:46.219 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20be4562]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21f2b2d8]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61ace07d]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a84f91e]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ed4e4e4]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e4ad07]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24d0aee]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7c4fb0]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d9b0a4c]
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.220 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@657fa570]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7565bf]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4abc1f61]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddf010f]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a20d196]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b22378c]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71cf7c9e]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@244ddcd1]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6898622c]
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.221 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6279b937]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6585d46a]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b97e430]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24084474]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ef0533]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b02adc0]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f806cf4]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f41294a]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430a1f9a]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67d7f879]
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.222 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc77afa]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34ee659a]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dd27d80]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3906c86a]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4738fbf9]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bd8431]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e6dc7db]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db0531f]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d631e6d]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@54a2b002]
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:27:46.223 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:27:46.224 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:27:46.224 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d8f9b1]
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c0ef9ae]
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ef6643c]
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.226 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed0122]
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b94857]
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d31b58]
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:27:46.227 [http-nio-8080-exec-80] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:27:46.231 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1912dedc]
[DEBUG] 2020-02-28 15:27:46.231 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f621c50]
[DEBUG] 2020-02-28 15:27:46.231 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:27:46.231 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.231 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.232 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72ae1b06]
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d02eb7]
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f2c51a1]
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6d7b65]
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:27:46.234 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@350a7d94]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75fc9e03]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c1ed535]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d835033]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664c9976]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16b2c27]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@769ee6f1]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@741b567d]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c97924]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@109b7e0e]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1133ab82]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fb5af67]
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.235 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@621bba77]
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21d5788d]
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6eba7cc4]
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6421608e]
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.236 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7423d370]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75d7818e]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a9daaaa]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@704f52da]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c45a24b]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45d799bc]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3268b356]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@383bfe43]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60ae2409]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17abc949]
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.237 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12038e06]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5babfc8e]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ab0af09]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e7b615d]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@147f9cc]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34030130]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b85ab27]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23523602]
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:27:46.238 [http-nio-8080-exec-80] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:27:46.239 [http-nio-8080-exec-80] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:27:46.239 [http-nio-8080-exec-80] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:27:46.239 [http-nio-8080-exec-80] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:27:46.239 [http-nio-8080-exec-80] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:27:46.239 [http-nio-8080-exec-80] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:27:46.278 [http-nio-8080-exec-80] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:27:46.279 [http-nio-8080-exec-80] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:27:46.279 [http-nio-8080-exec-80] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:27:46.288 [http-nio-8080-exec-80] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:27:46.289 [http-nio-8080-exec-80] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:27:46.290 [http-nio-8080-exec-80] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:27:46.290 [http-nio-8080-exec-80] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:27:46.291 [http-nio-8080-exec-80] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39746a60
[DEBUG] 2020-02-28 15:27:46.292 [http-nio-8080-exec-80] SessionFactoryRegistry - Registering SessionFactory: 461a7cfb-d5a0-4457-84d1-152327014b42 (<unnamed>)
[DEBUG] 2020-02-28 15:27:46.292 [http-nio-8080-exec-80] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:27:46.360 [http-nio-8080-exec-80] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:27:46.382 [http-nio-8080-exec-80] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:27:46.394 [http-nio-8080-exec-80] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@11001597
[DEBUG] 2020-02-28 15:27:46.412 [http-nio-8080-exec-80] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:27:46.416 [http-nio-8080-exec-80] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:27:46.418 [http-nio-8080-exec-80] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:27:46.461 [http-nio-8080-exec-80] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:27:46.472 [http-nio-8080-exec-80] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:27:46.473 [http-nio-8080-exec-80] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:27:46.474 [http-nio-8080-exec-80] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:27:46.474 [http-nio-8080-exec-80] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:27:46.483 [http-nio-8080-exec-80] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:27:46.484 [http-nio-8080-exec-80] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:27:46.484 [http-nio-8080-exec-80] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:27:46.484 [http-nio-8080-exec-80] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:27:46.488 [http-nio-8080-exec-80] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:27:46.488 [http-nio-8080-exec-80] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:27:46.488 [http-nio-8080-exec-80] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:27:46.497 [http-nio-8080-exec-80] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:27:46.516 [http-nio-8080-exec-80] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:27:46.518 [http-nio-8080-exec-80] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:46.527 [http-nio-8080-exec-80] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:27:46.528 [http-nio-8080-exec-80] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:27:46.528 [http-nio-8080-exec-80] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:27:46.528 [http-nio-8080-exec-80] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:27:46.529 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.530 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:27:46.530 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.530 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:27:46.530 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.530 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:46.530 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.534 [http-nio-8080-exec-80] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:27:46.537 [http-nio-8080-exec-80] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:27:46.538 [http-nio-8080-exec-80] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:27:46.540 [http-nio-8080-exec-80] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:46.554 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:46.555 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@36e4ed2b
[DEBUG] 2020-02-28 15:27:46.556 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:27:46.557 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.558 [http-nio-8080-exec-80] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:27:46.558 [http-nio-8080-exec-80] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:27:46.562 [http-nio-8080-exec-80] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:27:46.563 [http-nio-8080-exec-80] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:46.564 [http-nio-8080-exec-80] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:27:46.564 [http-nio-8080-exec-80] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:46.564 [http-nio-8080-exec-80] Loader - Done entity load
[DEBUG] 2020-02-28 15:27:46.565 [http-nio-8080-exec-80] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:27:46.567 [http-nio-8080-exec-80] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:46.567 [http-nio-8080-exec-80] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:27:46.567 [http-nio-8080-exec-80] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:46.568 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:46.569 [http-nio-8080-exec-80] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:27:46.570 [http-nio-8080-exec-80] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:27:49.590 [http-nio-8080-exec-90] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:27:49.591 [http-nio-8080-exec-90] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:27:49.592 [http-nio-8080-exec-90] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:49.593 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.594 [http-nio-8080-exec-90] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:27:49.597 [http-nio-8080-exec-90] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:27:49.597 [http-nio-8080-exec-90] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:27:49.598 [http-nio-8080-exec-90] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@248c536
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:27:49.599 [http-nio-8080-exec-90] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:27:49.601 [http-nio-8080-exec-90] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:27:49.601 [http-nio-8080-exec-90] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] Loader - Done entity load
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:27:49.602 [http-nio-8080-exec-90] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:27:50.931 [http-nio-8080-exec-92] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:27:50.933 [http-nio-8080-exec-92] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:27:50.933 [http-nio-8080-exec-92] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:27:50.934 [http-nio-8080-exec-92] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@666e6286
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:27:50.935 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.936 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:27:50.936 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:27:50.936 [http-nio-8080-exec-92] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:27:50.936 [http-nio-8080-exec-92] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] Loader - Done entity load
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:27:50.938 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:27:50.939 [http-nio-8080-exec-92] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:27:50.939 [http-nio-8080-exec-92] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:27:50.939 [http-nio-8080-exec-92] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:00.178 [http-nio-8080-exec-91] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:28:00.190 [http-nio-8080-exec-91] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:00.190 [http-nio-8080-exec-91] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:43:28
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:00.195 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@28c556f7
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.198 [http-nio-8080-exec-91] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.199 [http-nio-8080-exec-91] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:00.200 [http-nio-8080-exec-91] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:00.202 [http-nio-8080-exec-91] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:00.202 [http-nio-8080-exec-91] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:28:00.203 [http-nio-8080-exec-91] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:00.205 [http-nio-8080-exec-91] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-28 15:28:00.205 [http-nio-8080-exec-91] TransactionImpl - begin
[DEBUG] 2020-02-28 15:28:00.217 [http-nio-8080-exec-91] TransactionImpl - committing
[DEBUG] 2020-02-28 15:28:00.218 [http-nio-8080-exec-91] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-28 15:28:00.218 [http-nio-8080-exec-91] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-28 15:28:00.222 [http-nio-8080-exec-91] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-28 15:28:00.222 [http-nio-8080-exec-91] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-28 15:28:00.223 [http-nio-8080-exec-91] EntityPrinter - Listing entities:
[DEBUG] 2020-02-28 15:28:00.223 [http-nio-8080-exec-91] EntityPrinter - com.streammedia.entity.FAQ{createdAt=2020-02-28T00:00, description=This Is FAQ Creates Test. More and more, faqId=1, category=Movie, title=how movies are created., user=com.streammedia.entity.User#2, updatedAt=2020-02-28T15:28:00.204454}
[DEBUG] 2020-02-28 15:28:00.231 [http-nio-8080-exec-91] SQL - update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:28:00.240 [http-nio-8080-exec-91] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:00.240 [http-nio-8080-exec-91] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:00.246 [http-nio-8080-exec-93] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:28:00.247 [http-nio-8080-exec-93] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:28:00.248 [http-nio-8080-exec-93] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:00.248 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:00.248 [http-nio-8080-exec-93] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:28:00.248 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:00.248 [http-nio-8080-exec-93] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:28:00.248 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.249 [http-nio-8080-exec-93] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:28:00.250 [http-nio-8080-exec-93] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:00.250 [http-nio-8080-exec-93] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@676b05e
[DEBUG] 2020-02-28 15:28:00.251 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:00.252 [http-nio-8080-exec-93] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.253 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:00.254 [http-nio-8080-exec-93] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:04.398 [http-nio-8080-exec-94] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:28:04.400 [http-nio-8080-exec-94] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:04.401 [http-nio-8080-exec-94] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@305c72d4
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.404 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:04.405 [http-nio-8080-exec-94] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:04.409 [http-nio-8080-exec-94] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:04.409 [http-nio-8080-exec-94] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:04.410 [http-nio-8080-exec-94] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:04.411 [http-nio-8080-exec-94] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:04.411 [http-nio-8080-exec-94] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:04.411 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:04.411 [http-nio-8080-exec-94] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:04.411 [http-nio-8080-exec-94] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:04.411 [http-nio-8080-exec-94] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:04.412 [http-nio-8080-exec-94] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:04.412 [http-nio-8080-exec-94] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#1
[DEBUG] 2020-02-28 15:28:04.412 [http-nio-8080-exec-94] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:08.554 [http-nio-8080-exec-95] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:28:08.558 [http-nio-8080-exec-95] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:08.559 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@48163f0c
[DEBUG] 2020-02-28 15:28:08.560 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:08.561 [http-nio-8080-exec-95] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:08.567 [http-nio-8080-exec-95] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:08.568 [http-nio-8080-exec-95] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:08.568 [http-nio-8080-exec-95] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:08.568 [http-nio-8080-exec-95] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:08.568 [http-nio-8080-exec-95] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#2
[DEBUG] 2020-02-28 15:28:08.568 [http-nio-8080-exec-95] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:16.816 [http-nio-8080-exec-96] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:28:16.818 [http-nio-8080-exec-96] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:16.820 [http-nio-8080-exec-96] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.821 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.822 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4402444a
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:16.823 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.824 [http-nio-8080-exec-96] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:16.824 [http-nio-8080-exec-96] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:16.825 [http-nio-8080-exec-96] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#2
[DEBUG] 2020-02-28 15:28:16.826 [http-nio-8080-exec-96] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:16.827 [http-nio-8080-exec-96] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-28 15:28:16.827 [http-nio-8080-exec-96] TransactionImpl - begin
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] TransactionImpl - committing
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] EntityPrinter - Listing entities:
[DEBUG] 2020-02-28 15:28:16.829 [http-nio-8080-exec-96] EntityPrinter - com.streammedia.entity.FAQ{createdAt=2020-02-28T00:00, description=This is a trailer Question, faqId=2, category=Trailer, title=Where to find trailers, user=com.streammedia.entity.User#2, updatedAt=2020-02-28T15:28:16.827234}
[DEBUG] 2020-02-28 15:28:16.830 [http-nio-8080-exec-96] SQL - update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:28:16.841 [http-nio-8080-exec-96] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:16.842 [http-nio-8080-exec-96] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:16.847 [http-nio-8080-exec-96] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:28:16.848 [http-nio-8080-exec-96] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:28:16.850 [http-nio-8080-exec-96] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:16.850 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:16.853 [http-nio-8080-exec-96] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:28:16.853 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:16.853 [http-nio-8080-exec-96] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:28:16.853 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.854 [http-nio-8080-exec-96] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:28:16.855 [http-nio-8080-exec-96] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:16.856 [http-nio-8080-exec-96] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:16.857 [http-nio-8080-exec-96] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2a347879
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.858 [http-nio-8080-exec-96] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:16.859 [http-nio-8080-exec-96] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:16.860 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:16.861 [http-nio-8080-exec-96] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:19.295 [http-nio-8080-exec-97] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:28:19.296 [http-nio-8080-exec-97] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:28:19.297 [http-nio-8080-exec-97] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.298 [http-nio-8080-exec-97] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:28:19.299 [http-nio-8080-exec-97] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:19.299 [http-nio-8080-exec-97] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:19.300 [http-nio-8080-exec-97] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@75398c5c
[DEBUG] 2020-02-28 15:28:19.301 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:19.302 [http-nio-8080-exec-97] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:19.303 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:19.304 [http-nio-8080-exec-97] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:21.651 [http-nio-8080-exec-89] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:28:21.652 [http-nio-8080-exec-89] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:28:21.655 [http-nio-8080-exec-89] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:21.655 [http-nio-8080-exec-89] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:21.655 [http-nio-8080-exec-89] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:28:21.655 [http-nio-8080-exec-89] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:21.657 [http-nio-8080-exec-89] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:28:21.657 [http-nio-8080-exec-89] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.658 [http-nio-8080-exec-89] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:28:21.659 [http-nio-8080-exec-89] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:21.659 [http-nio-8080-exec-89] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:21.660 [http-nio-8080-exec-89] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5cc76cc3
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:21.661 [http-nio-8080-exec-89] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:21.663 [http-nio-8080-exec-89] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:21.663 [http-nio-8080-exec-89] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:21.664 [http-nio-8080-exec-89] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:21.664 [http-nio-8080-exec-89] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:21.665 [http-nio-8080-exec-89] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:21.666 [http-nio-8080-exec-89] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:21.666 [http-nio-8080-exec-89] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:21.666 [http-nio-8080-exec-89] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:21.666 [http-nio-8080-exec-89] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:21.666 [http-nio-8080-exec-89] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:21.666 [http-nio-8080-exec-89] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:21.667 [http-nio-8080-exec-89] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:23.794 [http-nio-8080-exec-94] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:28:23.796 [http-nio-8080-exec-94] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:23.797 [http-nio-8080-exec-94] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:23.798 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7ce9cfa1
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:23.799 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:23.800 [http-nio-8080-exec-94] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:23.800 [http-nio-8080-exec-94] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:23.802 [http-nio-8080-exec-94] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#3
[DEBUG] 2020-02-28 15:28:23.803 [http-nio-8080-exec-94] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:30.086 [http-nio-8080-exec-99] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:28:30.087 [http-nio-8080-exec-99] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:30.087 [http-nio-8080-exec-99] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `title` : value = Write Stories
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:30.088 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.089 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6baff01d
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:30.090 [http-nio-8080-exec-99] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#3
[DEBUG] 2020-02-28 15:28:30.092 [http-nio-8080-exec-99] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:30.095 [http-nio-8080-exec-99] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-28 15:28:30.095 [http-nio-8080-exec-99] TransactionImpl - begin
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] TransactionImpl - committing
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] EntityPrinter - Listing entities:
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] EntityPrinter - com.streammedia.entity.FAQ{createdAt=2020-02-28T14:21:29, description=How do you create short stories., faqId=3, category=Stories, title=Write best Stories, user=com.streammedia.entity.User#2, updatedAt=2020-02-28T15:28:30.095029}
[DEBUG] 2020-02-28 15:28:30.097 [http-nio-8080-exec-99] SQL - update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:28:30.108 [http-nio-8080-exec-99] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:30.108 [http-nio-8080-exec-99] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:28:30.110 [http-nio-8080-exec-96] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:28:30.111 [http-nio-8080-exec-96] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:28:30.112 [http-nio-8080-exec-96] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:30.112 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:30.113 [http-nio-8080-exec-96] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:28:30.113 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:30.113 [http-nio-8080-exec-96] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.114 [http-nio-8080-exec-96] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:28:30.115 [http-nio-8080-exec-96] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:28:30.115 [http-nio-8080-exec-96] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:28:30.115 [http-nio-8080-exec-96] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:30.116 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@414847dd
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:28:30.117 [http-nio-8080-exec-96] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] Loader - Done entity load
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:28:30.129 [http-nio-8080-exec-96] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:28:30.130 [http-nio-8080-exec-96] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:30.131 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `title` : value = Write best Stories
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:30
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:28:30.132 [http-nio-8080-exec-96] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:36:38.850 [http-nio-8080-exec-95] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 15:36:38.852 [http-nio-8080-exec-95] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 15:36:38.856 [http-nio-8080-exec-95] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 15:36:38.948 [http-nio-8080-exec-95] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 15:36:38.949 [http-nio-8080-exec-95] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 15:36:39.056 [http-nio-8080-exec-95] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 15:36:39.056 [http-nio-8080-exec-95] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 15:36:39.057 [http-nio-8080-exec-95] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 15:36:39.252 [http-nio-8080-exec-95] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 15:36:39.279 [http-nio-8080-exec-95] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 15:36:39.282 [http-nio-8080-exec-95] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 15:36:39.308 [http-nio-8080-exec-95] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 15:36:39.346 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ec8c9c8
[DEBUG] 2020-02-28 15:36:39.346 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ec8c9c8
[DEBUG] 2020-02-28 15:36:39.346 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ec8c9c8
[DEBUG] 2020-02-28 15:36:39.347 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@32397a56
[DEBUG] 2020-02-28 15:36:39.347 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@23fd79d7
[DEBUG] 2020-02-28 15:36:39.348 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a4a2f95
[DEBUG] 2020-02-28 15:36:39.349 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@27c43f9b
[DEBUG] 2020-02-28 15:36:39.349 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@27c43f9b
[DEBUG] 2020-02-28 15:36:39.349 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27c43f9b
[DEBUG] 2020-02-28 15:36:39.350 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@811b0ba
[DEBUG] 2020-02-28 15:36:39.350 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@811b0ba
[DEBUG] 2020-02-28 15:36:39.350 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@811b0ba
[DEBUG] 2020-02-28 15:36:39.351 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@27c33b20
[DEBUG] 2020-02-28 15:36:39.351 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@27c33b20
[DEBUG] 2020-02-28 15:36:39.351 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27c33b20
[DEBUG] 2020-02-28 15:36:39.351 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1b24bf07
[DEBUG] 2020-02-28 15:36:39.351 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1b24bf07
[DEBUG] 2020-02-28 15:36:39.351 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b24bf07
[DEBUG] 2020-02-28 15:36:39.352 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c4efb1e
[DEBUG] 2020-02-28 15:36:39.352 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c4efb1e
[DEBUG] 2020-02-28 15:36:39.352 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c4efb1e
[DEBUG] 2020-02-28 15:36:39.353 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@622e931
[DEBUG] 2020-02-28 15:36:39.353 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@622e931
[DEBUG] 2020-02-28 15:36:39.354 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@622e931
[DEBUG] 2020-02-28 15:36:39.354 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@787eb092
[DEBUG] 2020-02-28 15:36:39.354 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@787eb092
[DEBUG] 2020-02-28 15:36:39.354 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@787eb092
[DEBUG] 2020-02-28 15:36:39.355 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5d964ec4
[DEBUG] 2020-02-28 15:36:39.355 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5d964ec4
[DEBUG] 2020-02-28 15:36:39.356 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55ba8018
[DEBUG] 2020-02-28 15:36:39.356 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55ba8018
[DEBUG] 2020-02-28 15:36:39.357 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1268fddb
[DEBUG] 2020-02-28 15:36:39.357 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1268fddb
[DEBUG] 2020-02-28 15:36:39.357 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@71c2b2de
[DEBUG] 2020-02-28 15:36:39.357 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2d9a6080
[DEBUG] 2020-02-28 15:36:39.358 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@86f2e91
[DEBUG] 2020-02-28 15:36:39.358 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@86f2e91
[DEBUG] 2020-02-28 15:36:39.360 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@58cf5020
[DEBUG] 2020-02-28 15:36:39.360 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58cf5020
[DEBUG] 2020-02-28 15:36:39.362 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6d689959
[DEBUG] 2020-02-28 15:36:39.362 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d689959
[DEBUG] 2020-02-28 15:36:39.363 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@53abf8ee
[DEBUG] 2020-02-28 15:36:39.363 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@53abf8ee
[DEBUG] 2020-02-28 15:36:39.364 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3aafdea6
[DEBUG] 2020-02-28 15:36:39.364 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3aafdea6
[DEBUG] 2020-02-28 15:36:39.366 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1981d59a
[DEBUG] 2020-02-28 15:36:39.366 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1981d59a
[DEBUG] 2020-02-28 15:36:39.369 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@524bf8f1
[DEBUG] 2020-02-28 15:36:39.369 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@524bf8f1
[DEBUG] 2020-02-28 15:36:39.372 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cc57fb6
[DEBUG] 2020-02-28 15:36:39.373 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cc57fb6
[DEBUG] 2020-02-28 15:36:39.374 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@149db30d
[DEBUG] 2020-02-28 15:36:39.374 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@149db30d
[DEBUG] 2020-02-28 15:36:39.375 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4fb501dc
[DEBUG] 2020-02-28 15:36:39.376 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fb501dc
[DEBUG] 2020-02-28 15:36:39.377 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@38a72563
[DEBUG] 2020-02-28 15:36:39.378 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38a72563
[DEBUG] 2020-02-28 15:36:39.379 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6c74a7fc
[DEBUG] 2020-02-28 15:36:39.379 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6c74a7fc
[DEBUG] 2020-02-28 15:36:39.379 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6c74a7fc
[DEBUG] 2020-02-28 15:36:39.381 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@112397ca
[DEBUG] 2020-02-28 15:36:39.382 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@933b691
[DEBUG] 2020-02-28 15:36:39.382 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@933b691
[DEBUG] 2020-02-28 15:36:39.383 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@933b691
[DEBUG] 2020-02-28 15:36:39.384 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60e56477
[DEBUG] 2020-02-28 15:36:39.385 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@65cb076d
[DEBUG] 2020-02-28 15:36:39.385 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@65cb076d
[DEBUG] 2020-02-28 15:36:39.386 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@36abd6aa
[DEBUG] 2020-02-28 15:36:39.386 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36abd6aa
[DEBUG] 2020-02-28 15:36:39.387 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d0322c0
[DEBUG] 2020-02-28 15:36:39.387 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d0322c0
[DEBUG] 2020-02-28 15:36:39.388 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@591a4b04
[DEBUG] 2020-02-28 15:36:39.388 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@591a4b04
[DEBUG] 2020-02-28 15:36:39.389 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c03a419
[DEBUG] 2020-02-28 15:36:39.389 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c03a419
[DEBUG] 2020-02-28 15:36:39.390 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b0bd744
[DEBUG] 2020-02-28 15:36:39.392 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4580981
[DEBUG] 2020-02-28 15:36:39.392 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4580981
[DEBUG] 2020-02-28 15:36:39.392 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4580981
[DEBUG] 2020-02-28 15:36:39.395 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13685198
[DEBUG] 2020-02-28 15:36:39.395 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13685198
[DEBUG] 2020-02-28 15:36:39.395 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13685198
[DEBUG] 2020-02-28 15:36:39.396 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@730ebb92
[DEBUG] 2020-02-28 15:36:39.397 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@e50ec53
[DEBUG] 2020-02-28 15:36:39.398 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3c908922
[DEBUG] 2020-02-28 15:36:39.398 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3c908922
[DEBUG] 2020-02-28 15:36:39.398 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3c908922
[DEBUG] 2020-02-28 15:36:39.399 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33ee96c0
[DEBUG] 2020-02-28 15:36:39.399 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33ee96c0
[DEBUG] 2020-02-28 15:36:39.399 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33ee96c0
[DEBUG] 2020-02-28 15:36:39.399 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6731f054
[DEBUG] 2020-02-28 15:36:39.400 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@20891bec
[DEBUG] 2020-02-28 15:36:39.401 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@43a29b7
[DEBUG] 2020-02-28 15:36:39.401 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43a29b7
[DEBUG] 2020-02-28 15:36:39.401 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@39241af2
[DEBUG] 2020-02-28 15:36:39.402 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@42f99805
[DEBUG] 2020-02-28 15:36:39.402 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f99805
[DEBUG] 2020-02-28 15:36:39.402 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@520a8783
[DEBUG] 2020-02-28 15:36:39.403 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@520a8783
[DEBUG] 2020-02-28 15:36:39.403 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cef190a
[DEBUG] 2020-02-28 15:36:39.403 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11364b68
[DEBUG] 2020-02-28 15:36:39.405 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@704c100b
[DEBUG] 2020-02-28 15:36:39.427 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7d9f70d0
[DEBUG] 2020-02-28 15:36:39.427 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d9f70d0
[DEBUG] 2020-02-28 15:36:39.429 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4236a211
[DEBUG] 2020-02-28 15:36:39.429 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74cb69b9
[DEBUG] 2020-02-28 15:36:39.430 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5898a861
[DEBUG] 2020-02-28 15:36:39.430 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56a2e435
[DEBUG] 2020-02-28 15:36:39.430 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21f3f2da
[DEBUG] 2020-02-28 15:36:39.430 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e5ac1fc
[DEBUG] 2020-02-28 15:36:39.430 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@131cabf6
[DEBUG] 2020-02-28 15:36:39.430 [http-nio-8080-exec-95] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@525e66ec
[DEBUG] 2020-02-28 15:36:39.462 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 15:36:39.463 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 15:36:39.463 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:36:39.463 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 15:36:39.464 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 15:36:39.466 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 15:36:39.466 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 15:36:39.467 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:36:39.469 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 15:36:39.470 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 15:36:39.471 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 15:36:39.471 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 15:36:39.472 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 15:36:39.473 [http-nio-8080-exec-95] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 15:36:39.477 [http-nio-8080-exec-95] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 15:36:39.477 [http-nio-8080-exec-95] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 15:36:39.477 [http-nio-8080-exec-95] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 15:36:39.619 [http-nio-8080-exec-95] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 15:36:39.845 [http-nio-8080-exec-95] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:36:39.845 [http-nio-8080-exec-95] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 15:36:39.845 [http-nio-8080-exec-95] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 15:36:39.876 [http-nio-8080-exec-95] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 15:36:39.891 [http-nio-8080-exec-95] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 15:36:39.917 [http-nio-8080-exec-95] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 15:36:39.951 [http-nio-8080-exec-95] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 15:36:39.953 [http-nio-8080-exec-95] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c132735] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eaee358]
[DEBUG] 2020-02-28 15:36:40.004 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.029 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.034 [http-nio-8080-exec-95] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 15:36:40.037 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 15:36:40.055 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.058 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 15:36:40.060 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 15:36:40.063 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 15:36:40.066 [http-nio-8080-exec-95] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 15:36:40.069 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.071 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.071 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:36:40.071 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 15:36:40.071 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:36:40.071 [http-nio-8080-exec-95] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:36:40.072 [http-nio-8080-exec-95] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:36:40.075 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.077 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.080 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.090 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.091 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.091 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.093 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.093 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.093 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:36:40.097 [http-nio-8080-exec-95] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:36:40.098 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.098 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:36:40.098 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 15:36:40.098 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:36:40.098 [http-nio-8080-exec-95] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - Building property password
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.099 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.100 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 15:36:40.101 [http-nio-8080-exec-95] PropertyBinder - Building property username
[DEBUG] 2020-02-28 15:36:40.102 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:36:40.102 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.102 [http-nio-8080-exec-95] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 15:36:40.102 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 15:36:40.106 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.106 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 15:36:40.106 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 15:36:40.106 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.107 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.112 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.112 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 15:36:40.112 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 15:36:40.112 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 15:36:40.112 [http-nio-8080-exec-95] PropertyBinder - Building property name
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.113 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.116 [http-nio-8080-exec-95] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:36:40.116 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:36:40.117 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.117 [http-nio-8080-exec-95] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 15:36:40.117 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - Building property author
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 15:36:40.118 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:36:40.119 [http-nio-8080-exec-95] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.120 [http-nio-8080-exec-95] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:36:40.121 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 15:36:40.122 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:36:40.123 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:36:40.124 [http-nio-8080-exec-95] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:36:40.125 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.126 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.126 [http-nio-8080-exec-95] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 15:36:40.126 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.127 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 15:36:40.128 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] PropertyBinder - Building property director
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.129 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 15:36:40.130 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - Building property link
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.131 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] PropertyBinder - Building property video
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 15:36:40.132 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 15:36:40.133 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.133 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 15:36:40.133 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - Building property category
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 15:36:40.134 [http-nio-8080-exec-95] PropertyBinder - Building property description
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] PropertyBinder - Building property title
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] PropertyBinder - Building property user
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 15:36:40.135 [http-nio-8080-exec-95] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 15:36:40.136 [http-nio-8080-exec-95] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 15:36:40.136 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 15:36:40.137 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - Building property email
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - Building property films
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 15:36:40.138 [http-nio-8080-exec-95] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 15:36:40.139 [http-nio-8080-exec-95] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 15:36:40.139 [http-nio-8080-exec-95] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 15:36:40.139 [http-nio-8080-exec-95] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 15:36:40.139 [http-nio-8080-exec-95] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 15:36:40.139 [http-nio-8080-exec-95] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 15:36:40.139 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 15:36:40.140 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 15:36:40.141 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 15:36:40.142 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 15:36:40.142 [http-nio-8080-exec-95] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:36:40.147 [http-nio-8080-exec-95] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:36:40.150 [http-nio-8080-exec-95] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:36:40.151 [http-nio-8080-exec-95] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 15:36:40.151 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 15:36:40.152 [http-nio-8080-exec-95] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:36:40.153 [http-nio-8080-exec-95] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 15:36:40.154 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:36:40.155 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.156 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.156 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.156 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.156 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.156 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.156 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.157 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.158 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.159 [http-nio-8080-exec-95] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Statistics: disabled
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 15:36:40.216 [http-nio-8080-exec-95] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 15:36:40.217 [http-nio-8080-exec-95] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 15:36:40.274 [http-nio-8080-exec-95] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 15:36:40.292 [http-nio-8080-exec-95] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 15:36:40.292 [http-nio-8080-exec-95] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56c5c506, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 15:36:40.317 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:36:40.317 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.318 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:36:40.318 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:36:40.318 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:36:40.318 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:36:40.318 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:36:40.318 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.319 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:36:40.319 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:36:40.319 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:36:40.319 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.323 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:36:40.323 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.328 [http-nio-8080-exec-95] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 15:36:40.330 [http-nio-8080-exec-95] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 15:36:40.330 [http-nio-8080-exec-95] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c132735] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7cca6184]
[DEBUG] 2020-02-28 15:36:40.365 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:36:40.366 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.372 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 15:36:40.372 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.651 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:36:40.651 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:36:40.652 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 15:36:40.652 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:36:40.672 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:36:40.672 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:36:40.673 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 15:36:40.673 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:36:40.684 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:36:40.685 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.685 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 15:36:40.686 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.693 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:36:40.693 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:36:40.694 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 15:36:40.694 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:36:40.714 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:36:40.714 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.719 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 15:36:40.720 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.764 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:36:40.764 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.764 [http-nio-8080-exec-95] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 15:36:40.764 [http-nio-8080-exec-95] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.787 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 15:36:40.788 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 15:36:40.790 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 15:36:40.790 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:36:40.790 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:36:40.790 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 15:36:40.790 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 15:36:40.791 [http-nio-8080-exec-95] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 15:36:40.795 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.822 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457d8def]
[DEBUG] 2020-02-28 15:36:40.823 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.823 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.823 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:36:40.825 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e58a095]
[DEBUG] 2020-02-28 15:36:40.826 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3cb3d2]
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49c4f134]
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@141f6d9]
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.827 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bd0cca]
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@333c002c]
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a6dc145]
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f043c95]
[DEBUG] 2020-02-28 15:36:40.828 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba7a3d9]
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2db25733]
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe697a5]
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.829 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.830 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1dd0701]
[DEBUG] 2020-02-28 15:36:40.831 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.831 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.831 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.844 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.850 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.851 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:36:40.851 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@763fec74]
[DEBUG] 2020-02-28 15:36:40.851 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.851 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.851 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:36:40.851 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dd48676]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69784b]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@93c787e]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46233f24]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5de6a0]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ea80351]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@212dc9bf]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@117543dc]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e06bba4]
[DEBUG] 2020-02-28 15:36:40.852 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24750faa]
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f754b1b]
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7b864c24]
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.853 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.854 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.854 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 15:36:40.872 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b5e097]
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@248bbf87]
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.873 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6618cdc7]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d45ee76]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cb11de]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4ab762]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44e1ff42]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2fb11b]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@50508b96]
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.874 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.875 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.875 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e117cd]
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.876 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1318fed6]
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fabbc34]
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e26328b]
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a1c81d7]
[DEBUG] 2020-02-28 15:36:40.878 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30a9d1d3]
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33407702]
[DEBUG] 2020-02-28 15:36:40.879 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d990ff0]
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7349894c]
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.880 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 15:36:40.881 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf8c842]
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6275b34]
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@726cf310]
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a67559]
[DEBUG] 2020-02-28 15:36:40.882 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ae46242]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46a027e9]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5341a85e]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e813d2]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7f17893f]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66922a44]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@134fe683]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27c6774f]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@614cd48b]
[DEBUG] 2020-02-28 15:36:40.883 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d5b5ddf]
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@504fcaa4]
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44a7b3ed]
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4348cf7e]
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@142ac76d]
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 15:36:40.884 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 15:36:40.885 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 15:36:40.887 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.887 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 15:36:40.887 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 15:36:40.887 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.887 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43dfd1d3]
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43a73e6]
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f42c5c2]
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@722ec4b0]
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d12e878]
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a754cd]
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:36:40.888 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702805ad]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d516b7]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e2f5a5f]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379df644]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f652eae]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a96d3]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3473c929]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c042635]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@145a56bb]
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.889 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@206311a7]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f3f5b5c]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7979ec2c]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d9433]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@741dcaf5]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c166cfa]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ab8f1d8]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17794eb0]
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.890 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 15:36:40.891 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 15:36:40.891 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4faca196]
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.892 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.895 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54b4d3be]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31977d17]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c344ba]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a98473f]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f0fe5d8]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@457a56eb]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ce2c6a]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48dcf109]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e172904]
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.900 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7856937d]
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@398d64dc]
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6244962e]
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40cdba4f]
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12349d0e]
[DEBUG] 2020-02-28 15:36:40.903 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1559409d]
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53ea41fe]
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed8860e]
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16d402ac]
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c060e8e]
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7128f020]
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:40.904 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:40.905 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:40.909 [http-nio-8080-exec-95] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70824801]
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6faf6955]
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad31143]
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.910 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f39058]
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5beb3b13]
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59306024]
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:36:40.911 [http-nio-8080-exec-95] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37f56005]
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5592940e]
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.918 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.919 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c244d05]
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e226510]
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7b48a]
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c057c5]
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bc95109]
[DEBUG] 2020-02-28 15:36:40.920 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd5fca]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74f4b19e]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fac83c5]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73bec128]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40f86885]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3179f4]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e83483b]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d2c658]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26ed3e27]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a30dd7]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@32455da8]
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.921 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c79c657]
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f62ec3a]
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@304b8d2f]
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2850b420]
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4033e758]
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b0aea04]
[DEBUG] 2020-02-28 15:36:40.922 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656baf1]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59809444]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f0b77d7]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43ade0f8]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@709f4b4e]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2d60d3ad]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65b72ff7]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff8dd34]
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.923 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5caff452]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7597838e]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bae78b8]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726c17b0]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c1e5f9c]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5d1a38]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49e080e3]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71d55a1a]
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 15:36:40.924 [http-nio-8080-exec-95] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 15:36:40.955 [http-nio-8080-exec-95] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 15:36:40.955 [http-nio-8080-exec-95] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 15:36:40.956 [http-nio-8080-exec-95] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 15:36:40.964 [http-nio-8080-exec-95] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 15:36:40.964 [http-nio-8080-exec-95] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 15:36:40.965 [http-nio-8080-exec-95] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 15:36:40.965 [http-nio-8080-exec-95] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 15:36:40.969 [http-nio-8080-exec-95] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1bf39713
[DEBUG] 2020-02-28 15:36:40.972 [http-nio-8080-exec-95] SessionFactoryRegistry - Registering SessionFactory: 40e52250-4769-48cf-be6e-f4dd6eed1b3f (<unnamed>)
[DEBUG] 2020-02-28 15:36:40.972 [http-nio-8080-exec-95] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 15:36:41.029 [http-nio-8080-exec-95] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 15:36:41.050 [http-nio-8080-exec-95] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:36:41.067 [http-nio-8080-exec-95] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@353b876a
[DEBUG] 2020-02-28 15:36:41.091 [http-nio-8080-exec-95] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:36:41.095 [http-nio-8080-exec-95] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:36:41.100 [http-nio-8080-exec-95] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 15:36:41.117 [http-nio-8080-exec-95] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 15:36:41.136 [http-nio-8080-exec-95] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 15:36:41.137 [http-nio-8080-exec-95] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 15:36:41.139 [http-nio-8080-exec-95] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 15:36:41.139 [http-nio-8080-exec-95] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 15:36:41.148 [http-nio-8080-exec-95] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 15:36:41.149 [http-nio-8080-exec-95] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 15:36:41.149 [http-nio-8080-exec-95] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 15:36:41.149 [http-nio-8080-exec-95] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:36:41.156 [http-nio-8080-exec-95] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:36:41.156 [http-nio-8080-exec-95] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:36:41.156 [http-nio-8080-exec-95] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 15:36:41.168 [http-nio-8080-exec-95] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:36:41.195 [http-nio-8080-exec-95] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:41.200 [http-nio-8080-exec-95] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:41.209 [http-nio-8080-exec-95] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:36:41.209 [http-nio-8080-exec-95] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:41.210 [http-nio-8080-exec-95] Loader - Result set row: 2
[DEBUG] 2020-02-28 15:36:41.210 [http-nio-8080-exec-95] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:36:41.211 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:41.237 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.241 [http-nio-8080-exec-95] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:41.247 [http-nio-8080-exec-95] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:36:41.248 [http-nio-8080-exec-95] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:36:41.254 [http-nio-8080-exec-95] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:41.261 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.264 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6673179d
[DEBUG] 2020-02-28 15:36:41.265 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:36:41.266 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.267 [http-nio-8080-exec-95] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:36:41.267 [http-nio-8080-exec-95] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:36:41.269 [http-nio-8080-exec-95] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:41.269 [http-nio-8080-exec-95] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:41.269 [http-nio-8080-exec-95] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:41.269 [http-nio-8080-exec-95] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] Loader - Done entity load
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:36:41.270 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `title` : value = Write best Stories
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:30
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:41.271 [http-nio-8080-exec-95] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:36:41.272 [http-nio-8080-exec-95] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:36:42.906 [http-nio-8080-exec-101] SQL - select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 15:36:42.913 [http-nio-8080-exec-101] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:36:42.913 [http-nio-8080-exec-101] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:36:42.914 [http-nio-8080-exec-101] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `category` : value = Stories
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T14:21:29
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `description` : value = How do you create short stories.
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `title` : value = Write best Stories
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:30
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#3]
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.915 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@61cf982a
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:36:42.916 [http-nio-8080-exec-101] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:36:42.918 [http-nio-8080-exec-101] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:42.918 [http-nio-8080-exec-101] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:42.918 [http-nio-8080-exec-101] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:42.918 [http-nio-8080-exec-101] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:42.918 [http-nio-8080-exec-101] Loader - Done entity load
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.FAQ#3
[DEBUG] 2020-02-28 15:36:42.919 [http-nio-8080-exec-101] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:36:42.922 [http-nio-8080-exec-101] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-28 15:36:42.922 [http-nio-8080-exec-101] TransactionImpl - begin
[DEBUG] 2020-02-28 15:36:42.934 [http-nio-8080-exec-101] TransactionImpl - committing
[DEBUG] 2020-02-28 15:36:42.934 [http-nio-8080-exec-101] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-28 15:36:42.935 [http-nio-8080-exec-101] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-28 15:36:42.936 [http-nio-8080-exec-101] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-02-28 15:36:42.936 [http-nio-8080-exec-101] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-28 15:36:42.938 [http-nio-8080-exec-101] EntityPrinter - Listing entities:
[DEBUG] 2020-02-28 15:36:42.938 [http-nio-8080-exec-101] EntityPrinter - com.streammedia.entity.FAQ{createdAt=2020-02-28T14:21:29, description=How do you create short stories., faqId=3, category=Stories, title=Write best Stories, user=com.streammedia.entity.User#2, updatedAt=2020-02-28T15:28:30}
[DEBUG] 2020-02-28 15:36:42.946 [http-nio-8080-exec-101] SQL - delete from faq where faq_id=?
[DEBUG] 2020-02-28 15:36:42.955 [http-nio-8080-exec-101] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:36:42.955 [http-nio-8080-exec-101] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:36:42.955 [http-nio-8080-exec-101] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-02-28 15:36:42.959 [http-nio-8080-exec-98] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:36:42.960 [http-nio-8080-exec-98] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:36:42.961 [http-nio-8080-exec-98] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:42.961 [http-nio-8080-exec-98] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.962 [http-nio-8080-exec-98] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:42.963 [http-nio-8080-exec-98] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:36:42.964 [http-nio-8080-exec-98] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:36:42.967 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@444a530
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:36:42.968 [http-nio-8080-exec-98] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:36:42.970 [http-nio-8080-exec-98] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:42.971 [http-nio-8080-exec-98] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:42.971 [http-nio-8080-exec-98] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:42.971 [http-nio-8080-exec-98] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:42.971 [http-nio-8080-exec-98] Loader - Done entity load
[DEBUG] 2020-02-28 15:36:42.971 [http-nio-8080-exec-98] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:42.971 [http-nio-8080-exec-98] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:42.972 [http-nio-8080-exec-98] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 15:36:45.105 [http-nio-8080-exec-93] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 15:36:45.106 [http-nio-8080-exec-93] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 15:36:45.110 [http-nio-8080-exec-93] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] Loader - Result set row: 1
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test. More and more
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `title` : value = how movies are created.
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.111 [http-nio-8080-exec-93] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 15:36:45.115 [http-nio-8080-exec-93] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 15:36:45.115 [http-nio-8080-exec-93] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 15:36:45.116 [http-nio-8080-exec-93] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:45.116 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:45.117 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 15:36:45.117 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.120 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 15:36:45.120 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.120 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:45.120 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5505c49c
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 15:36:45.121 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.122 [http-nio-8080-exec-93] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 15:36:45.122 [http-nio-8080-exec-93] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 15:36:45.123 [http-nio-8080-exec-93] Loader - Result set row: 0
[DEBUG] 2020-02-28 15:36:45.125 [http-nio-8080-exec-93] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 15:36:45.126 [http-nio-8080-exec-93] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 15:36:45.126 [http-nio-8080-exec-93] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:45.126 [http-nio-8080-exec-93] Loader - Done entity load
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28T00:00
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `title` : value = Where to find trailers
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28T15:28:17
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 15:36:45.127 [http-nio-8080-exec-93] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
