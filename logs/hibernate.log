[DEBUG] 2020-04-04 14:49:34.787 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-04-04 14:49:34.791 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-04-04 14:49:34.795 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-04-04 14:49:34.916 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-04-04 14:49:34.918 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-04-04 14:49:35.125 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-04-04 14:49:35.128 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-04-04 14:49:35.157 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-04-04 14:49:35.510 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-04-04 14:49:35.535 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-04-04 14:49:35.536 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-04-04 14:49:35.558 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-04-04 14:49:35.605 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7db75c33
[DEBUG] 2020-04-04 14:49:35.606 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7db75c33
[DEBUG] 2020-04-04 14:49:35.606 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7db75c33
[DEBUG] 2020-04-04 14:49:35.606 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@194ca6dc
[DEBUG] 2020-04-04 14:49:35.607 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1cc613f2
[DEBUG] 2020-04-04 14:49:35.607 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5be66e42
[DEBUG] 2020-04-04 14:49:35.608 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2103567d
[DEBUG] 2020-04-04 14:49:35.609 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2103567d
[DEBUG] 2020-04-04 14:49:35.609 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2103567d
[DEBUG] 2020-04-04 14:49:35.609 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@40a28ef7
[DEBUG] 2020-04-04 14:49:35.609 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@40a28ef7
[DEBUG] 2020-04-04 14:49:35.610 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40a28ef7
[DEBUG] 2020-04-04 14:49:35.610 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@62cf3ef
[DEBUG] 2020-04-04 14:49:35.610 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@62cf3ef
[DEBUG] 2020-04-04 14:49:35.610 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62cf3ef
[DEBUG] 2020-04-04 14:49:35.612 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7e834b80
[DEBUG] 2020-04-04 14:49:35.612 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7e834b80
[DEBUG] 2020-04-04 14:49:35.612 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e834b80
[DEBUG] 2020-04-04 14:49:35.613 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@38e9a476
[DEBUG] 2020-04-04 14:49:35.613 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@38e9a476
[DEBUG] 2020-04-04 14:49:35.613 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38e9a476
[DEBUG] 2020-04-04 14:49:35.614 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@25b9806d
[DEBUG] 2020-04-04 14:49:35.614 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@25b9806d
[DEBUG] 2020-04-04 14:49:35.615 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@25b9806d
[DEBUG] 2020-04-04 14:49:35.615 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1fc19006
[DEBUG] 2020-04-04 14:49:35.615 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1fc19006
[DEBUG] 2020-04-04 14:49:35.615 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1fc19006
[DEBUG] 2020-04-04 14:49:35.616 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5be31d2c
[DEBUG] 2020-04-04 14:49:35.616 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5be31d2c
[DEBUG] 2020-04-04 14:49:35.617 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7de71220
[DEBUG] 2020-04-04 14:49:35.617 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7de71220
[DEBUG] 2020-04-04 14:49:35.618 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@13d0ab7a
[DEBUG] 2020-04-04 14:49:35.618 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@13d0ab7a
[DEBUG] 2020-04-04 14:49:35.618 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@368302c9
[DEBUG] 2020-04-04 14:49:35.619 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f57ffd9
[DEBUG] 2020-04-04 14:49:35.620 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@76807746
[DEBUG] 2020-04-04 14:49:35.620 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@76807746
[DEBUG] 2020-04-04 14:49:35.621 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@fb641a6
[DEBUG] 2020-04-04 14:49:35.621 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@fb641a6
[DEBUG] 2020-04-04 14:49:35.624 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7fb75adb
[DEBUG] 2020-04-04 14:49:35.624 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7fb75adb
[DEBUG] 2020-04-04 14:49:35.626 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1e1096f7
[DEBUG] 2020-04-04 14:49:35.626 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1e1096f7
[DEBUG] 2020-04-04 14:49:35.627 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1ac9cce8
[DEBUG] 2020-04-04 14:49:35.627 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1ac9cce8
[DEBUG] 2020-04-04 14:49:35.628 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7dbd5041
[DEBUG] 2020-04-04 14:49:35.628 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7dbd5041
[DEBUG] 2020-04-04 14:49:35.629 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5062635e
[DEBUG] 2020-04-04 14:49:35.629 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5062635e
[DEBUG] 2020-04-04 14:49:35.630 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@375aed18
[DEBUG] 2020-04-04 14:49:35.630 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@375aed18
[DEBUG] 2020-04-04 14:49:35.632 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ee33d08
[DEBUG] 2020-04-04 14:49:35.632 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ee33d08
[DEBUG] 2020-04-04 14:49:35.633 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@e5b1daa
[DEBUG] 2020-04-04 14:49:35.633 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e5b1daa
[DEBUG] 2020-04-04 14:49:35.634 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2a18390e
[DEBUG] 2020-04-04 14:49:35.634 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a18390e
[DEBUG] 2020-04-04 14:49:35.635 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@186362f6
[DEBUG] 2020-04-04 14:49:35.635 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@186362f6
[DEBUG] 2020-04-04 14:49:35.635 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@186362f6
[DEBUG] 2020-04-04 14:49:35.637 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@314ff524
[DEBUG] 2020-04-04 14:49:35.638 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@82fc72
[DEBUG] 2020-04-04 14:49:35.638 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@82fc72
[DEBUG] 2020-04-04 14:49:35.639 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@82fc72
[DEBUG] 2020-04-04 14:49:35.639 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e02a98b
[DEBUG] 2020-04-04 14:49:35.640 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@20bfaaf
[DEBUG] 2020-04-04 14:49:35.641 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20bfaaf
[DEBUG] 2020-04-04 14:49:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@70bb1d12
[DEBUG] 2020-04-04 14:49:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70bb1d12
[DEBUG] 2020-04-04 14:49:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6903352f
[DEBUG] 2020-04-04 14:49:35.642 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6903352f
[DEBUG] 2020-04-04 14:49:35.644 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1e0567e7
[DEBUG] 2020-04-04 14:49:35.645 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e0567e7
[DEBUG] 2020-04-04 14:49:35.646 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3814e27
[DEBUG] 2020-04-04 14:49:35.646 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3814e27
[DEBUG] 2020-04-04 14:49:35.647 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1aa2d47c
[DEBUG] 2020-04-04 14:49:35.649 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1c549081
[DEBUG] 2020-04-04 14:49:35.649 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1c549081
[DEBUG] 2020-04-04 14:49:35.649 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1c549081
[DEBUG] 2020-04-04 14:49:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44dba972
[DEBUG] 2020-04-04 14:49:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44dba972
[DEBUG] 2020-04-04 14:49:35.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44dba972
[DEBUG] 2020-04-04 14:49:35.652 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4505e562
[DEBUG] 2020-04-04 14:49:35.653 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@164a2d1c
[DEBUG] 2020-04-04 14:49:35.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@53e20370
[DEBUG] 2020-04-04 14:49:35.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@53e20370
[DEBUG] 2020-04-04 14:49:35.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@53e20370
[DEBUG] 2020-04-04 14:49:35.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ce20729
[DEBUG] 2020-04-04 14:49:35.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ce20729
[DEBUG] 2020-04-04 14:49:35.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ce20729
[DEBUG] 2020-04-04 14:49:35.656 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@24d00390
[DEBUG] 2020-04-04 14:49:35.656 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@541c2378
[DEBUG] 2020-04-04 14:49:35.657 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1f235832
[DEBUG] 2020-04-04 14:49:35.657 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f235832
[DEBUG] 2020-04-04 14:49:35.658 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c16da18
[DEBUG] 2020-04-04 14:49:35.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3c1805e2
[DEBUG] 2020-04-04 14:49:35.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c1805e2
[DEBUG] 2020-04-04 14:49:35.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7580d27f
[DEBUG] 2020-04-04 14:49:35.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7580d27f
[DEBUG] 2020-04-04 14:49:35.662 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@39d4815a
[DEBUG] 2020-04-04 14:49:35.663 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@712cae75
[DEBUG] 2020-04-04 14:49:35.664 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76706536
[DEBUG] 2020-04-04 14:49:35.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3547f03f
[DEBUG] 2020-04-04 14:49:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3547f03f
[DEBUG] 2020-04-04 14:49:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@276b932c
[DEBUG] 2020-04-04 14:49:35.667 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ad4c899
[DEBUG] 2020-04-04 14:49:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b5f8df5
[DEBUG] 2020-04-04 14:49:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5caa5691
[DEBUG] 2020-04-04 14:49:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27234cdb
[DEBUG] 2020-04-04 14:49:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b8fc8a6
[DEBUG] 2020-04-04 14:49:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c08ce07
[DEBUG] 2020-04-04 14:49:35.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22980bc9
[DEBUG] 2020-04-04 14:49:35.720 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-04-04 14:49:35.721 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-04-04 14:49:35.722 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 14:49:35.722 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-04-04 14:49:35.722 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-04-04 14:49:35.723 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-04-04 14:49:35.723 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-04-04 14:49:35.724 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 14:49:35.725 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-04-04 14:49:35.725 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-04-04 14:49:35.726 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-04-04 14:49:35.726 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-04-04 14:49:35.726 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-04-04 14:49:35.728 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-04-04 14:49:35.738 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-04-04 14:49:35.738 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-04-04 14:49:35.739 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-04-04 14:49:36.007 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-04-04 14:49:36.453 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-04-04 14:49:36.454 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-04-04 14:49:36.454 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-04-04 14:49:36.512 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-04-04 14:49:36.546 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-04-04 14:49:36.579 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-04-04 14:49:36.672 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-04-04 14:49:36.676 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66f81614] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72a83ee3]
[DEBUG] 2020-04-04 14:49:36.857 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:36.908 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:36.921 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-04-04 14:49:36.928 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-04-04 14:49:36.996 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.004 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-04-04 14:49:37.007 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-04-04 14:49:37.011 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-04-04 14:49:37.013 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2020-04-04 14:49:37.017 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.020 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.020 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-04-04 14:49:37.020 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-04-04 14:49:37.020 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-04-04 14:49:37.020 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-04-04 14:49:37.021 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.021 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-04-04 14:49:37.021 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-04-04 14:49:37.021 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-04-04 14:49:37.021 [http-nio-8080-exec-5] PropertyBinder - Building property birthdate
[DEBUG] 2020-04-04 14:49:37.022 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.025 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=books, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.031 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.053 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.055 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.056 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.058 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.058 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.059 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.books
[DEBUG] 2020-04-04 14:49:37.069 [http-nio-8080-exec-5] PropertyBinder - Building property books
[DEBUG] 2020-04-04 14:49:37.071 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.071 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.071 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-04-04 14:49:37.071 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.071 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.102 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.crews
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] PropertyBinder - Building property crews
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.103 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] PropertyBinder - Building property faqs
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.104 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] PropertyBinder - Building property gender
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=musics, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.105 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.108 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=musics_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='musics_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.musics
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] PropertyBinder - Building property musics
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-04-04 14:49:37.109 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-04-04 14:49:37.112 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.113 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-04-04 14:49:37.113 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-04-04 14:49:37.113 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-04-04 14:49:37.113 [http-nio-8080-exec-5] PropertyBinder - Building property picture
[DEBUG] 2020-04-04 14:49:37.114 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.115 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.115 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.115 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.117 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.117 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.118 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.119 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.119 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:37.119 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-04-04 14:49:37.119 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.119 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=shortStories, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.119 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.120 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.120 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=shortStories_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.120 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='shortStories_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.120 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.120 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.120 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.shortStories
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] PropertyBinder - Building property shortStories
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-04-04 14:49:37.121 [http-nio-8080-exec-5] PropertyBinder - Building property trailers
[DEBUG] 2020-04-04 14:49:37.122 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.122 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.122 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-04-04 14:49:37.122 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-04-04 14:49:37.122 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-04-04 14:49:37.123 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-04-04 14:49:37.123 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-04-04 14:49:37.123 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-04-04 14:49:37.123 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-04-04 14:49:37.123 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-04-04 14:49:37.124 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-04-04 14:49:37.124 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.124 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-04-04 14:49:37.124 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-04-04 14:49:37.140 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.140 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] PropertyBinder - Building property roleId
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-04-04 14:49:37.141 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.142 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.142 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-04-04 14:49:37.142 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.142 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.142 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.142 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.144 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.144 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 14:49:37.145 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.145 [http-nio-8080-exec-5] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-04-04 14:49:37.145 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] PropertyBinder - Building property trailerId
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2020-04-04 14:49:37.146 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-04-04 14:49:37.147 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-04-04 14:49:37.153 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] PropertyBinder - Building property link
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-04-04 14:49:37.154 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.155 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.156 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.156 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.157 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.157 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-04-04 14:49:37.158 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-04-04 14:49:37.158 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-04-04 14:49:37.158 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-04-04 14:49:37.158 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 14:49:37.159 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.159 [http-nio-8080-exec-5] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-04-04 14:49:37.160 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-04-04 14:49:37.162 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.162 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-04-04 14:49:37.162 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] PropertyBinder - Building property faqId
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] PropertyBinder - Building property category
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.163 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-04-04 14:49:37.164 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.168 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.174 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.174 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.174 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.174 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:37.174 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.174 [http-nio-8080-exec-5] EntityBinder - Import with entity name Genre
[DEBUG] 2020-04-04 14:49:37.175 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-04-04 14:49:37.177 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.177 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-04-04 14:49:37.177 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-04-04 14:49:37.177 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] PropertyBinder - Building property genreId
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.178 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.179 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 14:49:37.179 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-04-04 14:49:37.179 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 14:49:37.179 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-04-04 14:49:37.179 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.180 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-04-04 14:49:37.181 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.181 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.181 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.181 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.181 [http-nio-8080-exec-5] EntityBinder - Import with entity name Film
[DEBUG] 2020-04-04 14:49:37.181 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] PropertyBinder - Building property filmId
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 14:49:37.186 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.187 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:37.188 [http-nio-8080-exec-5] PropertyBinder - Building property crews
[DEBUG] 2020-04-04 14:49:37.189 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.197 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-04-04 14:49:37.197 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-04-04 14:49:37.197 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-04-04 14:49:37.197 [http-nio-8080-exec-5] PropertyBinder - Building property director
[DEBUG] 2020-04-04 14:49:37.197 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-04-04 14:49:37.198 [http-nio-8080-exec-5] PropertyBinder - Building property episode
[DEBUG] 2020-04-04 14:49:37.200 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.200 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] PropertyBinder - Building property genres
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-04-04 14:49:37.201 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] PropertyBinder - Building property link
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.202 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-04-04 14:49:37.203 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.203 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.204 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.205 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.206 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.206 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-04-04 14:49:37.206 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-04-04 14:49:37.206 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-04-04 14:49:37.206 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-04-04 14:49:37.206 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:37.208 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.212 [http-nio-8080-exec-5] EntityBinder - Import with entity name Crew
[DEBUG] 2020-04-04 14:49:37.212 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-04-04 14:49:37.216 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.216 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-04-04 14:49:37.216 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-04-04 14:49:37.216 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] PropertyBinder - Building property crewId
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-04-04 14:49:37.217 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.218 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] PropertyBinder - Building property films
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-04-04 14:49:37.219 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] PropertyBinder - Building property profession
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.220 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.221 [http-nio-8080-exec-5] EntityBinder - Import with entity name BKCategory
[DEBUG] 2020-04-04 14:49:37.222 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.BkCategory on table BKCategory
[DEBUG] 2020-04-04 14:49:37.223 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=bkCategory_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.224 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property bkCategoryId with lazy=false
[DEBUG] 2020-04-04 14:49:37.224 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:bkCategoryId]
[DEBUG] 2020-04-04 14:49:37.225 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for bkCategoryId
[DEBUG] 2020-04-04 14:49:37.225 [http-nio-8080-exec-5] PropertyBinder - Building property bkCategoryId
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(bkCategory_id)]), bkCategoryId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=Books_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='Books_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='categories'}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='categories'}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.BkCategory.Books
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] PropertyBinder - Building property Books
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.234 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:createdAt]
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:description]
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:title]
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.235 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(BKCategory), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.BkCategory:updatedAt]
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] EntityBinder - Import with entity name Book
[DEBUG] 2020-04-04 14:49:37.236 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Book on table Book
[DEBUG] 2020-04-04 14:49:37.237 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=book_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.238 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property bookId with lazy=false
[DEBUG] 2020-04-04 14:49:37.238 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:bookId]
[DEBUG] 2020-04-04 14:49:37.238 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for bookId
[DEBUG] 2020-04-04 14:49:37.238 [http-nio-8080-exec-5] PropertyBinder - Building property bookId
[DEBUG] 2020-04-04 14:49:37.238 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(book_id)]), bookId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.238 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=isbn, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property ISBN with lazy=false
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:ISBN]
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for ISBN
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] PropertyBinder - Building property ISBN
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:author]
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 14:49:37.239 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2020-04-04 14:49:37.240 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.240 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=categories_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='categories_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='category_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.Book.categories
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] PropertyBinder - Building property categories
[DEBUG] 2020-04-04 14:49:37.241 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.242 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 14:49:37.242 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:cover]
[DEBUG] 2020-04-04 14:49:37.242 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.242 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:createdAt]
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=edition, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property edition with lazy=false
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:edition]
[DEBUG] 2020-04-04 14:49:37.243 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for edition
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - Building property edition
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=page_number, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property pageNumber with lazy=false
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:pageNumber]
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for pageNumber
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - Building property pageNumber
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:publicationDate]
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=publisher, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publisher with lazy=false
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:publisher]
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publisher
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] PropertyBinder - Building property publisher
[DEBUG] 2020-04-04 14:49:37.244 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:summary]
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] PropertyBinder - Building property summary
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:title]
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Book:updatedAt]
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.245 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.246 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.246 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.246 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Music
[DEBUG] 2020-04-04 14:49:37.246 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.246 [http-nio-8080-exec-5] EntityBinder - Import with entity name Music
[DEBUG] 2020-04-04 14:49:37.246 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Music on table Music
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=musicId, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property musicId with lazy=false
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:musicId]
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for musicId
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] PropertyBinder - Building property musicId
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(musicId)]), musicId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=artist, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property artist with lazy=false
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:artist]
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for artist
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] PropertyBinder - Building property artist
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=music_cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:cover]
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.247 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:createdAt]
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-04-04 14:49:37.248 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:duration]
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] PropertyBinder - Building property duration
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:title]
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.255 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:updatedAt]
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.256 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.257 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Music), mappingColumn=music_video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.257 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-04-04 14:49:37.257 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Music:video]
[DEBUG] 2020-04-04 14:49:37.259 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-04-04 14:49:37.259 [http-nio-8080-exec-5] PropertyBinder - Building property video
[DEBUG] 2020-04-04 14:49:37.260 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 14:49:37.260 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-04-04 14:49:37.260 [http-nio-8080-exec-5] EntityBinder - Import with entity name ShortStory
[DEBUG] 2020-04-04 14:49:37.268 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.ShortStory on table ShortStory
[DEBUG] 2020-04-04 14:49:37.271 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=short_story_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.271 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property shortStoryId with lazy=false
[DEBUG] 2020-04-04 14:49:37.277 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:shortStoryId]
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for shortStoryId
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] PropertyBinder - Building property shortStoryId
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(short_story_id)]), shortStoryId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:author]
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] PropertyBinder - Building property author
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:cover]
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] PropertyBinder - Building property cover
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.278 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:createdAt]
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:description]
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=publication_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:publicationDate]
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - Building property publicationDate
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:title]
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - Building property title
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.ShortStory:updatedAt]
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ShortStory), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-04-04 14:49:37.279 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.281 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for bkCategoryId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for bookId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for ISBN
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for edition
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for pageNumber
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publisher
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for musicId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for artist
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for shortStoryId
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-04-04 14:49:37.282 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-04-04 14:49:37.299 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-04-04 14:49:37.299 [http-nio-8080-exec-5] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-04-04 14:49:37.299 [http-nio-8080-exec-5] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [bkcategory_id] to be non-null as it is part of the primary key for table [bkcategory]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [book_id] to be non-null as it is part of the primary key for table [book]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [musicid] to be non-null as it is part of the primary key for table [music]
[DEBUG] 2020-04-04 14:49:37.300 [http-nio-8080-exec-5] PrimaryKey - Forcing column [short_story_id] to be non-null as it is part of the primary key for table [shortstory]
[DEBUG] 2020-04-04 14:49:37.301 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Book.categories
[DEBUG] 2020-04-04 14:49:37.301 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Book.categories
[DEBUG] 2020-04-04 14:49:37.306 [http-nio-8080-exec-5] PrimaryKey - Forcing column [book_id] to be non-null as it is part of the primary key for table [bookcategory]
[DEBUG] 2020-04-04 14:49:37.306 [http-nio-8080-exec-5] PrimaryKey - Forcing column [category_id] to be non-null as it is part of the primary key for table [bookcategory]
[DEBUG] 2020-04-04 14:49:37.306 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: book_id, element: category_id
[DEBUG] 2020-04-04 14:49:37.306 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:37.306 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:37.307 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-04-04 14:49:37.307 [http-nio-8080-exec-5] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-04-04 14:49:37.307 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-04-04 14:49:37.307 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:37.307 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.books
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.books through a foreign key
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.books -> Book
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Book.user
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.crews through a foreign key
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.crews -> Crew
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Crew.user
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-04-04 14:49:37.308 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.309 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.musics
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.musics through a foreign key
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.musics -> Music
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Music.user
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Music
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.shortStories
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.shortStories through a foreign key
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.shortStories -> ShortStory
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.ShortStory.user
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-04-04 14:49:37.310 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 14:49:37.311 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.BkCategory.Books
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.BkCategory.Books
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Book.categories
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: category_id, element: book_id
[DEBUG] 2020-04-04 14:49:37.312 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-04-04 14:49:37.313 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.317 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:37.318 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:37.318 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.318 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.318 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.318 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:37.318 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.324 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:37.325 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.326 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.326 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.328 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.328 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.336 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.441 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-04-04 14:49:37.442 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-04-04 14:49:37.443 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-04-04 14:49:37.446 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-04-04 14:49:37.446 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-04-04 14:49:37.446 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-04-04 14:49:37.446 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-04-04 14:49:37.446 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-04-04 14:49:37.539 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-04-04 14:49:37.594 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-04-04 14:49:37.594 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-45-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4e247bd1, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-04-04 14:49:37.632 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Music] is safe
[DEBUG] 2020-04-04 14:49:37.632 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Music
[DEBUG] 2020-04-04 14:49:37.635 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.BkCategory] is safe
[DEBUG] 2020-04-04 14:49:37.635 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:37.636 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-04-04 14:49:37.636 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:37.639 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-04-04 14:49:37.639 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 14:49:37.641 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Book] is safe
[DEBUG] 2020-04-04 14:49:37.641 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:37.645 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-04-04 14:49:37.645 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-04-04 14:49:37.646 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-04-04 14:49:37.646 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:37.650 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-04-04 14:49:37.651 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 14:49:37.657 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-04-04 14:49:37.657 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:37.663 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.ShortStory] is safe
[DEBUG] 2020-04-04 14:49:37.663 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 14:49:37.664 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-04-04 14:49:37.664 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:37.672 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-04-04 14:49:37.672 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-04-04 14:49:37.672 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66f81614] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41ce8c34]
[DEBUG] 2020-04-04 14:49:37.801 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Music] is safe
[DEBUG] 2020-04-04 14:49:37.801 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Music
[DEBUG] 2020-04-04 14:49:37.832 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Music] is safe
[DEBUG] 2020-04-04 14:49:37.832 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Music
[DEBUG] 2020-04-04 14:49:38.166 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.BkCategory] is safe
[DEBUG] 2020-04-04 14:49:38.166 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:38.167 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.BkCategory] is safe
[DEBUG] 2020-04-04 14:49:38.167 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:38.203 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-04-04 14:49:38.203 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:38.204 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-04-04 14:49:38.204 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:38.241 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-04-04 14:49:38.241 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 14:49:38.243 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-04-04 14:49:38.244 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 14:49:38.267 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Book] is safe
[DEBUG] 2020-04-04 14:49:38.267 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:38.269 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Book] is safe
[DEBUG] 2020-04-04 14:49:38.269 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:38.310 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-04-04 14:49:38.310 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-04-04 14:49:38.310 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-04-04 14:49:38.310 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-04-04 14:49:38.329 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-04-04 14:49:38.329 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:38.329 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-04-04 14:49:38.329 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:38.341 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-04-04 14:49:38.341 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 14:49:38.342 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-04-04 14:49:38.342 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 14:49:38.360 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-04-04 14:49:38.360 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:38.363 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-04-04 14:49:38.363 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:38.399 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.ShortStory] is safe
[DEBUG] 2020-04-04 14:49:38.399 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 14:49:38.399 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.ShortStory] is safe
[DEBUG] 2020-04-04 14:49:38.399 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 14:49:38.426 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-04-04 14:49:38.426 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:38.426 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-04-04 14:49:38.426 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:38.463 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Book.categories
[DEBUG] 2020-04-04 14:49:38.463 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into BookCategory (book_id, category_id) values (?, ?)
[DEBUG] 2020-04-04 14:49:38.464 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update BookCategory set category_id=? where book_id=? and category_id=?
[DEBUG] 2020-04-04 14:49:38.464 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from BookCategory where book_id=? and category_id=?
[DEBUG] 2020-04-04 14:49:38.464 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from BookCategory where book_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.BkCategory.Books
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into BookCategory (category_id, book_id) values (?, ?)
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update BookCategory set book_id=? where category_id=? and book_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from BookCategory where category_id=? and book_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from BookCategory where category_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.shortStories
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update ShortStory set user=? where short_story_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update ShortStory set  where short_story_id=?
[DEBUG] 2020-04-04 14:49:38.465 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update ShortStory set user=null where user=? and short_story_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update ShortStory set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Crew set user=? where crew_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Crew set  where crew_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Crew set user=null where user=? and crew_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Crew set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.musics
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Music set user=? where musicId=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Music set  where musicId=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Music set user=null where user=? and musicId=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Music set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-04-04 14:49:38.466 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-04-04 14:49:38.467 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.books
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Book set user=? where book_id=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Book set  where book_id=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Book set user=null where user=? and book_id=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Book set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-04-04 14:49:38.468 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-04-04 14:49:38.469 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Music
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select musicId from Music where musicId =?
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select music_.musicId, music_.artist as artist2_9_, music_.music_cover as music_co3_9_, music_.created_at as created_4_9_, music_.duration as duration5_9_, music_.title as title6_9_, music_.updated_at as updated_7_9_, music_.user as user9_9_, music_.music_video as music_vi8_9_ from Music music_ where music_.musicId=?
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Music (artist, music_cover, created_at, duration, title, updated_at, user, music_video, musicId) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Music set artist=?, music_cover=?, created_at=?, duration=?, title=?, updated_at=?, user=?, music_video=? where musicId=?
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Music where musicId=?
[DEBUG] 2020-04-04 14:49:38.476 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Music (artist, music_cover, created_at, duration, title, updated_at, user, music_video) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.520 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@707d90bc]
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : artist
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.522 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.527 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@317786f4]
[DEBUG] 2020-04-04 14:49:38.532 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.532 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.532 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.533 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3334b873]
[DEBUG] 2020-04-04 14:49:38.536 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251265d2]
[DEBUG] 2020-04-04 14:49:38.542 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.542 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.542 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ac712ca]
[DEBUG] 2020-04-04 14:49:38.542 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d103c52]
[DEBUG] 2020-04-04 14:49:38.542 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.542 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54694018]
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d05bdf4]
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fb6b3dc]
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c8ecd4]
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.musics
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67078156]
[DEBUG] 2020-04-04 14:49:38.543 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236d7f2e]
[DEBUG] 2020-04-04 14:49:38.545 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.545 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.545 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.545 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.545 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.545 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cb948c1]
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c861d12]
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59e53bdc]
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e767f1e]
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.546 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4fc336d0]
[DEBUG] 2020-04-04 14:49:38.548 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.548 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.548 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.570 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.576 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Music)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Music, querySpaceUid=<gen:0>, path=com.streammedia.entity.Music)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Music.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Music.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Music.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Music.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Music.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Music.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Music.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Music.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Music.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Music.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Music.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Music.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Music.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Music.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Music.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Music.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Music)
          - SQL table alias mapping - music0_
          - alias suffix - 0_
          - suffixed key columns - {musicId1_9_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Music [NONE]: select music0_.musicId as musicId1_9_0_, music0_.artist as artist2_9_0_, music0_.music_cover as music_co3_9_0_, music0_.created_at as created_4_9_0_, music0_.duration as duration5_9_0_, music0_.title as title6_9_0_, music0_.updated_at as updated_7_9_0_, music0_.user as user9_9_0_, music0_.music_video as music_vi8_9_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Music music0_ left outer join SM_Users user1_ on music0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where music0_.musicId=?
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b296399]
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : artist
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.580 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0560ba]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5e8422]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f1b615]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70671ac1]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a408cd]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c51edaf]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@177bad2e]
[DEBUG] 2020-04-04 14:49:38.581 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.583 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f821c12]
[DEBUG] 2020-04-04 14:49:38.583 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@936854f]
[DEBUG] 2020-04-04 14:49:38.586 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.587 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.587 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.musics
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a793d53]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3021edef]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@710dc595]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4efc10ce]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51c493d9]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9db69c]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@63a3e5f7]
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.588 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.589 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.589 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Music)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Music, querySpaceUid=<gen:0>, path=com.streammedia.entity.Music)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Music.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Music.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Music.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Music.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Music.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Music.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Music.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Music.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Music.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Music.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Music.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Music.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Music.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Music.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Music.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Music.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Music)
          - SQL table alias mapping - music0_
          - alias suffix - 0_
          - suffixed key columns - {musicId1_9_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.589 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Music [READ]: select music0_.musicId as musicId1_9_0_, music0_.artist as artist2_9_0_, music0_.music_cover as music_co3_9_0_, music0_.created_at as created_4_9_0_, music0_.duration as duration5_9_0_, music0_.title as title6_9_0_, music0_.updated_at as updated_7_9_0_, music0_.user as user9_9_0_, music0_.music_video as music_vi8_9_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Music music0_ left outer join SM_Users user1_ on music0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where music0_.musicId=?
[DEBUG] 2020-04-04 14:49:38.610 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Music: select music0_.musicId as musicId1_9_0_, music0_.artist as artist2_9_0_, music0_.music_cover as music_co3_9_0_, music0_.created_at as created_4_9_0_, music0_.duration as duration5_9_0_, music0_.title as title6_9_0_, music0_.updated_at as updated_7_9_0_, music0_.user as user9_9_0_, music0_.music_video as music_vi8_9_0_ from Music music0_ where music0_.musicId=?
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Music: select music0_.musicId as musicId1_9_0_, music0_.artist as artist2_9_0_, music0_.music_cover as music_co3_9_0_, music0_.created_at as created_4_9_0_, music0_.duration as duration5_9_0_, music0_.title as title6_9_0_, music0_.updated_at as updated_7_9_0_, music0_.user as user9_9_0_, music0_.music_video as music_vi8_9_0_ from Music music0_ where music0_.musicId=?
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.BkCategory
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select bkCategory_id from BKCategory where bkCategory_id =?
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select bkcategory_.bkCategory_id, bkcategory_.created_at as created_2_0_, bkcategory_.description as descript3_0_, bkcategory_.title as title4_0_, bkcategory_.updated_at as updated_5_0_ from BKCategory bkcategory_ where bkcategory_.bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into BKCategory (created_at, description, title, updated_at, bkCategory_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update BKCategory set created_at=?, description=?, title=?, updated_at=? where bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from BKCategory where bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into BKCategory (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f868bfd]
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : Books
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27fb6aa7]
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40b5874f]
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.611 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.BkCategory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:0>, path=com.streammedia.entity.BkCategory)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.BkCategory.Books, querySpaceUid=<gen:1>, path=com.streammedia.entity.BkCategory.Books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:2>, path=com.streammedia.entity.BkCategory.Books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.BkCategory)
          - SQL table alias mapping - bkcategory0_
          - alias suffix - 0_
          - suffixed key columns - {bkCatego1_0_0_}

[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.BkCategory [NONE]: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be725c7]
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : Books
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@194d0559]
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ae66c0]
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.612 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.BkCategory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:0>, path=com.streammedia.entity.BkCategory)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.BkCategory.Books, querySpaceUid=<gen:1>, path=com.streammedia.entity.BkCategory.Books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:2>, path=com.streammedia.entity.BkCategory.Books.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.BkCategory)
          - SQL table alias mapping - bkcategory0_
          - alias suffix - 0_
          - suffixed key columns - {bkCatego1_0_0_}

[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.BkCategory [READ]: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.BkCategory: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.BkCategory: select bkcategory0_.bkCategory_id as bkCatego1_0_0_, bkcategory0_.created_at as created_2_0_0_, bkcategory0_.description as descript3_0_0_, bkcategory0_.title as title4_0_0_, bkcategory0_.updated_at as updated_5_0_0_ from BKCategory bkcategory0_ where bkcategory0_.bkCategory_id=?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_5_, film_.created_at as created_3_5_, film_.director as director4_5_, film_.duration as duration5_5_, film_.episode as episode6_5_, film_.link as link7_5_, film_.pub_date as pub_date8_5_, film_.summary as summary9_5_, film_.title as title10_5_, film_.updated_at as updated11_5_, film_.user as user13_5_, film_.video as video12_5_ from Film film_ where film_.film_id=?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@715acaf]
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cae2ffc]
[DEBUG] 2020-04-04 14:49:38.613 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab0cccf]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.biography
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.createdAt
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.email
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.films
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews.films
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.firstName
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.lastName
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.profession
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.updateAt
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47190da]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.biography
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.birthdate
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.books
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b9d5fb1]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e3b7ee1]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.createdAt
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.crews
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews.user.crews
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.email
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.faqs
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@644d8bc]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@312988d1]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.films
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20582992]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c1870e]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.firstName
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.gender
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.lastName
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.musics
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55602032]
[DEBUG] 2020-04-04 14:49:38.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f2554f]
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.password
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.picture
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.roles
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4987fd7a]
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3087fab3]
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.shortStories
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64323d21]
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed044c5]
[DEBUG] 2020-04-04 14:49:38.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.trailers
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28ca1e48]
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27173b80]
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.updateAt
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.username
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5239d176]
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7653265c]
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:20> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6806d82d]
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.createdAt
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.description
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.films
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genres.films
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.title
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.updatedAt
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:21> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2d3d28]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:22> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65998e8a]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:23> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f3a229]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:24> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f510842]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:25> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4cb233]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:26> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@250890ee]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:27> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ee9c8c]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:28> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@568a93eb]
[DEBUG] 2020-04-04 14:49:38.618 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:29> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbe6e23]
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:30> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9183421]
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:31> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@459b9c57]
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:32> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b23a4f8]
[DEBUG] 2020-04-04 14:49:38.619 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:33> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f039807]
[DEBUG] 2020-04-04 14:49:38.620 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.620 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.620 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.620 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:34> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@27f210fa]
[DEBUG] 2020-04-04 14:49:38.621 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.621 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.621 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.621 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
                - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.crews.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.crews.<elements>.user.books)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.crews.<elements>.user.books.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.crews.<elements>.user.faqs)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.crews.<elements>.user.faqs.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.crews.<elements>.user.films)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.crews.<elements>.user.films.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.crews.<elements>.user.musics)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.crews.<elements>.user.musics.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.crews.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.crews.<elements>.user.roles.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.crews.<elements>.user.shortStories)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Film.crews.<elements>.user.shortStories.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Film.crews.<elements>.user.trailers)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Film.crews.<elements>.user.trailers.<elements>)
                   - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Film.crews.<elements>.user._com_streammedia_entity_Role_user)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:19>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:20>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:21>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:22>, path=com.streammedia.entity.Film.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:23>, path=com.streammedia.entity.Film.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:24>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:25>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:26>, path=com.streammedia.entity.Film.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:27>, path=com.streammedia.entity.Film.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:28>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:29>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:30>, path=com.streammedia.entity.Film.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:31>, path=com.streammedia.entity.Film.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:32>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:33>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:34>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_5_0_}
          - JOIN (JoinDefinedByMetadata(crews)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.Film.crews)
                - SQL table alias mapping - crews1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - crew_id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Crew)
                      - SQL table alias mapping - crew2_
                      - alias suffix - 2_
                      - suffixed key columns - {crew_id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 3_
                            - suffixed key columns - {user_id1_12_3_}
                            - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                               - CompositeQuerySpaceImpl(uid=<gen:18>)
                                  - SQL table alias mapping - user3_
          - JOIN (JoinDefinedByMetadata(genres)) : <gen:0> -> <gen:19>
             - CollectionQuerySpaceImpl(uid=<gen:19>, collection=com.streammedia.entity.Film.genres)
                - SQL table alias mapping - genres4_
                - alias suffix - 4_
                - suffixed key columns - {film_id1_7_4_}
                - entity-element alias suffix - 5_
                - 5_entity-element suffixed key columns - genre_id1_8_5_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:19> -> <gen:20>
                   - EntityQuerySpaceImpl(uid=<gen:20>, entity=com.streammedia.entity.Genre)
                      - SQL table alias mapping - genre5_
                      - alias suffix - 5_
                      - suffixed key columns - {genre_id1_8_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:21>
             - EntityQuerySpaceImpl(uid=<gen:21>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {user_id1_12_6_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:21> -> <gen:28>
                   - CollectionQuerySpaceImpl(uid=<gen:28>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles7_
                      - alias suffix - 7_
                      - suffixed key columns - {username5_10_7_}
                      - entity-element alias suffix - 8_
                      - 8_entity-element suffixed key columns - role_id1_10_8_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:28> -> <gen:29>
                         - EntityQuerySpaceImpl(uid=<gen:29>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles7_
                            - alias suffix - 8_
                            - suffixed key columns - {role_id1_10_8_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:21> -> <gen:34>
                   - CompositeQuerySpaceImpl(uid=<gen:34>)
                      - SQL table alias mapping - user6_

[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_5_0_, film0_.cover as cover2_5_0_, film0_.created_at as created_3_5_0_, film0_.director as director4_5_0_, film0_.duration as duration5_5_0_, film0_.episode as episode6_5_0_, film0_.link as link7_5_0_, film0_.pub_date as pub_date8_5_0_, film0_.summary as summary9_5_0_, film0_.title as title10_5_0_, film0_.updated_at as updated11_5_0_, film0_.user as user13_5_0_, film0_.video as video12_5_0_, crews1_.film_id as film_id1_6_1_, crew2_.crew_id as crew_id2_6_1_, crew2_.crew_id as crew_id1_3_2_, crew2_.biography as biograph2_3_2_, crew2_.created_at as created_3_3_2_, crew2_.email as email4_3_2_, crew2_.first_name as first_na5_3_2_, crew2_.last_name as last_nam6_3_2_, crew2_.profession as professi7_3_2_, crew2_.updated_at as updated_8_3_2_, crew2_.user as user9_3_2_, user3_.user_id as user_id1_12_3_, user3_.biography as biograph2_12_3_, user3_.birthdate as birthdat3_12_3_, user3_.created_at as created_4_12_3_, user3_.email as email5_12_3_, user3_.first_name as first_na6_12_3_, user3_.gender as gender7_12_3_, user3_.last_name as last_nam8_12_3_, user3_.password as password9_12_3_, user3_.picture as picture10_12_3_, user3_.updated_at as updated11_12_3_, user3_.username as usernam12_12_3_, genres4_.film_id as film_id1_7_4_, genre5_.genre_id as genre_id2_7_4_, genre5_.genre_id as genre_id1_8_5_, genre5_.created_at as created_2_8_5_, genre5_.description as descript3_8_5_, genre5_.title as title4_8_5_, genre5_.updated_at as updated_5_8_5_, user6_.user_id as user_id1_12_6_, user6_.biography as biograph2_12_6_, user6_.birthdate as birthdat3_12_6_, user6_.created_at as created_4_12_6_, user6_.email as email5_12_6_, user6_.first_name as first_na6_12_6_, user6_.gender as gender7_12_6_, user6_.last_name as last_nam8_12_6_, user6_.password as password9_12_6_, user6_.picture as picture10_12_6_, user6_.updated_at as updated11_12_6_, user6_.username as usernam12_12_6_, roles7_.username as username5_10_7_, roles7_.role_id as role_id1_10_7_, roles7_.role_id as role_id1_10_8_, roles7_.created_at as created_2_10_8_, roles7_.name as name3_10_8_, roles7_.updated_at as updated_4_10_8_, roles7_.username as username5_10_8_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id left outer join SM_Users user3_ on crew2_.user=user3_.user_id left outer join FilmGenre genres4_ on film0_.film_id=genres4_.film_id left outer join Genre genre5_ on genres4_.genre_id=genre5_.genre_id left outer join SM_Users user6_ on film0_.user=user6_.user_id left outer join Role roles7_ on user6_.username=roles7_.username where film0_.film_id=?
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5017d1d8]
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20f29f0a]
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4d29a0]
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.biography
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.createdAt
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.email
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.films
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews.films
[DEBUG] 2020-04-04 14:49:38.625 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.firstName
[DEBUG] 2020-04-04 14:49:38.626 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.lastName
[DEBUG] 2020-04-04 14:49:38.626 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.profession
[DEBUG] 2020-04-04 14:49:38.626 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.updateAt
[DEBUG] 2020-04-04 14:49:38.626 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user
[DEBUG] 2020-04-04 14:49:38.628 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b834d3]
[DEBUG] 2020-04-04 14:49:38.629 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.biography
[DEBUG] 2020-04-04 14:49:38.629 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.birthdate
[DEBUG] 2020-04-04 14:49:38.629 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.books
[DEBUG] 2020-04-04 14:49:38.629 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50904bb6]
[DEBUG] 2020-04-04 14:49:38.629 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51293e25]
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.createdAt
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.crews
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews.user.crews
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.email
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.faqs
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f4867f]
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62769359]
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.films
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30e9a95a]
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28296174]
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.firstName
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.gender
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.lastName
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.musics
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ed8dd70]
[DEBUG] 2020-04-04 14:49:38.630 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48e269a9]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.password
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.picture
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.roles
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@353caa96]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@567d5f84]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.shortStories
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e962b66]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e2a43c]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.trailers
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dacc0c]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3967224c]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.updateAt
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user.username
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@615e31d]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews.user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15ff6ac5]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:20> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150a4f74]
[DEBUG] 2020-04-04 14:49:38.631 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.createdAt
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.description
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.films
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genres.films
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.title
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres.updatedAt
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:21> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272fc117]
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.632 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:22> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e27f4fa]
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:23> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26dadfc8]
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:24> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f24957d]
[DEBUG] 2020-04-04 14:49:38.633 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:25> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554cdbf3]
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.634 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:26> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44dd7584]
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:27> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3489c648]
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:28> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f5d32d9]
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:29> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cfdef82]
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.635 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:30> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fafc379]
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:31> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9dbcf1]
[DEBUG] 2020-04-04 14:49:38.636 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:32> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51552e0e]
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:33> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f320e91]
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:34> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3ef7a805]
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.637 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.638 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.641 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
                - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.crews.<elements>.user)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.crews.<elements>.user.books)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.crews.<elements>.user.books.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.crews.<elements>.user.faqs)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.crews.<elements>.user.faqs.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.crews.<elements>.user.films)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.crews.<elements>.user.films.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.crews.<elements>.user.musics)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.crews.<elements>.user.musics.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.crews.<elements>.user.roles)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.crews.<elements>.user.roles.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.crews.<elements>.user.shortStories)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Film.crews.<elements>.user.shortStories.<elements>)
                   - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Film.crews.<elements>.user.trailers)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Film.crews.<elements>.user.trailers.<elements>)
                   - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Film.crews.<elements>.user._com_streammedia_entity_Role_user)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:19>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:20>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:21>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:22>, path=com.streammedia.entity.Film.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:23>, path=com.streammedia.entity.Film.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:24>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:25>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:26>, path=com.streammedia.entity.Film.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:27>, path=com.streammedia.entity.Film.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:28>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:29>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:30>, path=com.streammedia.entity.Film.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:31>, path=com.streammedia.entity.Film.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:32>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:33>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:34>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_5_0_}
          - JOIN (JoinDefinedByMetadata(crews)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.Film.crews)
                - SQL table alias mapping - crews1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - crew_id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Crew)
                      - SQL table alias mapping - crew2_
                      - alias suffix - 2_
                      - suffixed key columns - {crew_id1_3_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 3_
                            - suffixed key columns - {user_id1_12_3_}
                            - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                               - CompositeQuerySpaceImpl(uid=<gen:18>)
                                  - SQL table alias mapping - user3_
          - JOIN (JoinDefinedByMetadata(genres)) : <gen:0> -> <gen:19>
             - CollectionQuerySpaceImpl(uid=<gen:19>, collection=com.streammedia.entity.Film.genres)
                - SQL table alias mapping - genres4_
                - alias suffix - 4_
                - suffixed key columns - {film_id1_7_4_}
                - entity-element alias suffix - 5_
                - 5_entity-element suffixed key columns - genre_id1_8_5_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:19> -> <gen:20>
                   - EntityQuerySpaceImpl(uid=<gen:20>, entity=com.streammedia.entity.Genre)
                      - SQL table alias mapping - genre5_
                      - alias suffix - 5_
                      - suffixed key columns - {genre_id1_8_5_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:21>
             - EntityQuerySpaceImpl(uid=<gen:21>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user6_
                - alias suffix - 6_
                - suffixed key columns - {user_id1_12_6_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:21> -> <gen:28>
                   - CollectionQuerySpaceImpl(uid=<gen:28>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles7_
                      - alias suffix - 7_
                      - suffixed key columns - {username5_10_7_}
                      - entity-element alias suffix - 8_
                      - 8_entity-element suffixed key columns - role_id1_10_8_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:28> -> <gen:29>
                         - EntityQuerySpaceImpl(uid=<gen:29>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles7_
                            - alias suffix - 8_
                            - suffixed key columns - {role_id1_10_8_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:21> -> <gen:34>
                   - CompositeQuerySpaceImpl(uid=<gen:34>)
                      - SQL table alias mapping - user6_

[DEBUG] 2020-04-04 14:49:38.641 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_5_0_, film0_.cover as cover2_5_0_, film0_.created_at as created_3_5_0_, film0_.director as director4_5_0_, film0_.duration as duration5_5_0_, film0_.episode as episode6_5_0_, film0_.link as link7_5_0_, film0_.pub_date as pub_date8_5_0_, film0_.summary as summary9_5_0_, film0_.title as title10_5_0_, film0_.updated_at as updated11_5_0_, film0_.user as user13_5_0_, film0_.video as video12_5_0_, crews1_.film_id as film_id1_6_1_, crew2_.crew_id as crew_id2_6_1_, crew2_.crew_id as crew_id1_3_2_, crew2_.biography as biograph2_3_2_, crew2_.created_at as created_3_3_2_, crew2_.email as email4_3_2_, crew2_.first_name as first_na5_3_2_, crew2_.last_name as last_nam6_3_2_, crew2_.profession as professi7_3_2_, crew2_.updated_at as updated_8_3_2_, crew2_.user as user9_3_2_, user3_.user_id as user_id1_12_3_, user3_.biography as biograph2_12_3_, user3_.birthdate as birthdat3_12_3_, user3_.created_at as created_4_12_3_, user3_.email as email5_12_3_, user3_.first_name as first_na6_12_3_, user3_.gender as gender7_12_3_, user3_.last_name as last_nam8_12_3_, user3_.password as password9_12_3_, user3_.picture as picture10_12_3_, user3_.updated_at as updated11_12_3_, user3_.username as usernam12_12_3_, genres4_.film_id as film_id1_7_4_, genre5_.genre_id as genre_id2_7_4_, genre5_.genre_id as genre_id1_8_5_, genre5_.created_at as created_2_8_5_, genre5_.description as descript3_8_5_, genre5_.title as title4_8_5_, genre5_.updated_at as updated_5_8_5_, user6_.user_id as user_id1_12_6_, user6_.biography as biograph2_12_6_, user6_.birthdate as birthdat3_12_6_, user6_.created_at as created_4_12_6_, user6_.email as email5_12_6_, user6_.first_name as first_na6_12_6_, user6_.gender as gender7_12_6_, user6_.last_name as last_nam8_12_6_, user6_.password as password9_12_6_, user6_.picture as picture10_12_6_, user6_.updated_at as updated11_12_6_, user6_.username as usernam12_12_6_, roles7_.username as username5_10_7_, roles7_.role_id as role_id1_10_7_, roles7_.role_id as role_id1_10_8_, roles7_.created_at as created_2_10_8_, roles7_.name as name3_10_8_, roles7_.updated_at as updated_4_10_8_, roles7_.username as username5_10_8_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id left outer join SM_Users user3_ on crew2_.user=user3_.user_id left outer join FilmGenre genres4_ on film0_.film_id=genres4_.film_id left outer join Genre genre5_ on genres4_.genre_id=genre5_.genre_id left outer join SM_Users user6_ on film0_.user=user6_.user_id left outer join Role roles7_ on user6_.username=roles7_.username where film0_.film_id=?
[DEBUG] 2020-04-04 14:49:38.642 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_5_1_, film0_.cover as cover2_5_1_, film0_.created_at as created_3_5_1_, film0_.director as director4_5_1_, film0_.duration as duration5_5_1_, film0_.episode as episode6_5_1_, film0_.link as link7_5_1_, film0_.pub_date as pub_date8_5_1_, film0_.summary as summary9_5_1_, film0_.title as title10_5_1_, film0_.updated_at as updated11_5_1_, film0_.user as user13_5_1_, film0_.video as video12_5_1_, crews1_.film_id as film_id1_6_3_, crew2_.crew_id as crew_id2_6_3_, crew2_.crew_id as crew_id1_3_0_, crew2_.biography as biograph2_3_0_, crew2_.created_at as created_3_3_0_, crew2_.email as email4_3_0_, crew2_.first_name as first_na5_3_0_, crew2_.last_name as last_nam6_3_0_, crew2_.profession as professi7_3_0_, crew2_.updated_at as updated_8_3_0_, crew2_.user as user9_3_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-04-04 14:49:38.642 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_5_1_, film0_.cover as cover2_5_1_, film0_.created_at as created_3_5_1_, film0_.director as director4_5_1_, film0_.duration as duration5_5_1_, film0_.episode as episode6_5_1_, film0_.link as link7_5_1_, film0_.pub_date as pub_date8_5_1_, film0_.summary as summary9_5_1_, film0_.title as title10_5_1_, film0_.updated_at as updated11_5_1_, film0_.user as user13_5_1_, film0_.video as video12_5_1_, crews1_.film_id as film_id1_6_3_, crew2_.crew_id as crew_id2_6_3_, crew2_.crew_id as crew_id1_3_0_, crew2_.biography as biograph2_3_0_, crew2_.created_at as created_3_3_0_, crew2_.email as email4_3_0_, crew2_.first_name as first_na5_3_0_, crew2_.last_name as last_nam6_3_0_, crew2_.profession as professi7_3_0_, crew2_.updated_at as updated_8_3_0_, crew2_.user as user9_3_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-04-04 14:49:38.642 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_4_, faq_.created_at as created_3_4_, faq_.description as descript4_4_, faq_.title as title5_4_, faq_.updated_at as updated_6_4_, faq_.user as user7_4_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f037ae]
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@526f4057]
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@383af62a]
[DEBUG] 2020-04-04 14:49:38.643 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d6a281b]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75afa619]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20534a72]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f3763f4]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4391a0f9]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b0659fc]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71bc8a34]
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.646 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e07f34]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb89119]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@216feb61]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ed0960c]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bec6a4d]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df153cd]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@231b9bf1]
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.647 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.648 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.FAQ.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.FAQ.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.648 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_4_0_, faq0_.category as category2_4_0_, faq0_.created_at as created_3_4_0_, faq0_.description as descript4_4_0_, faq0_.title as title5_4_0_, faq0_.updated_at as updated_6_4_0_, faq0_.user as user7_4_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-04-04 14:49:38.648 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3157a41d]
[DEBUG] 2020-04-04 14:49:38.649 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@397429ea]
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.650 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3494c1a9]
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d545014]
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15f7032d]
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b0d4a3]
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40bbced5]
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f40f226]
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.651 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42036a88]
[DEBUG] 2020-04-04 14:49:38.652 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c2bba7]
[DEBUG] 2020-04-04 14:49:38.652 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.652 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.652 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.653 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@81102cc]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6028002a]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3abd9874]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab4f659]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1014569b]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d972896]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2bbf7168]
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.654 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.655 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.658 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.FAQ.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.FAQ.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.658 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_4_0_, faq0_.category as category2_4_0_, faq0_.created_at as created_3_4_0_, faq0_.description as descript4_4_0_, faq0_.title as title5_4_0_, faq0_.updated_at as updated_6_4_0_, faq0_.user as user7_4_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-04-04 14:49:38.658 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_4_0_, faq0_.category as category2_4_0_, faq0_.created_at as created_3_4_0_, faq0_.description as descript4_4_0_, faq0_.title as title5_4_0_, faq0_.updated_at as updated_6_4_0_, faq0_.user as user7_4_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-04-04 14:49:38.658 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_4_0_, faq0_.category as category2_4_0_, faq0_.created_at as created_3_4_0_, faq0_.description as descript4_4_0_, faq0_.title as title5_4_0_, faq0_.updated_at as updated_6_4_0_, faq0_.user as user7_4_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Book
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select book_id from Book where book_id =?
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select book_.book_id, book_.isbn as isbn2_1_, book_.author as author3_1_, book_.cover as cover4_1_, book_.created_at as created_5_1_, book_.edition as edition6_1_, book_.page_number as page_num7_1_, book_.pub_date as pub_date8_1_, book_.publisher as publishe9_1_, book_.summary as summary10_1_, book_.title as title11_1_, book_.updated_at as updated12_1_, book_.user as user13_1_ from Book book_ where book_.book_id=?
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Book (isbn, author, cover, created_at, edition, page_number, pub_date, publisher, summary, title, updated_at, user, book_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Book set isbn=?, author=?, cover=?, created_at=?, edition=?, page_number=?, pub_date=?, publisher=?, summary=?, title=?, updated_at=?, user=? where book_id=?
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Book where book_id=?
[DEBUG] 2020-04-04 14:49:38.659 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Book (isbn, author, cover, created_at, edition, page_number, pub_date, publisher, summary, title, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.660 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241660bd]
[DEBUG] 2020-04-04 14:49:38.660 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 14:49:38.660 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.660 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : categories
[DEBUG] 2020-04-04 14:49:38.660 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30e52678]
[DEBUG] 2020-04-04 14:49:38.660 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436cb80]
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13325033]
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63ecb219]
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51341f2f]
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50067ef2]
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ad3c24]
[DEBUG] 2020-04-04 14:49:38.661 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.662 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30d72c92]
[DEBUG] 2020-04-04 14:49:38.663 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416b90c0]
[DEBUG] 2020-04-04 14:49:38.663 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22f997f1]
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d6ad396]
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.664 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.665 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.665 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74d0d315]
[DEBUG] 2020-04-04 14:49:38.665 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69a0a0df]
[DEBUG] 2020-04-04 14:49:38.665 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.665 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.665 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eef47e5]
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a5b2bf]
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72cdc022]
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7597fa13]
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@51634b2b]
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.666 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.669 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.674 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Book, querySpaceUid=<gen:0>, path=com.streammedia.entity.Book)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Book.categories, querySpaceUid=<gen:1>, path=com.streammedia.entity.Book.categories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:2>, path=com.streammedia.entity.Book.categories.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Book.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Book.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Book.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Book.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Book.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Book.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Book.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Book.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Book.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Book.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Book.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Book.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Book.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Book.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                   - CompositeQuerySpaceImpl(uid=<gen:18>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.674 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Book [NONE]: select book0_.book_id as book_id1_1_0_, book0_.isbn as isbn2_1_0_, book0_.author as author3_1_0_, book0_.cover as cover4_1_0_, book0_.created_at as created_5_1_0_, book0_.edition as edition6_1_0_, book0_.page_number as page_num7_1_0_, book0_.pub_date as pub_date8_1_0_, book0_.publisher as publishe9_1_0_, book0_.summary as summary10_1_0_, book0_.title as title11_1_0_, book0_.updated_at as updated12_1_0_, book0_.user as user13_1_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Book book0_ left outer join SM_Users user1_ on book0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where book0_.book_id=?
[DEBUG] 2020-04-04 14:49:38.674 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@521c3ed9]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : categories
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53e02bc1]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5c99e4]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f859a40]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d67d211]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15ecf9e0]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76583687]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73f6d71a]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4032642f]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3263a630]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b852f5]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40b30b5f]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13f31c7a]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c0e7a12]
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.675 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28cc6590]
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675d5471]
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2931324e]
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37925769]
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7c3944ee]
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.676 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.679 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Book, querySpaceUid=<gen:0>, path=com.streammedia.entity.Book)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Book.categories, querySpaceUid=<gen:1>, path=com.streammedia.entity.Book.categories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:2>, path=com.streammedia.entity.Book.categories.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Book.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Book.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Book.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Book.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Book.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Book.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Book.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Book.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Book.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Book.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Book.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Book.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Book.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Book.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Book.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Book.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                   - CompositeQuerySpaceImpl(uid=<gen:18>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.679 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Book [READ]: select book0_.book_id as book_id1_1_0_, book0_.isbn as isbn2_1_0_, book0_.author as author3_1_0_, book0_.cover as cover4_1_0_, book0_.created_at as created_5_1_0_, book0_.edition as edition6_1_0_, book0_.page_number as page_num7_1_0_, book0_.pub_date as pub_date8_1_0_, book0_.publisher as publishe9_1_0_, book0_.summary as summary10_1_0_, book0_.title as title11_1_0_, book0_.updated_at as updated12_1_0_, book0_.user as user13_1_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Book book0_ left outer join SM_Users user1_ on book0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where book0_.book_id=?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Book: select book0_.book_id as book_id1_1_1_, book0_.isbn as isbn2_1_1_, book0_.author as author3_1_1_, book0_.cover as cover4_1_1_, book0_.created_at as created_5_1_1_, book0_.edition as edition6_1_1_, book0_.page_number as page_num7_1_1_, book0_.pub_date as pub_date8_1_1_, book0_.publisher as publishe9_1_1_, book0_.summary as summary10_1_1_, book0_.title as title11_1_1_, book0_.updated_at as updated12_1_1_, book0_.user as user13_1_1_, categories1_.book_id as book_id1_2_3_, bkcategory2_.bkCategory_id as category2_2_3_, bkcategory2_.bkCategory_id as bkCatego1_0_0_, bkcategory2_.created_at as created_2_0_0_, bkcategory2_.description as descript3_0_0_, bkcategory2_.title as title4_0_0_, bkcategory2_.updated_at as updated_5_0_0_ from Book book0_ left outer join BookCategory categories1_ on book0_.book_id=categories1_.book_id left outer join BKCategory bkcategory2_ on categories1_.category_id=bkcategory2_.bkCategory_id where book0_.book_id=?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Book: select book0_.book_id as book_id1_1_1_, book0_.isbn as isbn2_1_1_, book0_.author as author3_1_1_, book0_.cover as cover4_1_1_, book0_.created_at as created_5_1_1_, book0_.edition as edition6_1_1_, book0_.page_number as page_num7_1_1_, book0_.pub_date as pub_date8_1_1_, book0_.publisher as publishe9_1_1_, book0_.summary as summary10_1_1_, book0_.title as title11_1_1_, book0_.updated_at as updated12_1_1_, book0_.user as user13_1_1_, categories1_.book_id as book_id1_2_3_, bkcategory2_.bkCategory_id as category2_2_3_, bkcategory2_.bkCategory_id as bkCatego1_0_0_, bkcategory2_.created_at as created_2_0_0_, bkcategory2_.description as descript3_0_0_, bkcategory2_.title as title4_0_0_, bkcategory2_.updated_at as updated_5_0_0_ from Book book0_ left outer join BookCategory categories1_ on book0_.book_id=categories1_.book_id left outer join BKCategory bkcategory2_ on categories1_.category_id=bkcategory2_.bkCategory_id where book0_.book_id=?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_10_, role_.name as name3_10_, role_.updated_at as updated_4_10_, role_.username as username5_10_ from Role role_ where role_.role_id=?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-04-04 14:49:38.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@514996e1]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426d8eec]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7da8375a]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e1e21b]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a550285]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307d3a58]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c53d9ea]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27090341]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ea6c0f]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c2910]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e9227f0]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ee2668]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77b2ac4e]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4adb5f01]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15295c0d]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4524e5a6]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2716f190]
[DEBUG] 2020-04-04 14:49:38.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.682 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.682 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Role.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Role.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Role.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_10_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_10_0_, role0_.created_at as created_2_10_0_, role0_.name as name3_10_0_, role0_.updated_at as updated_4_10_0_, role0_.username as username5_10_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68336ae9]
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad24126]
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72f2190e]
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db9d887]
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@356a6567]
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e5bfea4]
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.683 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c83be08]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f8d2cff]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@692a3134]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28c55c6b]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49d7c485]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5be394]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1740c4da]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e4e45d]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6260e988]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1257f113]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3209197]
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.684 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.685 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Role.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:12>, path=com.streammedia.entity.Role.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:13>, path=com.streammedia.entity.Role.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_10_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.685 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_10_0_, role0_.created_at as created_2_10_0_, role0_.name as name3_10_0_, role0_.updated_at as updated_4_10_0_, role0_.username as username5_10_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-04-04 14:49:38.685 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_10_0_, role0_.created_at as created_2_10_0_, role0_.name as name3_10_0_, role0_.updated_at as updated_4_10_0_, role0_.username as username5_10_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-04-04 14:49:38.685 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_10_0_, role0_.created_at as created_2_10_0_, role0_.name as name3_10_0_, role0_.updated_at as updated_4_10_0_, role0_.username as username5_10_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_8_, genre_.description as descript3_8_, genre_.title as title4_8_, genre_.updated_at as updated_5_8_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549dc8a9]
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e44fed3]
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddea3e2]
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.686 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_8_0_}

[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_8_0_, genre0_.created_at as created_2_8_0_, genre0_.description as descript3_8_0_, genre0_.title as title4_8_0_, genre0_.updated_at as updated_5_8_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573ce670]
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c180bb8]
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c1786a]
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_8_0_}

[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_8_0_, genre0_.created_at as created_2_8_0_, genre0_.description as descript3_8_0_, genre0_.title as title4_8_0_, genre0_.updated_at as updated_5_8_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_8_0_, genre0_.created_at as created_2_8_0_, genre0_.description as descript3_8_0_, genre0_.title as title4_8_0_, genre0_.updated_at as updated_5_8_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 14:49:38.687 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_8_0_, genre0_.created_at as created_2_8_0_, genre0_.description as descript3_8_0_, genre0_.title as title4_8_0_, genre0_.updated_at as updated_5_8_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_13_, trailer_.cover as cover3_13_, trailer_.created_at as created_4_13_, trailer_.duration as duration5_13_, trailer_.links as links6_13_, trailer_.pub_date as pub_date7_13_, trailer_.summary as summary8_13_, trailer_.title as title9_13_, trailer_.updated_at as updated10_13_, trailer_.user as user12_13_, trailer_.video as video11_13_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24fe13e4]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23e2971b]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@684aec6d]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb292cd]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68df8c6f]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@292826c0]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16be9e0c]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5142ec]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@497911dd]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@218f2014]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@432384d7]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1432e87d]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1544e4df]
[DEBUG] 2020-04-04 14:49:38.688 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d13f9e3]
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@236bd66a]
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7165ef05]
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2d3d6c1a]
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.689 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Trailer.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Trailer.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Trailer.user.shortStories.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_13_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_13_0_, trailer0_.author as author2_13_0_, trailer0_.cover as cover3_13_0_, trailer0_.created_at as created_4_13_0_, trailer0_.duration as duration5_13_0_, trailer0_.links as links6_13_0_, trailer0_.pub_date as pub_date7_13_0_, trailer0_.summary as summary8_13_0_, trailer0_.title as title9_13_0_, trailer0_.updated_at as updated10_13_0_, trailer0_.user as user12_13_0_, trailer0_.video as video11_13_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cbb1ea6]
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4633e1a]
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5387b592]
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c4375e]
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.690 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a4a5052]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3301f47f]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d44eca8]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bcc4e99]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@339c4372]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f82fb72]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75597786]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ca85732]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d7e1406]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753f3bb0]
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28c8b4dc]
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2426e8ce]
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b1301ab]
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.692 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.693 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Trailer.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Trailer.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Trailer.user.shortStories.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_13_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.693 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_13_0_, trailer0_.author as author2_13_0_, trailer0_.cover as cover3_13_0_, trailer0_.created_at as created_4_13_0_, trailer0_.duration as duration5_13_0_, trailer0_.links as links6_13_0_, trailer0_.pub_date as pub_date7_13_0_, trailer0_.summary as summary8_13_0_, trailer0_.title as title9_13_0_, trailer0_.updated_at as updated10_13_0_, trailer0_.user as user12_13_0_, trailer0_.video as video11_13_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 14:49:38.694 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_13_0_, trailer0_.author as author2_13_0_, trailer0_.cover as cover3_13_0_, trailer0_.created_at as created_4_13_0_, trailer0_.duration as duration5_13_0_, trailer0_.links as links6_13_0_, trailer0_.pub_date as pub_date7_13_0_, trailer0_.summary as summary8_13_0_, trailer0_.title as title9_13_0_, trailer0_.updated_at as updated10_13_0_, trailer0_.user as user12_13_0_, trailer0_.video as video11_13_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 14:49:38.699 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_13_0_, trailer0_.author as author2_13_0_, trailer0_.cover as cover3_13_0_, trailer0_.created_at as created_4_13_0_, trailer0_.duration as duration5_13_0_, trailer0_.links as links6_13_0_, trailer0_.pub_date as pub_date7_13_0_, trailer0_.summary as summary8_13_0_, trailer0_.title as title9_13_0_, trailer0_.updated_at as updated10_13_0_, trailer0_.user as user12_13_0_, trailer0_.video as video11_13_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_12_, user_.birthdate as birthdat3_12_, user_.created_at as created_4_12_, user_.email as email5_12_, user_.first_name as first_na6_12_, user_.gender as gender7_12_, user_.last_name as last_nam8_12_, user_.password as password9_12_, user_.picture as picture10_12_, user_.updated_at as updated11_12_, user_.username as usernam12_12_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.700 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4936cf28]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@90872e2]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23f8e34]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d0f5ed4]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ecb98c3]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@449e649a]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aae1c13]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3dd00c6c]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f8695]
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 14:49:38.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : musics
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5802854a]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128644dd]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f88898d]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2019c7]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : shortStories
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bebdec1]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@739065a]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50344f62]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278ad508]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@42721aee]
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.702 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.musics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.musics.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=com.streammedia.entity.User.shortStories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=com.streammedia.entity.User.shortStories.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:11>
             - CollectionQuerySpaceImpl(uid=<gen:11>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_10_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_10_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:11> -> <gen:12>
                   - EntityQuerySpaceImpl(uid=<gen:12>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_10_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:17>
             - CompositeQuerySpaceImpl(uid=<gen:17>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_12_0_, user0_.biography as biograph2_12_0_, user0_.birthdate as birthdat3_12_0_, user0_.created_at as created_4_12_0_, user0_.email as email5_12_0_, user0_.first_name as first_na6_12_0_, user0_.gender as gender7_12_0_, user0_.last_name as last_nam8_12_0_, user0_.password as password9_12_0_, user0_.picture as picture10_12_0_, user0_.updated_at as updated11_12_0_, user0_.username as usernam12_12_0_, roles1_.username as username5_10_1_, roles1_.role_id as role_id1_10_1_, roles1_.role_id as role_id1_10_2_, roles1_.created_at as created_2_10_2_, roles1_.name as name3_10_2_, roles1_.updated_at as updated_4_10_2_, roles1_.username as username5_10_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f0bdeb7]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : books
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cafa884]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675bc382]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@460447b8]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba78f9d]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2aedede5]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13936ce9]
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.703 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77cec0a4]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402262a7]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : musics
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5653d83]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d99ede2]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cd3c715]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f37bb72]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : shortStories
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@235f8b11]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41515823]
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-04-04 14:49:38.704 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22c1afb7]
[DEBUG] 2020-04-04 14:49:38.707 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@232c3651]
[DEBUG] 2020-04-04 14:49:38.707 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 14:49:38.707 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-04-04 14:49:38.707 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.707 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7c743626]
[DEBUG] 2020-04-04 14:49:38.708 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.708 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.708 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.709 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.books)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.books.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.musics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.musics.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=com.streammedia.entity.User.shortStories)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=com.streammedia.entity.User.shortStories.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_12_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:11>
             - CollectionQuerySpaceImpl(uid=<gen:11>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_10_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_10_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:11> -> <gen:12>
                   - EntityQuerySpaceImpl(uid=<gen:12>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_10_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:17>
             - CompositeQuerySpaceImpl(uid=<gen:17>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-04-04 14:49:38.709 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_12_0_, user0_.biography as biograph2_12_0_, user0_.birthdate as birthdat3_12_0_, user0_.created_at as created_4_12_0_, user0_.email as email5_12_0_, user0_.first_name as first_na6_12_0_, user0_.gender as gender7_12_0_, user0_.last_name as last_nam8_12_0_, user0_.password as password9_12_0_, user0_.picture as picture10_12_0_, user0_.updated_at as updated11_12_0_, user0_.username as usernam12_12_0_, roles1_.username as username5_10_1_, roles1_.role_id as role_id1_10_1_, roles1_.role_id as role_id1_10_2_, roles1_.created_at as created_2_10_2_, roles1_.name as name3_10_2_, roles1_.updated_at as updated_4_10_2_, roles1_.username as username5_10_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 14:49:38.710 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_12_1_, user0_.biography as biograph2_12_1_, user0_.birthdate as birthdat3_12_1_, user0_.created_at as created_4_12_1_, user0_.email as email5_12_1_, user0_.first_name as first_na6_12_1_, user0_.gender as gender7_12_1_, user0_.last_name as last_nam8_12_1_, user0_.password as password9_12_1_, user0_.picture as picture10_12_1_, user0_.updated_at as updated11_12_1_, user0_.username as usernam12_12_1_, roles1_.username as username5_10_3_, roles1_.role_id as role_id1_10_3_, roles1_.role_id as role_id1_10_0_, roles1_.created_at as created_2_10_0_, roles1_.name as name3_10_0_, roles1_.updated_at as updated_4_10_0_, roles1_.username as username5_10_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 14:49:38.710 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_12_1_, user0_.biography as biograph2_12_1_, user0_.birthdate as birthdat3_12_1_, user0_.created_at as created_4_12_1_, user0_.email as email5_12_1_, user0_.first_name as first_na6_12_1_, user0_.gender as gender7_12_1_, user0_.last_name as last_nam8_12_1_, user0_.password as password9_12_1_, user0_.picture as picture10_12_1_, user0_.updated_at as updated11_12_1_, user0_.username as usernam12_12_1_, roles1_.username as username5_10_3_, roles1_.role_id as role_id1_10_3_, roles1_.role_id as role_id1_10_0_, roles1_.created_at as created_2_10_0_, roles1_.name as name3_10_0_, roles1_.updated_at as updated_4_10_0_, roles1_.username as username5_10_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-04-04 14:49:38.713 [http-nio-8080-exec-5] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_12_1_, user0_.biography as biograph2_12_1_, user0_.birthdate as birthdat3_12_1_, user0_.created_at as created_4_12_1_, user0_.email as email5_12_1_, user0_.first_name as first_na6_12_1_, user0_.gender as gender7_12_1_, user0_.last_name as last_nam8_12_1_, user0_.password as password9_12_1_, user0_.picture as picture10_12_1_, user0_.updated_at as updated11_12_1_, user0_.username as usernam12_12_1_, roles1_.username as username5_10_3_, roles1_.role_id as role_id1_10_3_, roles1_.role_id as role_id1_10_0_, roles1_.created_at as created_2_10_0_, roles1_.name as name3_10_0_, roles1_.updated_at as updated_4_10_0_, roles1_.username as username5_10_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.ShortStory
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select short_story_id from ShortStory where short_story_id =?
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select shortstory_.short_story_id, shortstory_.author as author2_11_, shortstory_.cover as cover3_11_, shortstory_.created_at as created_4_11_, shortstory_.description as descript5_11_, shortstory_.publication_date as publicat6_11_, shortstory_.title as title7_11_, shortstory_.updated_at as updated_8_11_, shortstory_.user as user9_11_ from ShortStory shortstory_ where shortstory_.short_story_id=?
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into ShortStory (author, cover, created_at, description, publication_date, title, updated_at, user, short_story_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update ShortStory set author=?, cover=?, created_at=?, description=?, publication_date=?, title=?, updated_at=?, user=? where short_story_id=?
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from ShortStory where short_story_id=?
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into ShortStory (author, cover, created_at, description, publication_date, title, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.714 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2305eca1]
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1ff282]
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@457ecfba]
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@521dd771]
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c7a452]
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58181a5d]
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ba80dfb]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5732e9a0]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69692220]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@713b17a2]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a571bab]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6886a8]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a30dfe7]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139f5904]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.shortStories
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13872a31]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a39063c]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3717108e]
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.716 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.717 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.ShortStory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:0>, path=com.streammedia.entity.ShortStory)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.ShortStory.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.ShortStory.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.ShortStory.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.ShortStory.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.ShortStory.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.ShortStory.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.ShortStory.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.ShortStory.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.ShortStory.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.ShortStory.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.ShortStory.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.ShortStory.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.ShortStory.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.ShortStory.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.ShortStory.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.ShortStory.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.ShortStory)
          - SQL table alias mapping - shortstory0_
          - alias suffix - 0_
          - suffixed key columns - {short_st1_11_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.ShortStory [NONE]: select shortstory0_.short_story_id as short_st1_11_0_, shortstory0_.author as author2_11_0_, shortstory0_.cover as cover3_11_0_, shortstory0_.created_at as created_4_11_0_, shortstory0_.description as descript5_11_0_, shortstory0_.publication_date as publicat6_11_0_, shortstory0_.title as title7_11_0_, shortstory0_.updated_at as updated_8_11_0_, shortstory0_.user as user9_11_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from ShortStory shortstory0_ left outer join SM_Users user1_ on shortstory0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ae4055]
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f085b26]
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66211538]
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6356074a]
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e6ab16d]
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e1c6e9]
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.718 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c079758]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb8adc5]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4828e86]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6838d671]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58b53179]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4279692f]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@529f2958]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cbaf624]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.shortStories
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fb2228b]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@492fa8f]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@20324898]
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.719 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.ShortStory)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:0>, path=com.streammedia.entity.ShortStory)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.ShortStory.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:2>, path=com.streammedia.entity.ShortStory.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:3>, path=com.streammedia.entity.ShortStory.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:4>, path=com.streammedia.entity.ShortStory.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:5>, path=com.streammedia.entity.ShortStory.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.ShortStory.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.ShortStory.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.ShortStory.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.ShortStory.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.ShortStory.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.ShortStory.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.ShortStory.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.ShortStory.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:14>, path=com.streammedia.entity.ShortStory.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:15>, path=com.streammedia.entity.ShortStory.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:16>, path=com.streammedia.entity.ShortStory.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.ShortStory)
          - SQL table alias mapping - shortstory0_
          - alias suffix - 0_
          - suffixed key columns - {short_st1_11_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:16>
                   - CompositeQuerySpaceImpl(uid=<gen:16>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.ShortStory [READ]: select shortstory0_.short_story_id as short_st1_11_0_, shortstory0_.author as author2_11_0_, shortstory0_.cover as cover3_11_0_, shortstory0_.created_at as created_4_11_0_, shortstory0_.description as descript5_11_0_, shortstory0_.publication_date as publicat6_11_0_, shortstory0_.title as title7_11_0_, shortstory0_.updated_at as updated_8_11_0_, shortstory0_.user as user9_11_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from ShortStory shortstory0_ left outer join SM_Users user1_ on shortstory0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.ShortStory: select shortstory0_.short_story_id as short_st1_11_0_, shortstory0_.author as author2_11_0_, shortstory0_.cover as cover3_11_0_, shortstory0_.created_at as created_4_11_0_, shortstory0_.description as descript5_11_0_, shortstory0_.publication_date as publicat6_11_0_, shortstory0_.title as title7_11_0_, shortstory0_.updated_at as updated_8_11_0_, shortstory0_.user as user9_11_0_ from ShortStory shortstory0_ where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.ShortStory: select shortstory0_.short_story_id as short_st1_11_0_, shortstory0_.author as author2_11_0_, shortstory0_.cover as cover3_11_0_, shortstory0_.created_at as created_4_11_0_, shortstory0_.description as descript5_11_0_, shortstory0_.publication_date as publicat6_11_0_, shortstory0_.title as title7_11_0_, shortstory0_.updated_at as updated_8_11_0_, shortstory0_.user as user9_11_0_ from ShortStory shortstory0_ where shortstory0_.short_story_id=?
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_3_, crew_.created_at as created_3_3_, crew_.email as email4_3_, crew_.first_name as first_na5_3_, crew_.last_name as last_nam6_3_, crew_.profession as professi7_3_, crew_.updated_at as updated_8_3_, crew_.user as user9_3_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.720 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Crew set biography=?, created_at=?, email=?, first_name=?, last_name=?, profession=?, updated_at=?, user=? where crew_id=?
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a772757]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5be60f30]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602b59cc]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23258701]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36ed8631]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c325c19]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@320cf11]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1241caad]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48c70ada]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568b554f]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53d640c8]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f5efcbd]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f3fae56]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3312a5d3]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@282f8888]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb58c63]
[DEBUG] 2020-04-04 14:49:38.721 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47c49e77]
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bbc647d]
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7f83d24a]
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Crew.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Crew.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                   - CompositeQuerySpaceImpl(uid=<gen:18>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_3_0_, crew0_.biography as biograph2_3_0_, crew0_.created_at as created_3_3_0_, crew0_.email as email4_3_0_, crew0_.first_name as first_na5_3_0_, crew0_.last_name as last_nam6_3_0_, crew0_.profession as professi7_3_0_, crew0_.updated_at as updated_8_3_0_, crew0_.user as user9_3_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e2385b2]
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 14:49:38.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17040c91]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7668e4db]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c4f1b1]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31395ecf]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463a0f]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73fc1acf]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3138b5]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b85c15a]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa20a67]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591b4b9e]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50e63498]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bcb0cf]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f17732d]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d2adcb5]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39404226]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79f4f530]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f09b5b]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e342824]
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.723 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.724 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.books)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.books.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.musics)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.musics.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:13>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:14>, path=com.streammedia.entity.Crew.user.shortStories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:15>, path=com.streammedia.entity.Crew.user.shortStories.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:16>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:17>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:18>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_12_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:12>
                   - CollectionQuerySpaceImpl(uid=<gen:12>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_10_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_10_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:12> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_10_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:18>
                   - CompositeQuerySpaceImpl(uid=<gen:18>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-04-04 14:49:38.724 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_3_0_, crew0_.biography as biograph2_3_0_, crew0_.created_at as created_3_3_0_, crew0_.email as email4_3_0_, crew0_.first_name as first_na5_3_0_, crew0_.last_name as last_nam6_3_0_, crew0_.profession as professi7_3_0_, crew0_.updated_at as updated_8_3_0_, crew0_.user as user9_3_0_, user1_.user_id as user_id1_12_1_, user1_.biography as biograph2_12_1_, user1_.birthdate as birthdat3_12_1_, user1_.created_at as created_4_12_1_, user1_.email as email5_12_1_, user1_.first_name as first_na6_12_1_, user1_.gender as gender7_12_1_, user1_.last_name as last_nam8_12_1_, user1_.password as password9_12_1_, user1_.picture as picture10_12_1_, user1_.updated_at as updated11_12_1_, user1_.username as usernam12_12_1_, roles2_.username as username5_10_2_, roles2_.role_id as role_id1_10_2_, roles2_.role_id as role_id1_10_3_, roles2_.created_at as created_2_10_3_, roles2_.name as name3_10_3_, roles2_.updated_at as updated_4_10_3_, roles2_.username as username5_10_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-04-04 14:49:38.727 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_3_0_, crew0_.biography as biograph2_3_0_, crew0_.created_at as created_3_3_0_, crew0_.email as email4_3_0_, crew0_.first_name as first_na5_3_0_, crew0_.last_name as last_nam6_3_0_, crew0_.profession as professi7_3_0_, crew0_.updated_at as updated_8_3_0_, crew0_.user as user9_3_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-04-04 14:49:38.727 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_3_0_, crew0_.biography as biograph2_3_0_, crew0_.created_at as created_3_3_0_, crew0_.email as email4_3_0_, crew0_.first_name as first_na5_3_0_, crew0_.last_name as last_nam6_3_0_, crew0_.profession as professi7_3_0_, crew0_.updated_at as updated_8_3_0_, crew0_.user as user9_3_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-04-04 14:49:38.739 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6688d57b]
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d1d1625]
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : Books
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : Books
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.740 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.741 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.742 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Book.categories)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Book.categories, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Book.categories])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Book.categories].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Book.categories)
          - SQL table alias mapping - categories0_
          - alias suffix - 0_
          - suffixed key columns - {book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - bkCatego1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.BkCategory)
                - SQL table alias mapping - bkcategory1_
                - alias suffix - 1_
                - suffixed key columns - {bkCatego1_0_1_}

[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Book.categories: select categories0_.book_id as book_id1_2_0_, categories0_.category_id as category2_2_0_, bkcategory1_.bkCategory_id as bkCatego1_0_1_, bkcategory1_.created_at as created_2_0_1_, bkcategory1_.description as descript3_0_1_, bkcategory1_.title as title4_0_1_, bkcategory1_.updated_at as updated_5_0_1_ from BookCategory categories0_ inner join BKCategory bkcategory1_ on categories0_.category_id=bkcategory1_.bkCategory_id where categories0_.book_id=?
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aedab2]
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498e0be6]
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.744 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.745 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.745 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_13_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_13_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_13_1_}

[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_13_0_, trailers0_.trailer_id as trailer_1_13_0_, trailers0_.trailer_id as trailer_1_13_1_, trailers0_.author as author2_13_1_, trailers0_.cover as cover3_13_1_, trailers0_.created_at as created_4_13_1_, trailers0_.duration as duration5_13_1_, trailers0_.links as links6_13_1_, trailers0_.pub_date as pub_date7_13_1_, trailers0_.summary as summary8_13_1_, trailers0_.title as title9_13_1_, trailers0_.updated_at as updated10_13_1_, trailers0_.user as user12_13_1_, trailers0_.video as video11_13_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7efb60f]
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@afa933a]
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_10_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_10_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_10_1_}

[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_10_0_, roles0_.role_id as role_id1_10_0_, roles0_.role_id as role_id1_10_1_, roles0_.created_at as created_2_10_1_, roles0_.name as name3_10_1_, roles0_.updated_at as updated_4_10_1_, roles0_.username as username5_10_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33825b44]
[DEBUG] 2020-04-04 14:49:38.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dbf7d4d]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : categories
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : categories
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17fafdac]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.books
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@314b4c1d]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1922dbb7]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59f542a2]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15786f70]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eb8e266]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71c86165]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dbddac]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540e2168]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d9c525d]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6dd5c2]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@307553e]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26273157]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29a68174]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18549247]
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.747 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.748 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.748 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@21c38ad6]
[DEBUG] 2020-04-04 14:49:38.748 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.748 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.748 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.748 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.BkCategory.Books)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.BkCategory.Books, querySpaceUid=<gen:0>, path=[com.streammedia.entity.BkCategory.Books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:1>, path=[com.streammedia.entity.BkCategory.Books].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:3>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:4>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=[com.streammedia.entity.BkCategory.Books].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.BkCategory.Books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {category2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - book_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Book)
                - SQL table alias mapping - book1_
                - alias suffix - 1_
                - suffixed key columns - {book_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_12_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:17>
                         - CompositeQuerySpaceImpl(uid=<gen:17>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.BkCategory.Books: select books0_.category_id as category2_2_0_, books0_.book_id as book_id1_2_0_, book1_.book_id as book_id1_1_1_, book1_.isbn as isbn2_1_1_, book1_.author as author3_1_1_, book1_.cover as cover4_1_1_, book1_.created_at as created_5_1_1_, book1_.edition as edition6_1_1_, book1_.page_number as page_num7_1_1_, book1_.pub_date as pub_date8_1_1_, book1_.publisher as publishe9_1_1_, book1_.summary as summary10_1_1_, book1_.title as title11_1_1_, book1_.updated_at as updated12_1_1_, book1_.user as user13_1_1_, user2_.user_id as user_id1_12_2_, user2_.biography as biograph2_12_2_, user2_.birthdate as birthdat3_12_2_, user2_.created_at as created_4_12_2_, user2_.email as email5_12_2_, user2_.first_name as first_na6_12_2_, user2_.gender as gender7_12_2_, user2_.last_name as last_nam8_12_2_, user2_.password as password9_12_2_, user2_.picture as picture10_12_2_, user2_.updated_at as updated11_12_2_, user2_.username as usernam12_12_2_ from BookCategory books0_ inner join Book book1_ on books0_.book_id=book1_.book_id left outer join SM_Users user2_ on book1_.user=user2_.user_id where books0_.category_id=?
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@234121ab]
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fbb492e]
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.751 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.752 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.752 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_4_1_}

[DEBUG] 2020-04-04 14:49:38.752 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_4_0_, faqs0_.faq_id as faq_id1_4_0_, faqs0_.faq_id as faq_id1_4_1_, faqs0_.category as category2_4_1_, faqs0_.created_at as created_3_4_1_, faqs0_.description as descript4_4_1_, faqs0_.title as title5_4_1_, faqs0_.updated_at as updated_6_4_1_, faqs0_.user as user7_4_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b664c9f]
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5190e4]
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.shortStories)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.shortStories])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.shortStories].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.shortStories)
          - SQL table alias mapping - shortstori0_
          - alias suffix - 0_
          - suffixed key columns - {user9_11_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - short_st1_11_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.ShortStory)
                - SQL table alias mapping - shortstori0_
                - alias suffix - 1_
                - suffixed key columns - {short_st1_11_1_}

[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.shortStories: select shortstori0_.user as user9_11_0_, shortstori0_.short_story_id as short_st1_11_0_, shortstori0_.short_story_id as short_st1_11_1_, shortstori0_.author as author2_11_1_, shortstori0_.cover as cover3_11_1_, shortstori0_.created_at as created_4_11_1_, shortstori0_.description as descript5_11_1_, shortstori0_.publication_date as publicat6_11_1_, shortstori0_.title as title7_11_1_, shortstori0_.updated_at as updated_8_11_1_, shortstori0_.user as user9_11_1_ from ShortStory shortstori0_ where shortstori0_.user=?
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5894944a]
[DEBUG] 2020-04-04 14:49:38.753 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab0f90c]
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@eeba22e]
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23be5266]
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.754 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.756 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.756 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.crews].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.crews].<elements>.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.crews].<elements>.films.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {user9_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crews0_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_3_1_}

[DEBUG] 2020-04-04 14:49:38.756 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.crews: select crews0_.user as user9_3_0_, crews0_.crew_id as crew_id1_3_0_, crews0_.crew_id as crew_id1_3_1_, crews0_.biography as biograph2_3_1_, crews0_.created_at as created_3_3_1_, crews0_.email as email4_3_1_, crews0_.first_name as first_na5_3_1_, crews0_.last_name as last_nam6_3_1_, crews0_.profession as professi7_3_1_, crews0_.updated_at as updated_8_3_1_, crews0_.user as user9_3_1_ from Crew crews0_ where crews0_.user=?
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c9394c5]
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@243d37cd]
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : artist
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.757 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.musics)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.musics])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.musics].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.musics)
          - SQL table alias mapping - musics0_
          - alias suffix - 0_
          - suffixed key columns - {user9_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - musicId1_9_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Music)
                - SQL table alias mapping - musics0_
                - alias suffix - 1_
                - suffixed key columns - {musicId1_9_1_}

[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.musics: select musics0_.user as user9_9_0_, musics0_.musicId as musicId1_9_0_, musics0_.musicId as musicId1_9_1_, musics0_.artist as artist2_9_1_, musics0_.music_cover as music_co3_9_1_, musics0_.created_at as created_4_9_1_, musics0_.duration as duration5_9_1_, musics0_.title as title6_9_1_, musics0_.updated_at as updated_7_9_1_, musics0_.user as user9_9_1_, musics0_.music_video as music_vi8_9_1_ from Music musics0_ where musics0_.user=?
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@669dd7e4]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd307a5]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@103949d0]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23e49a5d]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34b82583]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a7cf1c1]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dcda8a1]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18ac0ca6]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@220949a8]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ff656d1]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7e6b2e]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@574f8b5b]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fe3cc13]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22be45e0]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec56d82]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55fb3452]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d9f9aa]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24182394]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7164f3e8]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d311032]
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.758 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.759 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.books)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.books.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Crew.films].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:14>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:15>, path=[com.streammedia.entity.Crew.films].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:16>, path=[com.streammedia.entity.Crew.films].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:17>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:18>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:19>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_5_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_12_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:19>
                         - CompositeQuerySpaceImpl(uid=<gen:19>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 14:49:38.761 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_6_0_, films0_.film_id as film_id1_6_0_, film1_.film_id as film_id1_5_1_, film1_.cover as cover2_5_1_, film1_.created_at as created_3_5_1_, film1_.director as director4_5_1_, film1_.duration as duration5_5_1_, film1_.episode as episode6_5_1_, film1_.link as link7_5_1_, film1_.pub_date as pub_date8_5_1_, film1_.summary as summary9_5_1_, film1_.title as title10_5_1_, film1_.updated_at as updated11_5_1_, film1_.user as user13_5_1_, film1_.video as video12_5_1_, user2_.user_id as user_id1_12_2_, user2_.biography as biograph2_12_2_, user2_.birthdate as birthdat3_12_2_, user2_.created_at as created_4_12_2_, user2_.email as email5_12_2_, user2_.first_name as first_na6_12_2_, user2_.gender as gender7_12_2_, user2_.last_name as last_nam8_12_2_, user2_.password as password9_12_2_, user2_.picture as picture10_12_2_, user2_.updated_at as updated11_12_2_, user2_.username as usernam12_12_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@237f3d53]
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75526167]
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69e17963]
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5e6461]
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.762 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3588ae52]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1650f35d]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad1f09a]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1adb39ac]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b44d2ed]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a9f06c3]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2f742a]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c7a203a]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a45ae2]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53cfff0b]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77e55f7c]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ad3ca4a]
[DEBUG] 2020-04-04 14:49:38.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@913e4b8]
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25087536]
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cbd054]
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:19> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c6ed49d]
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.764 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.765 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.books)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.books.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Genre.films].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:14>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:15>, path=[com.streammedia.entity.Genre.films].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:16>, path=[com.streammedia.entity.Genre.films].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:17>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:18>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:19>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_5_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_12_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:19>
                         - CompositeQuerySpaceImpl(uid=<gen:19>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_7_0_, films0_.film_id as film_id1_7_0_, film1_.film_id as film_id1_5_1_, film1_.cover as cover2_5_1_, film1_.created_at as created_3_5_1_, film1_.director as director4_5_1_, film1_.duration as duration5_5_1_, film1_.episode as episode6_5_1_, film1_.link as link7_5_1_, film1_.pub_date as pub_date8_5_1_, film1_.summary as summary9_5_1_, film1_.title as title10_5_1_, film1_.updated_at as updated11_5_1_, film1_.user as user13_5_1_, film1_.video as video12_5_1_, user2_.user_id as user_id1_12_2_, user2_.biography as biograph2_12_2_, user2_.birthdate as birthdat3_12_2_, user2_.created_at as created_4_12_2_, user2_.email as email5_12_2_, user2_.first_name as first_na6_12_2_, user2_.gender as gender7_12_2_, user2_.last_name as last_nam8_12_2_, user2_.password as password9_12_2_, user2_.picture as picture10_12_2_, user2_.updated_at as updated11_12_2_, user2_.username as usernam12_12_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c09b026]
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae68c83]
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.766 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d71fb6a]
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.books
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5083bc5f]
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b42b418]
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@791ab4b1]
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ed8a3b]
[DEBUG] 2020-04-04 14:49:38.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-04-04 14:49:38.769 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1841a59d]
[DEBUG] 2020-04-04 14:49:38.769 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bd20f9]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.musics
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a2eb3a3]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ab488f]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6537a2a]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@698628f1]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.shortStories
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36ea3dc9]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fccf4ab]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62d35352]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4a2e59]
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-04-04 14:49:38.770 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5da948ac]
[DEBUG] 2020-04-04 14:49:38.771 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-04-04 14:49:38.772 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.773 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Film.crews].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Film.crews].<elements>.user.books)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Film.crews].<elements>.user.books.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Film.crews].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Film.crews].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.musics, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Film.crews].<elements>.user.musics)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Music, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Film.crews].<elements>.user.musics.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.shortStories, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Film.crews].<elements>.user.shortStories)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.ShortStory, querySpaceUid=<gen:14>, path=[com.streammedia.entity.Film.crews].<elements>.user.shortStories.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:15>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:16>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:17>, path=[com.streammedia.entity.Film.crews].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_3_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_12_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:17>
                         - CompositeQuerySpaceImpl(uid=<gen:17>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_6_0_, crews0_.crew_id as crew_id2_6_0_, crew1_.crew_id as crew_id1_3_1_, crew1_.biography as biograph2_3_1_, crew1_.created_at as created_3_3_1_, crew1_.email as email4_3_1_, crew1_.first_name as first_na5_3_1_, crew1_.last_name as last_nam6_3_1_, crew1_.profession as professi7_3_1_, crew1_.updated_at as updated_8_3_1_, crew1_.user as user9_3_1_, user2_.user_id as user_id1_12_2_, user2_.biography as biograph2_12_2_, user2_.birthdate as birthdat3_12_2_, user2_.created_at as created_4_12_2_, user2_.email as email5_12_2_, user2_.first_name as first_na6_12_2_, user2_.gender as gender7_12_2_, user2_.last_name as last_nam8_12_2_, user2_.password as password9_12_2_, user2_.picture as picture10_12_2_, user2_.updated_at as updated11_12_2_, user2_.username as usernam12_12_2_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id left outer join SM_Users user2_ on crew1_.user=user2_.user_id where crews0_.film_id=?
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3de90434]
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563add36]
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.774 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_8_1_}

[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_7_0_, genres0_.genre_id as genre_id2_7_0_, genre1_.genre_id as genre_id1_8_1_, genre1_.created_at as created_2_8_1_, genre1_.description as descript3_8_1_, genre1_.title as title4_8_1_, genre1_.updated_at as updated_5_8_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3515e1a0]
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35c65959]
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : ISBN
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : categories
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62d2fb66]
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d96af4]
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : edition
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : pageNumber
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publisher
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.books)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.books, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.books])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Book, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.books].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Book.categories, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.books].<elements>.categories)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.BkCategory, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.books].<elements>.categories.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.books)
          - SQL table alias mapping - books0_
          - alias suffix - 0_
          - suffixed key columns - {user13_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - book_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Book)
                - SQL table alias mapping - books0_
                - alias suffix - 1_
                - suffixed key columns - {book_id1_1_1_}

[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.books: select books0_.user as user13_1_0_, books0_.book_id as book_id1_1_0_, books0_.book_id as book_id1_1_1_, books0_.isbn as isbn2_1_1_, books0_.author as author3_1_1_, books0_.cover as cover4_1_1_, books0_.created_at as created_5_1_1_, books0_.edition as edition6_1_1_, books0_.page_number as page_num7_1_1_, books0_.pub_date as pub_date8_1_1_, books0_.publisher as publishe9_1_1_, books0_.summary as summary10_1_1_, books0_.title as title11_1_1_, books0_.updated_at as updated12_1_1_, books0_.user as user13_1_1_ from Book books0_ where books0_.user=?
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@302814a6]
[DEBUG] 2020-04-04 14:49:38.775 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48e9defb]
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63c8ed33]
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d0f9b7]
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@707a070b]
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c0f42d]
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-04-04 14:49:38.776 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-04-04 14:49:38.778 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-04-04 14:49:38.778 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-04-04 14:49:38.778 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-04-04 14:49:38.779 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-04-04 14:49:38.779 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_5_1_}

[DEBUG] 2020-04-04 14:49:38.779 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_5_0_, films0_.film_id as film_id1_5_0_, films0_.film_id as film_id1_5_1_, films0_.cover as cover2_5_1_, films0_.created_at as created_3_5_1_, films0_.director as director4_5_1_, films0_.duration as duration5_5_1_, films0_.episode as episode6_5_1_, films0_.link as link7_5_1_, films0_.pub_date as pub_date8_5_1_, films0_.summary as summary9_5_1_, films0_.title as title10_5_1_, films0_.updated_at as updated11_5_1_, films0_.user as user13_5_1_, films0_.video as video12_5_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-04-04 14:49:38.992 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-04-04 14:49:38.992 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-04-04 14:49:38.993 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-04-04 14:49:39.055 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-04-04 14:49:39.056 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-04-04 14:49:39.068 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-04-04 14:49:39.069 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-04-04 14:49:39.073 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@61b12c28
[DEBUG] 2020-04-04 14:49:39.085 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: bad83595-fd4e-448c-9299-f031fb6396da (<unnamed>)
[DEBUG] 2020-04-04 14:49:39.086 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-04-04 14:49:39.276 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-04-04 14:49:39.329 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 14:49:39.352 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@59a42633
[DEBUG] 2020-04-04 14:49:39.384 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 14:49:39.391 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 14:49:39.396 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'streammedia'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-04-04 14:49:39.448 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-04-04 14:49:39.470 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-04-04 14:49:39.471 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-04-04 14:49:39.475 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-04-04 14:49:39.477 [http-nio-8080-exec-5] DotNode - getDataType() : username -> org.hibernate.type.StringType@13d0ab7a
[DEBUG] 2020-04-04 14:49:39.478 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
[DEBUG] 2020-04-04 14:49:39.481 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-04-04 14:49:39.482 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
[DEBUG] 2020-04-04 14:49:39.501 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-04-04 14:49:39.501 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-04-04 14:49:39.502 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_12_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_12_, user0_.birthdate as birthdat3_12_, user0_.created_at as created_4_12_, user0_.email as email5_12_, user0_.first_name as first_na6_12_, user0_.gender as gender7_12_, user0_.last_name as last_nam8_12_, user0_.password as password9_12_, user0_.picture as picture10_12_, user0_.updated_at as updated11_12_, user0_.username as usernam12_12_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=com.streammedia.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@13d0ab7a}

[DEBUG] 2020-04-04 14:49:39.502 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 14:49:39.508 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 14:49:39.508 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_12_, user0_.biography as biograph2_12_, user0_.birthdate as birthdat3_12_, user0_.created_at as created_4_12_, user0_.email as email5_12_, user0_.first_name as first_na6_12_, user0_.gender as gender7_12_, user0_.last_name as last_nam8_12_, user0_.password as password9_12_, user0_.picture as picture10_12_, user0_.updated_at as updated11_12_, user0_.username as usernam12_12_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-04-04 14:49:39.508 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-04-04 14:49:39.549 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_12_, user0_.biography as biograph2_12_, user0_.birthdate as birthdat3_12_, user0_.created_at as created_4_12_, user0_.email as email5_12_, user0_.first_name as first_na6_12_, user0_.gender as gender7_12_, user0_.last_name as last_nam8_12_, user0_.password as password9_12_, user0_.picture as picture10_12_, user0_.updated_at as updated11_12_, user0_.username as usernam12_12_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-04-04 14:49:39.581 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-04-04 14:49:39.585 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:39.598 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:39.599 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = Biography
[DEBUG] 2020-04-04 14:49:39.599 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.599 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = 1999-04-13
[DEBUG] 2020-04-04 14:49:39.599 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.599 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.599 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.612 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 14:49:39.612 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.612 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.613 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Jeanne
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Uwimana
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `musics` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`musics`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = images/admin/avataaars4.png
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.614 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `shortStories` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`shortStories`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-16
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3d57f31f
[DEBUG] 2020-04-04 14:49:39.615 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.616 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:39.643 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=admin, email=admin@streammedia.com, password=466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78, firstName=Jeanne, lastName=Uwimana, birthdate=1999-04-13, picture=images/admin/avataaars4.png, gender=Female, biography=Biography)]
[DEBUG] 2020-04-04 14:49:39.643 [http-nio-8080-exec-5] SQL - select roles0_.username as username5_10_0_, roles0_.role_id as role_id1_10_0_, roles0_.role_id as role_id1_10_1_, roles0_.created_at as created_2_10_1_, roles0_.name as name3_10_1_, roles0_.updated_at as updated_4_10_1_, roles0_.username as username5_10_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-04-04 14:49:39.647 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=admin, email=admin@streammedia.com, password=466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78, firstName=Jeanne, lastName=Uwimana, birthdate=1999-04-13, picture=images/admin/avataaars4.png, gender=Female, biography=Biography)]
[DEBUG] 2020-04-04 14:49:39.651 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 14:49:39.655 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:39.663 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-16
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)
[DEBUG] 2020-04-04 14:49:39.664 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:39.666 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-04-04 14:49:39.666 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_12_1_, user0_.biography as biograph2_12_1_, user0_.birthdate as birthdat3_12_1_, user0_.created_at as created_4_12_1_, user0_.email as email5_12_1_, user0_.first_name as first_na6_12_1_, user0_.gender as gender7_12_1_, user0_.last_name as last_nam8_12_1_, user0_.password as password9_12_1_, user0_.picture as picture10_12_1_, user0_.updated_at as updated11_12_1_, user0_.username as usernam12_12_1_, roles1_.username as username5_10_3_, roles1_.role_id as role_id1_10_3_, roles1_.role_id as role_id1_10_0_, roles1_.created_at as created_2_10_0_, roles1_.name as name3_10_0_, roles1_.updated_at as updated_4_10_0_, roles1_.username as username5_10_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-04-04 14:49:39.668 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-04-04 14:49:39.668 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:39.669 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:39.669 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:39.669 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-04-04 14:49:39.670 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 14:49:39.672 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:39.673 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-04-04 14:49:39.673 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:39.673 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 14:49:39.673 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-04 14:49:39.678 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 14:49:41.767 [http-nio-8080-exec-6] SQL - select film0_.film_id as film_id1_5_0_, film0_.cover as cover2_5_0_, film0_.created_at as created_3_5_0_, film0_.director as director4_5_0_, film0_.duration as duration5_5_0_, film0_.episode as episode6_5_0_, film0_.link as link7_5_0_, film0_.pub_date as pub_date8_5_0_, film0_.summary as summary9_5_0_, film0_.title as title10_5_0_, film0_.updated_at as updated11_5_0_, film0_.user as user13_5_0_, film0_.video as video12_5_0_, crews1_.film_id as film_id1_6_1_, crew2_.crew_id as crew_id2_6_1_, crew2_.crew_id as crew_id1_3_2_, crew2_.biography as biograph2_3_2_, crew2_.created_at as created_3_3_2_, crew2_.email as email4_3_2_, crew2_.first_name as first_na5_3_2_, crew2_.last_name as last_nam6_3_2_, crew2_.profession as professi7_3_2_, crew2_.updated_at as updated_8_3_2_, crew2_.user as user9_3_2_, user3_.user_id as user_id1_12_3_, user3_.biography as biograph2_12_3_, user3_.birthdate as birthdat3_12_3_, user3_.created_at as created_4_12_3_, user3_.email as email5_12_3_, user3_.first_name as first_na6_12_3_, user3_.gender as gender7_12_3_, user3_.last_name as last_nam8_12_3_, user3_.password as password9_12_3_, user3_.picture as picture10_12_3_, user3_.updated_at as updated11_12_3_, user3_.username as usernam12_12_3_, genres4_.film_id as film_id1_7_4_, genre5_.genre_id as genre_id2_7_4_, genre5_.genre_id as genre_id1_8_5_, genre5_.created_at as created_2_8_5_, genre5_.description as descript3_8_5_, genre5_.title as title4_8_5_, genre5_.updated_at as updated_5_8_5_, user6_.user_id as user_id1_12_6_, user6_.biography as biograph2_12_6_, user6_.birthdate as birthdat3_12_6_, user6_.created_at as created_4_12_6_, user6_.email as email5_12_6_, user6_.first_name as first_na6_12_6_, user6_.gender as gender7_12_6_, user6_.last_name as last_nam8_12_6_, user6_.password as password9_12_6_, user6_.picture as picture10_12_6_, user6_.updated_at as updated11_12_6_, user6_.username as usernam12_12_6_, roles7_.username as username5_10_7_, roles7_.role_id as role_id1_10_7_, roles7_.role_id as role_id1_10_8_, roles7_.created_at as created_2_10_8_, roles7_.name as name3_10_8_, roles7_.updated_at as updated_4_10_8_, roles7_.username as username5_10_8_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id left outer join SM_Users user3_ on crew2_.user=user3_.user_id left outer join FilmGenre genres4_ on film0_.film_id=genres4_.film_id left outer join Genre genre5_ on genres4_.genre_id=genre5_.genre_id left outer join SM_Users user6_ on film0_.user=user6_.user_id left outer join Role roles7_ on user6_.username=roles7_.username where film0_.film_id=?
[DEBUG] 2020-04-04 14:49:41.782 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 14:49:41.785 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 14:49:41.801 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.Film.crews#1]
[DEBUG] 2020-04-04 14:49:41.802 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.Film.genres#1]
[DEBUG] 2020-04-04 14:49:41.802 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:41.802 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-04-04 14:49:41.802 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.Film.crews#1]
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.Film.genres#1]
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Film#1]
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `cover` : value = 
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-27
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `director` : value = James Doe
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`director`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `duration` : value = 01:23:02
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `episode` : value = 
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`episode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `genres` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`genres`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.803 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-03-27T12:44:38
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `summary` : value = Some data
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Hope of Tomorrow
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-27
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `video` : value = 
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Film#1]
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Crew#1]
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `biography` : value = This is sales.
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-15
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = llarson@example.com
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Lisa
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Larson
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `profession` : value = Sales
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`profession`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-27
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Crew#1]
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `biography` : value = Biography
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `birthdate` : value = 1999-04-13
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.804 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Jeanne
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Uwimana
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `musics` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`musics`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = 466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `picture` : value = images/admin/avataaars4.png
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `shortStories` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`shortStories`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-16
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6d621ee9
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-14
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Stages of 'falling in love' and the subsequent break-up and reconciliation, forbidden love, true love, fairy tales.
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.805 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Romance
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-27
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-16
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.806 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)
[DEBUG] 2020-04-04 14:49:41.807 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.807 [http-nio-8080-exec-6] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-04-04 14:49:41.807 [http-nio-8080-exec-6] SQL - select user0_.user_id as user_id1_12_1_, user0_.biography as biograph2_12_1_, user0_.birthdate as birthdat3_12_1_, user0_.created_at as created_4_12_1_, user0_.email as email5_12_1_, user0_.first_name as first_na6_12_1_, user0_.gender as gender7_12_1_, user0_.last_name as last_nam8_12_1_, user0_.password as password9_12_1_, user0_.picture as picture10_12_1_, user0_.updated_at as updated11_12_1_, user0_.username as usernam12_12_1_, roles1_.username as username5_10_3_, roles1_.role_id as role_id1_10_3_, roles1_.role_id as role_id1_10_0_, roles1_.created_at as created_2_10_0_, roles1_.name as name3_10_0_, roles1_.updated_at as updated_4_10_0_, roles1_.username as username5_10_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-04-04 14:49:41.810 [http-nio-8080-exec-6] Loader - Result set row: 0
[DEBUG] 2020-04-04 14:49:41.810 [http-nio-8080-exec-6] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:41.812 [http-nio-8080-exec-6] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:41.812 [http-nio-8080-exec-6] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] Loader - Done entity load
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Crew#2]
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `biography` : value = I love create media content.
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-27
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `email` : value = gdiaz@example.com
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `firstName` : value = Gustavo
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `lastName` : value = Diaz
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `profession` : value = Film Maker
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`profession`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-27
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Crew#2]
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.Film.crews#1]
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.Film.crews
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.Film.genres#1]
[DEBUG] 2020-04-04 14:49:41.813 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.Film.genres
[DEBUG] 2020-04-04 14:49:41.814 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:41.814 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-04-04 14:49:41.814 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:41.814 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 14:49:41.814 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Film#1
[DEBUG] 2020-04-04 14:49:41.815 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-04-04 14:49:51.934 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-04-04 14:49:51.937 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_12_, user0_.biography as biograph2_12_, user0_.birthdate as birthdat3_12_, user0_.created_at as created_4_12_, user0_.email as email5_12_, user0_.first_name as first_na6_12_, user0_.gender as gender7_12_, user0_.last_name as last_nam8_12_, user0_.password as password9_12_, user0_.picture as picture10_12_, user0_.updated_at as updated11_12_, user0_.username as usernam12_12_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-04-04 14:49:51.949 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-04-04 14:49:51.949 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `biography` : value = Biography
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `birthdate` : value = 1999-04-13
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `books` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`books`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Jeanne
[DEBUG] 2020-04-04 14:49:51.950 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Uwimana
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `musics` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`musics`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = 466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `picture` : value = images/admin/avataaars4.png
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `shortStories` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`shortStories`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-16
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3942596e
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=admin, email=admin@streammedia.com, password=466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78, firstName=Jeanne, lastName=Uwimana, birthdate=1999-04-13, picture=images/admin/avataaars4.png, gender=Female, biography=Biography)]
[DEBUG] 2020-04-04 14:49:51.951 [http-nio-8080-exec-10] SQL - select roles0_.username as username5_10_0_, roles0_.role_id as role_id1_10_0_, roles0_.role_id as role_id1_10_1_, roles0_.created_at as created_2_10_1_, roles0_.name as name3_10_1_, roles0_.updated_at as updated_4_10_1_, roles0_.username as username5_10_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-04-04 14:49:51.953 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=admin, email=admin@streammedia.com, password=466881cdec1517cb3f64f996221c406f4052cc8a2f7f1b55f4ff384cba64746b$1$7f8e02e89785d422ea2d90d30722781003ccc4eb0ba7e44bfdf7cf76f195cd78, firstName=Jeanne, lastName=Uwimana, birthdate=1999-04-13, picture=images/admin/avataaars4.png, gender=Female, biography=Biography)]
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-10
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-16
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.954 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)
[DEBUG] 2020-04-04 14:49:51.955 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-04-04 14:49:51.955 [http-nio-8080-exec-10] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-04-04 14:49:51.955 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_12_1_, user0_.biography as biograph2_12_1_, user0_.birthdate as birthdat3_12_1_, user0_.created_at as created_4_12_1_, user0_.email as email5_12_1_, user0_.first_name as first_na6_12_1_, user0_.gender as gender7_12_1_, user0_.last_name as last_nam8_12_1_, user0_.password as password9_12_1_, user0_.picture as picture10_12_1_, user0_.updated_at as updated11_12_1_, user0_.username as usernam12_12_1_, roles1_.username as username5_10_3_, roles1_.role_id as role_id1_10_3_, roles1_.role_id as role_id1_10_0_, roles1_.created_at as created_2_10_0_, roles1_.name as name3_10_0_, roles1_.updated_at as updated_4_10_0_, roles1_.username as username5_10_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-04-04 14:49:51.956 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-04-04 14:49:51.956 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null)]
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] Loader - Done entity load
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-04-04 14:49:51.957 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
